From 575b68536cb4e44a42de2d76b5702f13f8557d36 Mon Sep 17 00:00:00 2001
From: Lavanya Suresh <lavaks@codeaurora.org>
Date: Fri, 26 Mar 2021 12:59:10 +0530
Subject: [PATCH] hostapd: Fill 6G TPE IE for non-US countries

Currently PSD power limits for 6GHz Regular and subordinate
clients in 6G TPE IE are hardcoded with the values defined
for country US, by default.

It is extended to hardcode proper PSD values for all 6G countries
and supported AP power modes.

PSD values will be fetched from kernel data instead of hardcoded
values, after complete regulatory support is added for 6G.

Signed-off-by: Lavanya Suresh <lavaks@codeaurora.org>
---
 src/ap/ap_config.h           |  1 +
 src/ap/ieee802_11.c          | 43 +++++++++++++++++++++++++++++++++++++++++--
 src/common/ieee802_11_defs.h | 25 ++++++++++++++++++++++---
 3 files changed, 64 insertions(+), 5 deletions(-)

--- a/src/ap/ieee802_11.c
+++ b/src/ap/ieee802_11.c
@@ -7100,6 +7100,60 @@ void ieee802_11_rx_from_unknown(struct h
 			WLAN_REASON_CLASS3_FRAME_FROM_NONASSOC_STA);
 }
 
+/*
+ * TODO: Extract power limits from channel data after 6G regulatory
+ *     support.
+ */
+#define REG_FCC_PSD_MAX_TXPOWER_FOR_DEFAULT_CLIENT_LPI                 (-1)    /* dBm/MHz */
+#define REG_FCC_PSD_MAX_TXPOWER_FOR_SUBORDINATE_CLIENT_LPI             5       /* dBm/MHz */
+#define REG_FCC_PSD_MAX_TXPOWER_SP                                     17      /* dBm/MHz */
+
+#define REG_ETSI2_PSD_MAX_TXPOWER_DEFAULT_SUBORDINATE_CLIENT_LPI       11      /* dBm/MHz */
+#define REG_ETSI2_PSD_MAX_TXPOWER_DEFAULT_SUBORDINATE_CLIENT_VLP       11      /* dBm/MHz */
+
+#define REG_APL1_PSD_MAX_TXPOWER_DEFAULT_SUBORDINATE_CLIENT_LPI         2      /* dBm/MHz */
+#define REG_APL1_PSD_MAX_TXPOWER_DEFAULT_SUBORDINATE_CLIENT_VLP         1      /* dBm/MHz */
+
+static u8 hostapd_get_6g_tx_power(struct hostapd_data *hapd, u8 ap_type, u8 tx_pwr_cat)
+{
+	char country[3];
+
+	if (hapd->iconf->country[0] != '\0' && hapd->iconf->country[1] != '\0')
+		memcpy(country, hapd->iconf->country, 3);
+	else
+		hostapd_get_country(hapd, country);
+
+	if ((memcmp(country, "US", 2) == 0) || (memcmp(country, "CL", 2) == 0)) {
+		/* FCC Regdomain */
+		if (ap_type == HE_REG_INFO_6GHZ_AP_TYPE_INDOOR && tx_pwr_cat == REG_DEFAULT_CLIENT)
+			return REG_FCC_PSD_MAX_TXPOWER_FOR_DEFAULT_CLIENT_LPI;
+		else if (ap_type == HE_REG_INFO_6GHZ_AP_TYPE_INDOOR)
+			return REG_FCC_PSD_MAX_TXPOWER_FOR_SUBORDINATE_CLIENT_LPI;
+		else if (ap_type == HE_REG_INFO_6GHZ_AP_TYPE_SP)
+			return REG_FCC_PSD_MAX_TXPOWER_SP;
+
+	} else if (memcmp(country, "GB", 2) == 0) {
+		/* ETSI2 Regdomain */
+		if (ap_type == HE_REG_INFO_6GHZ_AP_TYPE_INDOOR)
+			return REG_ETSI2_PSD_MAX_TXPOWER_DEFAULT_SUBORDINATE_CLIENT_LPI;
+		else if (ap_type == HE_REG_INFO_6GHZ_AP_TYPE_VLP)
+			return REG_ETSI2_PSD_MAX_TXPOWER_DEFAULT_SUBORDINATE_CLIENT_VLP;
+
+	} else if (memcmp(country, "KR", 2) == 0) {
+		/* APL1 Regdomain */
+		if (ap_type == HE_REG_INFO_6GHZ_AP_TYPE_INDOOR)
+			return REG_APL1_PSD_MAX_TXPOWER_DEFAULT_SUBORDINATE_CLIENT_LPI;
+		else if (ap_type == HE_REG_INFO_6GHZ_AP_TYPE_VLP)
+			return REG_APL1_PSD_MAX_TXPOWER_DEFAULT_SUBORDINATE_CLIENT_VLP;
+	} else {
+		wpa_printf(MSG_DEBUG, "Invalid 6 GHz regdomain/country(%s)", country);
+		return 0;
+	}
+
+	wpa_printf(MSG_DEBUG, "Configured AP type(%d) is not supported for the country(%s) currently set",
+		   ap_type, country);
+	return 0;
+}
 
 static u8 * hostapd_add_tpe_info(u8 *eid, u8 tx_pwr_count,
 				 enum max_tx_pwr_interpretation tx_pwr_intrpn,
@@ -7125,14 +7179,6 @@ static u8 * hostapd_add_tpe_info(u8 *eid
 	return eid;
 }
 
-
-/*
- * TODO: Extract power limits from channel data after 6G regulatory
- *	support.
- */
-#define REG_PSD_MAX_TXPOWER_FOR_DEFAULT_CLIENT      (-1) /* dBm/MHz */
-#define REG_PSD_MAX_TXPOWER_FOR_SUBORDINATE_CLIENT  5    /* dBm/MHz */
-
 u8 * hostapd_eid_txpower_envelope(struct hostapd_data *hapd, u8 *eid)
 {
 	struct hostapd_iface *iface = hapd->iface;
@@ -7178,7 +7224,9 @@ u8 * hostapd_eid_txpower_envelope(struct
 		if (hapd->iconf->reg_def_cli_eirp_psd != -1)
 			tx_pwr = hapd->iconf->reg_def_cli_eirp_psd;
 		else
-			tx_pwr = REG_PSD_MAX_TXPOWER_FOR_DEFAULT_CLIENT * 2;
+			tx_pwr = (hostapd_get_6g_tx_power(hapd,
+							  iconf->he_6ghz_reg_pwr_type,
+							  REG_DEFAULT_CLIENT) * 2);
 
 		eid = hostapd_add_tpe_info(eid, tx_pwr_count, tx_pwr_intrpn,
 					   REG_DEFAULT_CLIENT, tx_pwr);
@@ -7190,7 +7238,9 @@ u8 * hostapd_eid_txpower_envelope(struct
 			if (hapd->iconf->reg_sub_cli_eirp_psd != -1)
 				tx_pwr = hapd->iconf->reg_sub_cli_eirp_psd;
 			else
-				tx_pwr = REG_PSD_MAX_TXPOWER_FOR_SUBORDINATE_CLIENT * 2;
+				tx_pwr = (hostapd_get_6g_tx_power(hapd,
+								  iconf->he_6ghz_reg_pwr_type,
+								  REG_SUBORDINATE_CLIENT) * 2);
 			eid = hostapd_add_tpe_info(eid, tx_pwr_count,
 						   tx_pwr_intrpn,
 						   REG_SUBORDINATE_CLIENT,
