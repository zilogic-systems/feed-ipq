From 5f78902ce0ec567026ea056bb8ed3fbd08d55a88 Mon Sep 17 00:00:00 2001
From: Harshitha Prem <quic_hprem@quicinc.com>
Date: Sat, 19 Nov 2022 20:47:14 +0530
Subject: [PATCH] hostapd: support background DFS

when any user application triggers background DFS,
example through iw command, it might be considered as
CAC on ongoing channel and hostapd might go to DFS state.
Hence, added changes to parse radar background
nl80211 attribute.

Signed-off-by: Harshitha Prem <quic_hprem@quicinc.com>
---
 src/ap/dfs.c                       | 16 +++++++++-------
 src/ap/dfs.h                       |  4 ++--
 src/ap/drv_callbacks.c             |  6 +++---
 src/drivers/driver.h               |  1 +
 src/drivers/driver_nl80211_event.c |  4 ++++
 wpa_supplicant/ap.c                |  9 ++++++---
 6 files changed, 25 insertions(+), 15 deletions(-)

--- a/src/ap/dfs.c
+++ b/src/ap/dfs.c
@@ -1356,7 +1356,7 @@ hostapd_dfs_start_channel_switch_backgro
 
 int hostapd_dfs_complete_cac(struct hostapd_iface *iface, int success, int freq,
 			     int ht_enabled, int chan_offset, int chan_width,
-			     int cf1, int cf2)
+			     int cf1, int cf2, bool is_background)
 {
 	wpa_msg(iface->bss[0]->msg_ctx, MSG_INFO, DFS_EVENT_CAC_COMPLETED
 		"success=%d freq=%d ht_enabled=%d chan_offset=%d chan_width=%d cf1=%d cf2=%d radar_detected=%d",
@@ -1390,13 +1390,14 @@ int hostapd_dfs_complete_cac(struct host
 			 * selected channel and configure the background chain
 			 * to a new DFS channel.
 			 */
-			if (hostapd_dfs_is_background_event(iface, freq)) {
+			if (is_background || hostapd_dfs_is_background_event(iface, freq)) {
 				iface->radar_background.cac_started = 0;
 				if (!iface->radar_background.temp_ch)
 					return 0;
 
 				iface->radar_background.temp_ch = 0;
-				return hostapd_dfs_start_channel_switch_background(iface);
+				if (iface->conf->enable_background_radar)
+					return hostapd_dfs_start_channel_switch_background(iface);
 			}
 
 			/*
@@ -1415,9 +1416,10 @@ int hostapd_dfs_complete_cac(struct host
 				iface->cac_started = 0;
 			}
 		}
-	} else if (hostapd_dfs_is_background_event(iface, freq)) {
+	} else if (is_background || hostapd_dfs_is_background_event(iface, freq)) {
 		iface->radar_background.cac_started = 0;
-		hostapd_dfs_update_background_chain(iface);
+		if (iface->conf->enable_background_radar)
+			hostapd_dfs_update_background_chain(iface);
 	}
 
 	iface->radar_detected = false;
@@ -1778,9 +1780,9 @@ int hostapd_is_dfs_required(struct hosta
 
 int hostapd_dfs_start_cac(struct hostapd_iface *iface, int freq,
 			  int ht_enabled, int chan_offset, int chan_width,
-			  int cf1, int cf2)
+			  int cf1, int cf2, bool is_background)
 {
-	if (hostapd_dfs_is_background_event(iface, freq)) {
+	if (is_background || hostapd_dfs_is_background_event(iface, freq)) {
 		iface->radar_background.cac_started = 1;
 	} else {
 		/* This is called when the driver indicates that an offloaded
--- a/src/ap/dfs.h
+++ b/src/ap/dfs.h
@@ -20,7 +20,7 @@ int hostapd_handle_dfs(struct hostapd_if
 
 int hostapd_dfs_complete_cac(struct hostapd_iface *iface, int success, int freq,
 			     int ht_enabled, int chan_offset, int chan_width,
-			     int cf1, int cf2);
+			     int cf1, int cf2, bool is_background);
 int hostapd_dfs_pre_cac_expired(struct hostapd_iface *iface, int freq,
 				int ht_enabled, int chan_offset, int chan_width,
 				int cf1, int cf2);
@@ -35,7 +35,7 @@ int hostapd_is_dfs_required(struct hosta
 int hostapd_is_dfs_chan_available(struct hostapd_iface *iface);
 int hostapd_dfs_start_cac(struct hostapd_iface *iface, int freq,
 			  int ht_enabled, int chan_offset, int chan_width,
-			  int cf1, int cf2);
+			  int cf1, int cf2, bool is_background);
 int hostapd_handle_dfs_offload(struct hostapd_iface *iface);
 int hostapd_is_dfs_overlap(struct hostapd_iface *iface, enum chan_width width,
 			   int center_freq);
--- a/src/ap/drv_callbacks.c
+++ b/src/ap/drv_callbacks.c
@@ -2262,7 +2262,7 @@ static void hostapd_event_dfs_cac_finish
 	wpa_printf(MSG_DEBUG, "DFS CAC finished on %d MHz", radar->freq);
 	hostapd_dfs_complete_cac(hapd->iface, 1, radar->freq, radar->ht_enabled,
 				 radar->chan_offset, radar->chan_width,
-				 radar->cf1, radar->cf2);
+				 radar->cf1, radar->cf2, radar->is_background);
 }
 
 
@@ -2272,7 +2272,7 @@ static void hostapd_event_dfs_cac_aborte
 	wpa_printf(MSG_DEBUG, "DFS CAC aborted on %d MHz", radar->freq);
 	hostapd_dfs_complete_cac(hapd->iface, 0, radar->freq, radar->ht_enabled,
 				 radar->chan_offset, radar->chan_width,
-				 radar->cf1, radar->cf2);
+				 radar->cf1, radar->cf2, radar->is_background);
 }
 
 
@@ -2292,7 +2292,7 @@ static void hostapd_event_dfs_cac_starte
 	wpa_printf(MSG_DEBUG, "DFS offload CAC started on %d MHz", radar->freq);
 	hostapd_dfs_start_cac(hapd->iface, radar->freq, radar->ht_enabled,
 			      radar->chan_offset, radar->chan_width,
-			      radar->cf1, radar->cf2);
+			      radar->cf1, radar->cf2, radar->is_background);
 }
 
 #endif /* NEED_AP_MLME */
--- a/src/drivers/driver_nl80211_event.c
+++ b/src/drivers/driver_nl80211_event.c
@@ -2558,6 +2558,10 @@ static void nl80211_radar_event(struct w
 		}
 	}
 
+	if ((drv->capa.flags2 & WPA_DRIVER_FLAGS2_RADAR_BACKGROUND) &&
+	    tb[NL80211_ATTR_RADAR_BACKGROUND]) {
+		data.dfs_event.is_background = true;
+	}
 	/* Get VHT params */
 	if (tb[NL80211_ATTR_CHANNEL_WIDTH])
 		data.dfs_event.chan_width =
--- a/wpa_supplicant/ap.c
+++ b/wpa_supplicant/ap.c
@@ -2165,7 +2165,8 @@ void wpas_ap_event_dfs_cac_started(struc
 	wpa_printf(MSG_DEBUG, "DFS CAC started on %d MHz", radar->freq);
 	hostapd_dfs_start_cac(iface, radar->freq,
 			      radar->ht_enabled, radar->chan_offset,
-			      radar->chan_width, radar->cf1, radar->cf2);
+			      radar->chan_width, radar->cf1, radar->cf2,
+			      radar->is_background);
 }
 
 
@@ -2181,7 +2182,8 @@ void wpas_ap_event_dfs_cac_finished(stru
 	wpa_printf(MSG_DEBUG, "DFS CAC finished on %d MHz", radar->freq);
 	hostapd_dfs_complete_cac(iface, 1, radar->freq,
 				 radar->ht_enabled, radar->chan_offset,
-				 radar->chan_width, radar->cf1, radar->cf2);
+				 radar->chan_width, radar->cf1, radar->cf2,
+				 radar->is_background);
 }
 
 
@@ -2197,7 +2199,8 @@ void wpas_ap_event_dfs_cac_aborted(struc
 	wpa_printf(MSG_DEBUG, "DFS CAC aborted on %d MHz", radar->freq);
 	hostapd_dfs_complete_cac(iface, 0, radar->freq,
 				 radar->ht_enabled, radar->chan_offset,
-				 radar->chan_width, radar->cf1, radar->cf2);
+				 radar->chan_width, radar->cf1, radar->cf2,
+				 radar->is_background);
 }
 
 
--- a/src/drivers/driver.h
+++ b/src/drivers/driver.h
@@ -6872,6 +6872,7 @@ union wpa_event_data {
 		int cf2;
 		int link_id;
 		u16 radar_bitmap;
+		bool is_background;
 	} dfs_event;
 
 	/**
