From f0ec4fbe637b87e21ae5443318be5e322cc6f895 Mon Sep 17 00:00:00 2001
From: Dinesh Karthikeyan <quic_dinek@quicinc.com>
Date: Thu, 9 Jun 2022 11:42:34 +0530
Subject: [PATCH] hostapd: Add support to enable/disable bss color collision
 detection

Add color collision detection parameters to provide user config
option to enable or disable it.

Signed-off-by: Dinesh Karthikeyan <quic_dinek@quicinc.com>
---
 hostapd/config_file.c        | 2 ++
 hostapd/hostapd.conf         | 4 ++++
 src/ap/ap_config.c           | 1 +
 src/ap/ap_config.h           | 1 +
 src/ap/beacon.c              | 2 ++
 src/drivers/driver.h         | 6 ++++++
 src/drivers/driver_nl80211.c | 5 ++++-
 src/drivers/nl80211_copy.h   | 3 +++
 8 files changed, 23 insertions(+), 1 deletion(-)

--- a/hostapd/config_file.c
+++ b/hostapd/config_file.c
@@ -3768,6 +3768,8 @@ static int hostapd_config_fill(struct ho
 			conf->he_op.he_bss_color = os_random() % 63 + 1;
 	} else if (os_strcmp(buf, "he_bss_color_partial") == 0) {
 		conf->he_op.he_bss_color_partial = atoi(pos);
+	} else if (os_strcmp(buf, "he_bss_color_collision_detection") == 0) {
+		conf->he_op.he_bss_color_collision_detection = atoi(pos);
 	} else if (os_strcmp(buf, "he_default_pe_duration") == 0) {
 		conf->he_op.he_default_pe_duration = atoi(pos);
 	} else if (os_strcmp(buf, "he_twt_required") == 0) {
--- a/hostapd/hostapd.conf
+++ b/hostapd/hostapd.conf
@@ -881,6 +881,10 @@ wmm_ac_vo_acm=0
 # 0 = not supported
 # 1 = supported
 
+# he_bss_color_collision_detection: disable/enable BSS color collision
+#detection # 0 = disabled # 1 = enabled (default)
+#he_bss_color_collision_detection=1
+
 #he_default_pe_duration: The duration of PE field in an HE PPDU in us
 # Possible values are 0 us (default), 4 us, 8 us, 12 us, and 16 us
 #he_default_pe_duration=0
--- a/src/ap/ap_config.c
+++ b/src/ap/ap_config.c
@@ -286,6 +286,7 @@ struct hostapd_config * hostapd_config_d
 	conf->he_op.he_bss_color_disabled = 1;
 	conf->he_op.he_bss_color_partial = 0;
 	conf->he_op.he_bss_color = os_random() % 63 + 1;
+	conf->he_op.he_bss_color_collision_detection = 1;
 	conf->he_op.he_twt_responder = 1;
 	conf->he_6ghz_max_mpdu = 2;
 	conf->he_6ghz_max_ampdu_len_exp = 7;
--- a/src/ap/ap_config.h
+++ b/src/ap/ap_config.h
@@ -1033,6 +1033,7 @@ struct he_operation {
 	u8 he_bss_color;
 	u8 he_bss_color_disabled;
 	u8 he_bss_color_partial;
+	u8 he_bss_color_collision_detection;
 	u8 he_default_pe_duration;
 	u8 he_twt_required;
 	u8 he_twt_responder;
--- a/src/ap/beacon.c
+++ b/src/ap/beacon.c
@@ -2816,6 +2816,8 @@ static int __ieee802_11_set_beacon(struc
 	params.he_bss_color_partial =
 		hapd->iface->conf->he_op.he_bss_color_partial;
 	params.he_bss_color = hapd->iface->conf->he_op.he_bss_color;
+	params.he_bss_color_collision_detection =
+		hapd->iface->conf->he_op.he_bss_color_collision_detection;
 	twt_he_responder = hostapd_get_he_twt_responder(hapd,
 							IEEE80211_MODE_AP);
 	params.ubpr.unsol_bcast_probe_resp_tmpl =
--- a/src/drivers/driver.h
+++ b/src/drivers/driver.h
@@ -1795,6 +1795,12 @@ struct wpa_driver_ap_params {
 	int he_bss_color;
 
 	/**
+	 * he_bss_color_collision_detection - Whether the BSS Color collision
+	 * detection is enabled
+	 */
+	int he_bss_color_collision_detection;
+
+	/**
 	 * twt_responder - Whether Target Wait Time responder is enabled
 	 */
 	int twt_responder;
--- a/src/drivers/driver_nl80211.c
+++ b/src/drivers/driver_nl80211.c
@@ -5444,7 +5444,10 @@ static int wpa_driver_nl80211_set_ap(voi
 		    (params->he_bss_color_partial &&
 		     nla_put_flag(msg, NL80211_HE_BSS_COLOR_ATTR_PARTIAL)) ||
 		    nla_put_u8(msg, NL80211_HE_BSS_COLOR_ATTR_COLOR,
-			       params->he_bss_color))
+			       params->he_bss_color) ||
+		    (!params->he_bss_color_collision_detection &&
+		     nla_put_flag(msg,
+				  NL80211_HE_BSS_COLOR_ATTR_COLLISION_DETECTION_DISABLED)))
 			goto fail;
 		nla_nest_end(msg, bss_color);
 	}
