From bf7907effe890365697d81fb04f4277859c54405 Mon Sep 17 00:00:00 2001
From: Vignesh C <quic_vignc@quicinc.com>
Date: Sun, 20 Aug 2023 21:59:28 +0530
Subject: [PATCH] hostapd: Add support to send CW change notification

Add hostapd_cli command to notify channel width change to all
associated STA's.

Notify Channel Width action frame for HT STA's.
Spec:(IEEE P802.11-REVme/D3.0 - 9.6.11.2)

Operating Mode Notification action frame for VHT STA's.
Spec:(IEEE P802.11-REVme/D3.0 - 9.6.22.4)

Usage: hostapd_cli notify_cw_change <channel_width>
<channel_width> = 0 - 20 MHz, 1 - 40 MHz, 2 - 80 MHz, 3 - 160 MHz.

Signed-off-by: Vignesh C <quic_vignc@quicinc.com>
---
 hostapd/ctrl_iface.c         | 114 +++++++++++++++++++++++++++++++++++
 hostapd/hostapd_cli.c        |  19 ++++++
 src/ap/ctrl_iface_ap.c       |   2 +-
 src/ap/ctrl_iface_ap.h       |   1 +
 src/common/ieee802_11_defs.h |  17 ++++++
 5 files changed, 152 insertions(+), 1 deletion(-)

--- a/hostapd/ctrl_iface.c
+++ b/hostapd/ctrl_iface.c
@@ -4819,6 +4819,9 @@ static int hostapd_ctrl_iface_receive_pr
 		if (hostapd_ctrl_register_frame(hapd, buf + 16) < 0)
 			reply_len = -1;
 #endif /* CONFIG_TESTING_OPTIONS */
+	} else if (os_strncmp(buf, "NOTIFY_CW_CHANGE ", 17) == 0) {
+		if (hostapd_ctrl_iface_notify_cw_change(hapd, buf + 17))
+			reply_len = -1;
 	} else if (os_strncmp(buf, "CHAN_SWITCH ", 12) == 0) {
 		if (hostapd_ctrl_iface_chan_switch(hapd->iface, buf + 12))
 			reply_len = -1;
--- a/hostapd/hostapd_cli.c
+++ b/hostapd/hostapd_cli.c
@@ -1219,13 +1219,23 @@ static int hostapd_cli_cmd_chan_switch(s
 	return wpa_ctrl_command(ctrl, cmd);
 }
 
-
 static int hostapd_cli_cmd_notify_cw_change(struct wpa_ctrl *ctrl,
 					    int argc, char *argv[])
 {
-	return hostapd_cli_cmd(ctrl, "NOTIFY_CW_CHANGE", 1, argc, argv);
-}
+	char buf[50];
+	int res;
+
+	if (argc < 1) {
+		printf("Invalid 'notify_cw_change' command - no argument given\n"
+		       "usage: <channel_width>\n");
+		return -1;
+	}
 
+	res = os_snprintf(buf, sizeof(buf), "NOTIFY_CW_CHANGE %s", argv[0]);
+	if (os_snprintf_error(sizeof(buf), res))
+		return -1;
+	return wpa_ctrl_command(ctrl, buf);
+}
 
 static int hostapd_cli_cmd_enable(struct wpa_ctrl *ctrl, int argc,
 				  char *argv[])
@@ -1756,6 +1766,8 @@ static const struct hostapd_cli_cmd host
 	{ "send_qos_map_conf", hostapd_cli_cmd_send_qos_map_conf,
 	  hostapd_complete_stations,
 	  "<addr> = send QoS Map Configure frame" },
+	{ "notify_cw_change", hostapd_cli_cmd_notify_cw_change, NULL,
+	  "<channel_width> = 0 - 20 MHz, 1 - 40 MHz, 2 - 80 MHz, 3 - 160 MHz" },
 	{ "chan_switch", hostapd_cli_cmd_chan_switch, NULL,
 	  "<cs_count> <freq> [sec_channel_offset=] [center_freq1=]\n"
 	  "  [center_freq2=] [bandwidth=] [blocktx] [ht|vht]\n"
--- a/src/common/ieee802_11_defs.h
+++ b/src/common/ieee802_11_defs.h
@@ -1415,6 +1415,10 @@ struct ieee80211_ampe_ie {
 #define VHT_OPMODE_CHANNEL_80MHZ		    ((u8) BIT(1))
 #define VHT_OPMODE_CHANNEL_160MHZ		    ((u8) BIT(1) | BIT(2))
 
+#define VHT_OPMODE_CHANNEL_40MHZ		    ((u8) BIT(0))
+#define VHT_OPMODE_CHANNEL_80MHZ		    ((u8) BIT(1))
+#define VHT_OPMODE_CHANNEL_160MHZ		    ((u8) BIT(1) | BIT(2))
+
 /* VHT operation information - channel widths */
 #define CHANWIDTH_USE_HT	0
 #define CHANWIDTH_80MHZ		1
