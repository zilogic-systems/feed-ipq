From bcec542027144ad0e16403f725cd09bde792c261 Mon Sep 17 00:00:00 2001
From: Amith A <quic_amitajit@quicinc.com>
Date: Thu, 18 Jan 2024 14:03:28 +0530
Subject: [PATCH] wpa_supplicant: Add radar detected event wpa_msg print

When a WDS repeater detects radar, the AP VAP is brought down as channel
change is not possible since the STA VAP would still be connected to the
root AP. The STA VAP stays connected to the Root AP on the radar affected
channel till the apsta_mode script brings it down and this is a violation.

In order to prevent this, the STA VAP should be brought down as soon as it
receives the radar-detected event. Add a wpa_msg printing the reception
of DFS_EVENT_RADAR_DETECTED so that the script listening to the events
can bring down the STA VAP when it sees the msg. Also, send the radar
event to supplicant after checking if the VAP is a STA VAP.

Signed-off-by: Amith A <quic_amitajit@quicinc.com>
---
 src/drivers/driver_nl80211_event.c | 7 +++++--
 wpa_supplicant/events.c            | 5 ++++-
 wpa_supplicant/wpa_cli.c           | 2 ++
 3 files changed, 11 insertions(+), 3 deletions(-)

--- a/src/drivers/driver_nl80211_event.c
+++ b/src/drivers/driver_nl80211_event.c
@@ -2685,6 +2685,9 @@ static void nl80211_radar_event(struct i
 	if (tb[NL80211_ATTR_RADAR_BITMAP])
 		data.dfs_event.radar_bitmap = nla_get_u16(tb[NL80211_ATTR_RADAR_BITMAP]);
 
+	if (is_sta_interface(drv->nlmode))
+		return nl80211_process_radar_event(bss, &data, event_type);
+
 	/* Finding a link match based on the frequency.
 	 * If %NL80211_DRV_LINK_ID_NA is returned, then either match was
 	 * not found or the bss could be operating as non-MLO.
--- a/wpa_supplicant/events.c
+++ b/wpa_supplicant/events.c
@@ -6543,9 +6543,12 @@ void supplicant_event(void *ctx, enum wp
 #ifdef CONFIG_AP
 #ifdef NEED_AP_MLME
 	case EVENT_DFS_RADAR_DETECTED:
-		if (data)
+		if (data) {
+			wpa_msg(wpa_s, MSG_INFO, "%s on %d MHz", DFS_EVENT_RADAR_DETECTED,
+				data->dfs_event.freq);
 			wpas_ap_event_dfs_radar_detected(wpa_s,
 							 &data->dfs_event);
+		}
 		break;
 	case EVENT_DFS_NOP_FINISHED:
 		if (data)
--- a/wpa_supplicant/wpa_cli.c
+++ b/wpa_supplicant/wpa_cli.c
@@ -4458,6 +4458,8 @@ static void wpa_cli_action_process(const
 		wpa_cli_exec(action_file, ifname, pos);
 	} else if (str_starts(pos, DPP_EVENT_NET_ACCESS_KEY)) {
 		wpa_cli_exec(action_file, ifname, pos);
+	} else if (str_starts(pos, DFS_EVENT_RADAR_DETECTED)) {
+		wpa_cli_exec(action_file, ifname, pos);
 	} else if (str_starts(pos, WPA_EVENT_TERMINATING)) {
 		printf("wpa_supplicant is terminating - stop monitoring\n");
 		if (!reconnect)
