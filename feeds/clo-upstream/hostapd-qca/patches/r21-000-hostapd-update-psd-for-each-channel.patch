From 1c3b9f4bdd8d3f3c22e0b2f6e8c80c3d7191e698 Mon Sep 17 00:00:00 2001
From: Arunpandi Kannan <quic_arunpand@quicinc.com>
Date: Sun, 3 Mar 2024 22:33:10 +0530
Subject: [PATCH] hostapd: update PSD values for each channel

Support to update the psd values per channel for each power mode specified
in regulatory rules instead of storing it per mode. So that if each
channel have different PSD values, it can be used to update the TPE IE
to have the PSD values of the respective channels.

Signed-off-by: Arunpandi Kannan <quic_arunpand@quicinc.com>
---
 src/ap/ieee802_11.c               | 4 ++--
 src/drivers/driver.h              | 6 +-----
 src/drivers/driver_nl80211_capa.c | 9 +++------
 3 files changed, 6 insertions(+), 13 deletions(-)

--- a/src/ap/ieee802_11.c
+++ b/src/ap/ieee802_11.c
@@ -7604,7 +7604,7 @@ u8 * hostapd_eid_txpower_envelope(struct
 		tx_pwr_count = 0;
 		tx_pwr_intrpn = REGULATORY_CLIENT_EIRP_PSD;
 
-		psd = mode->psd_values[NL80211_REG_REGULAR_CLIENT_LPI +
+		psd = chan->psd_values[NL80211_REG_REGULAR_CLIENT_LPI +
 				       iconf->he_6ghz_reg_pwr_type];
 #ifdef REG_DOM_SUPPORT_TX_POWER
 		if (psd)
@@ -7625,7 +7625,7 @@ u8 * hostapd_eid_txpower_envelope(struct
 		/* Indoor Access Point must include an additional TPE for
 		 * subordinate devices */
 		if (he_reg_is_indoor(iconf->he_6ghz_reg_pwr_type)) {
-			psd = mode->psd_values[NL80211_REG_AP_LPI +
+			psd = chan->psd_values[NL80211_REG_AP_LPI +
 					       iconf->he_6ghz_reg_pwr_type];
 #ifdef REG_DOM_SUPPORT_TX_POWER
 			if (psd)
--- a/src/drivers/driver.h
+++ b/src/drivers/driver.h
@@ -198,6 +198,7 @@ struct hostapd_channel_data {
 	 */
 	const struct ieee80211_240mhz_vendor_oper *eht_240mhz_capab;
 	size_t eht_240mhz_len;
+	s8 psd_values[NL80211_REG_NUM_POWER_MODES];
 };
 
 #define HE_MAC_CAPAB_0		0
@@ -337,11 +338,6 @@ struct hostapd_hw_modes {
 	 */
 	struct eht_capabilities eht_capab[IEEE80211_MODE_NUM];
 
-	/**
-	 * This array is used to store the psd value of each power mode
-	 * supported in 6G band.
-	 */
-	s8 psd_values[NL80211_REG_NUM_POWER_MODES];
 };
 
 
--- a/src/drivers/driver_nl80211_capa.c
+++ b/src/drivers/driver_nl80211_capa.c
@@ -2363,15 +2363,12 @@ static void nl80211_reg_rule_max_eirp(u3
 		for (c = 0; c < mode->num_channels; c++) {
 			struct hostapd_channel_data *chan = &mode->channels[c];
 
-			if (is_6ghz_freq(chan->freq) && config_pwr_mode != pwr_mode)
-				continue;
-
 			if ((u32) chan->freq - 10 >= start &&
-			    (u32) chan->freq + 10 <= end)
+			    (u32) chan->freq + 10 <= end) {
 				chan->max_tx_power = max_eirp;
+				chan->psd_values[pwr_mode] = psd;
+			}
 		}
-		/* Update the psd rules */
-		 mode->psd_values[pwr_mode] = psd;
 	}
 }
 
