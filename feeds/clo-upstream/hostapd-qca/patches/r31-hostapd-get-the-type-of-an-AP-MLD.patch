From f9eae4eba2409e4aa66c070c80c3d984516553e1 Mon Sep 17 00:00:00 2001
From: Mohan Raj <quic_mrajraje@quicinc.com>
Date: Fri, 4 Oct 2024 22:09:21 +0530
Subject: [PATCH] hostapd: get the type of an AP MLD

The MLD Capabilities And Operations sub-field
When transmitted by an AP affiliated with an AP MLD,
the sub-field (bits 7-11) denotes AP MLD Type Indication.
When the Bit 7 of the AP MLD Type Indication subfield is 1
it indicates that the AP MLD is an NSTR type and if its 0 otherwise.
Bits 8-11 of the AP MLD Type Indication subfield are reserved.

Usage: hostapd_cli -i <interface> -l <link> status

Output:
state=ENABLED
phy=phy00
freq=2437
num_sta_non_erp=0
num_sta_no_short_slot_time=0
num_sta_no_short_preamble=0
olbc=0
num_sta_ht_no_gf=1
num_sta_no_ht=0
num_sta_ht_20_mhz=1
num_sta_ht40_intolerant=0
olbc_ht=1
ht_op_mode=0x15
hw_mode=g
cac_time_seconds=0
cac_time_left_seconds=N/A
channel=6
edmg_enable=0
edmg_channel=0
secondary_channel=0
ieee80211n=1
ieee80211ac=1
ieee80211ax=1
ieee80211be=1
beacon_int=100
dtim_period=2
eht_oper_chwidth=0
eht_oper_centr_freq_seg0_idx=0
eht_oper_centr_freq_seg1_idx=0
num_links=3
link_id=0
link_addr=00:03:7f:12:c6:c6
link_id=1
link_addr=00:03:7f:12:b3:b3
link_id=2
link_addr=00:03:7f:12:99:99
ap_mld_type=STR
he_oper_chwidth=0
he_oper_centr_freq_seg0_idx=0
he_oper_centr_freq_seg1_idx=0
he_bss_color=26 (enabled)
vht_oper_chwidth=0
vht_oper_centr_freq_seg0_idx=0
vht_oper_centr_freq_seg1_idx=0
vht_caps_info=33887992
rx_vht_mcs_map=ffaa
tx_vht_mcs_map=ffaa
vht_max_mcs=9
ht_caps_info=19ed
ht_mcs_bitmask=ffffffff000000000000
supported_rates=02 04 0b 16 0c 12 18 24 30 48 60 6c
max_mcs=31
max_rate=540
max_nss=4
max_txpower=30
bss[0]=wlan0
bssid[0]=00:03:7f:12:c6:c6
ssid[0]=OpenWrt1
num_sta[0]=1
mld_addr[0]=00:03:7f:12:c6:c6
mld_id[0]=0
mld_link_id[0]=0

Signed-off-by: Mohan Raj <quic_mrajraje@quicinc.com>
---
 src/ap/ctrl_iface_ap.c       | 9 +++++++++
 src/common/ieee802_11_defs.h | 1 +
 2 files changed, 10 insertions(+)

diff --git a/src/ap/ctrl_iface_ap.c b/src/ap/ctrl_iface_ap.c
index 554e294..71a7dd6 100644
--- a/src/ap/ctrl_iface_ap.c
+++ b/src/ap/ctrl_iface_ap.c
@@ -1128,6 +1128,7 @@ int hostapd_ctrl_iface_status(struct hostapd_data *hapd, char *buf,

 		if (hapd->conf->mld_ap) {
 			struct hostapd_data *link_bss;
+			u8 ap_mld_type;

 			ret = os_snprintf(buf + len, buflen - len,
 					  "num_links=%d\n",
@@ -1160,6 +1161,14 @@ int hostapd_ctrl_iface_status(struct hostapd_data *hapd, char *buf,
 					return len;
 				len += ret;
 			}
+			ap_mld_type = ((hapd->iface->mld_mld_capa &
+				      EHT_ML_MLD_CAPA_AP_MLD_TYPE_IND_MASK) >> 7);
+			ret = os_snprintf(buf + len, buflen - len,
+					 "ap_mld_type=%s\n",
+					 ap_mld_type ? "NSTR" : "STR");
+			if (os_snprintf_error(buflen - len, ret))
+				return len;
+			len += ret;
 		}
 	}
 #endif /* CONFIG_IEEE80211BE */
diff --git a/src/common/ieee802_11_defs.h b/src/common/ieee802_11_defs.h
index d0a121c..1d8983e 100644
--- a/src/common/ieee802_11_defs.h
+++ b/src/common/ieee802_11_defs.h
@@ -2930,6 +2930,7 @@ struct eht_ml_basic_common_info {
 #define EHT_ML_MLD_CAPA_TID_TO_LINK_MAP_ALL_TO_ALL    0x0020
 #define EHT_ML_MLD_CAPA_TID_TO_LINK_MAP_ALL_TO_ONE    0x0040
 #define EHT_ML_MLD_CAPA_TID_TO_LINK_MAP_NEG_SUPP_MSK  0x0060
+#define EHT_ML_MLD_CAPA_AP_MLD_TYPE_IND_MASK          0x0080
 #define EHT_ML_MLD_CAPA_FREQ_SEP_FOR_STR_MASK         0x0f80
 #define EHT_ML_MLD_CAPA_AAR_SUPP                      0x1000

--
2.34.1

