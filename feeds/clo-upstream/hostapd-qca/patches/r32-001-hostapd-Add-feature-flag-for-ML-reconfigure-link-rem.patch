From 2edd5209a77d9da234c2d1748472d5fae7b9f629 Mon Sep 17 00:00:00 2001
From: Manish Dharanenthiran <quic_mdharane@quicinc.com>
Date: Mon, 12 Aug 2024 10:11:23 +0530
Subject: [PATCH] hostapd: Add feature flag for ML reconfigure link removal

This is a preparation for supporting Multi-Link reconfigure link removal
procedure[IEEE P802.11be/D7.0 - 35.3.6.3 Removing affiliated APs] for
driver which supports offloaded Multi-Link reconfigure link removal.

ML link removal offloaded drivers will take care of updating
the reconfiguration MLE in self and partner beacons. It also updates
the AP removal timer automatically and notifies once the counter is
expired.

Add feature flag to let the driver announce the offloading capabilities.
If the offloaded flag is not set, then it will follow the existing code
flow of setting the beacon and also updating the probe response or
association response with the ML reconfiguration element.

Signed-off-by: Manish Dharanenthiran <quic_mdharane@quicinc.com>
---
 src/drivers/driver.h              | 2 ++
 src/drivers/driver_nl80211_capa.c | 5 +++++
 src/drivers/nl80211_copy.h        | 1 +
 3 files changed, 8 insertions(+)

--- a/src/drivers/driver.h
+++ b/src/drivers/driver.h
@@ -2462,6 +2462,8 @@ struct wpa_driver_capa {
 #define WPA_DRIVER_FLAGS2_BEACON_RATE_EHT	0x0000000000004000ULL
 /** Driver supports MLO in station/AP mode */
 #define WPA_DRIVER_FLAGS2_MLO			0x0000000000004000ULL
+/** Driver support ML reconfigure link removal offload */
+#define WPA_DRIVER_FLAG2_MLD_LINK_REMOVAL_OFFLOAD 0x0000000000010000ULL
 /** Driver supports minimal scan request probe content  */
 #define WPA_DRIVER_FLAGS2_SCAN_MIN_PREQ         0x0000000000008000ULL
 /** Driver supports SAE authentication offload in STA mode */
--- a/src/drivers/driver_nl80211_capa.c
+++ b/src/drivers/driver_nl80211_capa.c
@@ -727,6 +727,11 @@ static void wiphy_info_ext_feature_flags
 	if (ext_feature_isset(ext_features, len,
 			      NL80211_EXT_FEATURE_DEVICE_BW))
 		info->drv->device_bw = 1;
+
+	if (ext_feature_isset(ext_features, len,
+			      NL80211_EXT_FEATURE_MLD_LINK_REMOVAL_OFFLOAD))
+		capa->flags2 |= WPA_DRIVER_FLAG2_MLD_LINK_REMOVAL_OFFLOAD;
+
 }
 
 
