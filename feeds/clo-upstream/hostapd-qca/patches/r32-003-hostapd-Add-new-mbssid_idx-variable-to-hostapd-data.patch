From 6ba373ab75ae48a50b514eb8bde97138e62c5b7f Mon Sep 17 00:00:00 2001
From: Manish Dharanenthiran <quic_mdharane@quicinc.com>
Date: Mon, 12 Aug 2024 10:35:56 +0530
Subject: [PATCH] hostapd: Add new mbssid_idx variable to hostapd data

With ML reconfigure dynamic link removal or addition support, non-tx
BSS(s) can be dynamically removed from MBSSID list. Currently, while
building beacon or probe response, MBSSID idx will be filled based on
the number of BSS in that particular iface. But, if any non-tx BSS gets
removed from the list, MBSSID idx will be shuffled for other exisitng
BSS as it number of BSS count gets modified while removal. This will
lead to wrong calculation of MBSSID address in the receiver side.

Avoid this by having a new variable named mbssid_idx in hostapd data,
update the index while new BSS generation and use that while generating
beacon or probe responses.

Signed-off-by: Manish Dharanenthiran <quic_mdharane@quicinc.com>
---
 src/ap/hostapd.c    | 11 +++++++++++
 src/ap/hostapd.h    |  1 +
 src/ap/ieee802_11.c |  2 +-
 3 files changed, 13 insertions(+), 1 deletion(-)

--- a/src/ap/hostapd.c
+++ b/src/ap/hostapd.c
@@ -3381,6 +3381,11 @@ struct hostapd_iface * hostapd_init(stru
 		if (hapd == NULL)
 			goto fail;
 		hapd->msg_ctx = hapd;
+		/* mbssid index is needed if any of the link from the mbssid group is
+		 * dynamically removed, will use this index for updating the
+		 * non-transmitting profile in beacon
+		 */
+		hapd->mbssid_idx = i;
 		hostapd_bss_setup_multi_link(hapd, interfaces);
 	}
 
@@ -3508,6 +3513,12 @@ hostapd_interface_init_bss(struct hapd_i
 
 
 		bss_idx = iface->num_bss++;
+		/* mbssid index is needed if any of the link from the mbssid group is
+		 * dynamically removed, will use this index for updating the
+		 * non-transmitting profile in beacon
+		 */
+		hapd->mbssid_idx = bss_idx;
+
 		conf->num_bss--;
 		conf->bss[0] = NULL;
 		hostapd_config_free(conf);
--- a/src/ap/hostapd.h
+++ b/src/ap/hostapd.h
@@ -572,6 +572,7 @@ struct hostapd_data {
 	u64 scan_cookie; /* Scan instance identifier for the ongoing HT40 scan
 			  */
 	bool disable_cu;
+	size_t mbssid_idx;
 };
 
 
--- a/src/ap/ieee802_11.c
+++ b/src/ap/ieee802_11.c
@@ -9687,7 +9687,7 @@ static u8 * hostapd_eid_mbssid_elem(stru
 		*eid++ = WLAN_EID_MULTIPLE_BSSID_INDEX;
 		if (frame_type == WLAN_FC_STYPE_BEACON) {
 			*eid++ = 3;
-			*eid++ = i; /* BSSID Index */
+			*eid++ = bss->mbssid_idx; /* BSSID Index */
 			if (hapd->iconf->mbssid == ENHANCED_MBSSID_ENABLED &&
 			    (conf->dtim_period % elem_count))
 				conf->dtim_period = elem_count;
