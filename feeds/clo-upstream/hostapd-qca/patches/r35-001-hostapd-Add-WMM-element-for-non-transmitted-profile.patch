From a4c1104ad9b08391d5757817b507d15b2b3b2a6e Mon Sep 17 00:00:00 2001
From: Mohan Kumar G <quic_mkumarg@quicinc.com>
Date: Fri, 24 May 2024 10:21:47 +0530
Subject: [PATCH] hostapd: Add WMM element for non-transmitted profile

Currently the Vendor specific element WMM is not present in
MBSSID element. So the WMM parameters for non-transmitted
profile are not advertised.

WMM parameters are BSS specific and require separate WMM
field for transmitting and non-transmitting BSSes

Add WMM element in the non-transmitted profile of the MBSSID
element.

Also make changes to include WMM element in non-inheritence
element if non-Tx WMM is not enabled.

Patch-depdendency: none

Patch-work:

Feature: MBSSID

Signed-off-by: Mohan Kumar G <quic_mkumarg@quicinc.com>
---
 src/ap/ieee802_11.c | 12 +++++++++++-
 src/ap/wmm.c        |  7 +++++++
 src/ap/wmm.h        |  1 +
 3 files changed, 19 insertions(+), 1 deletion(-)

--- a/src/ap/ieee802_11.c
+++ b/src/ap/ieee802_11.c
@@ -9569,6 +9569,13 @@ static size_t hostapd_eid_mbssid_elem_le
 				nontx_profile_len += hostapd_eid_eht_ml_reconfig_len(bss);
 		}
 
+		/* WMM IE */
+		if (bss->conf->wmm_override) {
+			nontx_profile_len += hostapd_eid_wmm_len(bss);
+			if (tx_bss->conf->wmm_enabled && !bss->conf->wmm_enabled)
+				ie_count++;
+		}
+
 		if (ie_count)
 			nontx_profile_len += 4 + ie_count;
 
@@ -9655,7 +9662,7 @@ static u8 * hostapd_eid_mbssid_elem(stru
 		struct hostapd_bss_config *conf;
 		u8 *eid_len_pos, *nontx_bss_start = eid;
 		const u8 *auth, *rsn = NULL, *rsnx = NULL;
-		u8 ie_count = 0, non_inherit_ie[3];
+		u8 ie_count = 0, non_inherit_ie[4];
 		size_t auth_len = 0, xrate_len = 0;
 		u16 capab_info;
 
@@ -9745,6 +9752,12 @@ static u8 * hostapd_eid_mbssid_elem(stru
 				eid = hostapd_eid_eht_reconf_ml(bss, eid);
 		}
 
+		/* WMM IE */
+		if (bss->conf->wmm_override) {
+			eid = hostapd_eid_wmm(bss, eid);
+			if (tx_bss->conf->wmm_enabled && !bss->conf->wmm_enabled)
+				non_inherit_ie[ie_count++] = WLAN_EID_VENDOR_SPECIFIC;
+		}
 		if (ie_count) {
 			*eid++ = WLAN_EID_EXTENSION;
 			*eid++ = 2 + ie_count + 1;
--- a/src/ap/wmm.c
+++ b/src/ap/wmm.c
@@ -99,6 +99,13 @@ void wmm_calc_regulatory_limit(struct ho
 }
 
 
+size_t hostapd_eid_wmm_len(struct hostapd_data *hapd)
+{
+	if (!hapd->conf->wmm_enabled)
+		return 0;
+	/* Tag (1) + elem len (1) + elem */
+	return 2 + sizeof(struct wmm_parameter_element);
+}
 /*
  * Add WMM Parameter Element to Beacon, Probe Response, and (Re)Association
  * Response frames.
--- a/src/ap/wmm.h
+++ b/src/ap/wmm.h
@@ -15,6 +15,7 @@ struct wmm_tspec_element;
 
 void wmm_calc_regulatory_limit(struct hostapd_data *hapd,
 				struct hostapd_wmm_ac_params *acp);
+size_t hostapd_eid_wmm_len(struct hostapd_data *hapd);
 u8 * hostapd_eid_wmm(struct hostapd_data *hapd, u8 *eid);
 int hostapd_eid_wmm_valid(struct hostapd_data *hapd, const u8 *eid,
 			  size_t len);
