From 2fa58b2c643017980d5b54a1c708e68b7be52f37 Mon Sep 17 00:00:00 2001
From: Aditya Kumar Singh <quic_adisi@quicinc.com>
Date: Thu, 11 Jan 2024 12:08:37 +0530
Subject: [PATCH] hostapd: fix overwriting MLD info during auth handling

Currently whenever we handle auth frame and if the transaction is one, we
memset the mld info and read it again with the incoming frame. However,
this should be done only when kernel is also aware of the change in the
sta info. Or else, source address will be STA's MLD MAC address and it
will be copied in link address which will be wrong.

This leads to issue where in STA entry is created with its link address as
MLD MAC address and hence even after address translation, frames are sent
out on MLD MAC address which is incorrect.

Fix this by memseting the MLD info and processing it only when the STA is
going to get re-added in the kernel so that the info is same across hostapd
and the kernel.

Signed-off-by: Aditya Kumar Singh <quic_adisi@quicinc.com>
---
 src/ap/ieee802_11.c | 36 ++++++++++++++++++------------------
 1 file changed, 18 insertions(+), 18 deletions(-)

--- a/src/ap/ieee802_11.c
+++ b/src/ap/ieee802_11.c
@@ -3237,7 +3237,8 @@ static void handle_auth(struct hostapd_d
 	 * will translate addresses in the frame and we need to avoid overriding
 	 * peer_addr based on mgmt->sa which would have been translated to the
 	 * MLD MAC address. */
-	if (!sta->added_unassoc && auth_transaction == 1) {
+	if ((!(sta->flags & WLAN_STA_MFP) || !ap_sta_is_authorized(sta)) &&
+	    !sta->added_unassoc && auth_transaction == 1) {
 		ap_sta_free_sta_profile(&sta->mld_info);
 		os_memset(&sta->mld_info, 0, sizeof(sta->mld_info));
 
