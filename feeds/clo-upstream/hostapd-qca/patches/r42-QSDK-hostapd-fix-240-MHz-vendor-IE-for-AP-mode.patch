From 44f28568fa51c6326c9e3423c59c6ad54f307916 Mon Sep 17 00:00:00 2001
From: Aloka Dixit <quic_alokad@quicinc.com>
Date: Mon, 23 Sep 2024 14:56:55 -0700
Subject: [PATCH 1/2] QSDK: hostapd: fix 240 MHz vendor IE for AP mode

Building of 240 MHz vendor IE is incorrect, such as missing bit-shift
operations on 'phy_cap_320mhz'. Replace 'phy_cap_320mhz' by individual
bit declarations to fix the errors and also to make the code more
readable.

Patch-dependency: q03-017-hostapd-240MHz-Q-Q-vendor-IE-support.patch
Patch-work: None

Fixes: 8411188498dc ("hostapd: 240MHz Q-Q vendor IE support")
Signed-off-by: Aloka Dixit <quic_alokad@quicinc.com>
---
 src/ap/ieee802_11_eht.c      | 25 +++++++++++++------------
 src/common/ieee802_11_defs.h | 28 +++++++++++++---------------
 2 files changed, 26 insertions(+), 27 deletions(-)

--- a/src/ap/ieee802_11_eht.c
+++ b/src/ap/ieee802_11_eht.c
@@ -391,18 +391,19 @@ u8 * hostapd_eid_vendor_240mhz(struct ho
 	eht_240_cap->ccfs1 = ccfs1;
 	eht_240_cap->ccfs0 = hostapd_get_oper_centr_freq_seg0_idx(hapd->iconf);
 	eht_240_cap->punct_bitmap = hapd->iconf->punct_bitmap;
-	eht_240_cap->phy_cap_320mhz = eht_cap->phy_cap[EHT_PHYCAP_320MHZ_IN_6GHZ_SUPPORT_IDX] &
-				      EHT_PHYCAP_320MHZ_IN_6GHZ_SUPPORT_MASK;
-	eht_240_cap->phy_cap_320mhz |= eht_cap->phy_cap[EHT_PHYCAP_BEAMFORMEE_SS_320MHZ_IDX] &
-				       EHT_PHYCAP_BEAMFORMEE_SS_320MHZ_MASK;
-	eht_240_cap->phy_cap_320mhz |= (eht_cap->phy_cap[EHT_PHYCAP_NUM_SOUND_DIM_320MHZ_IDX] &
-				        EHT_PHYCAP_NUM_SOUND_DIM_320MHZ_MASK) |
-				       (eht_cap->phy_cap[EHT_PHYCAP_NUM_SOUND_DIM_320MHZ_IDX_1] &
-					EHT_PHYCAP_NUM_SOUND_DIM_320MHZ_MASK);
-	eht_240_cap->phy_cap_320mhz |= eht_cap->phy_cap[EHT_PHYCAP_NON_OFDMA_UL_MUMIMO_320MHZ_IDX] &
-				       EHT_PHYCAP_NON_OFDMA_UL_MUMIMO_320MHZ_MASK;
-	eht_240_cap->phy_cap_320mhz |= eht_cap->phy_cap[EHT_PHYCAP_MU_CAPABILITY_IDX] &
-				       EHT_PHYCAP_MU_BEAMFORMER_MASK;
+
+	eht_240_cap->is5ghz240mhz = (eht_cap->phy_cap[EHT_PHYCAP_320MHZ_IN_6GHZ_SUPPORT_IDX] &
+				     EHT_PHYCAP_320MHZ_IN_6GHZ_SUPPORT_MASK) >> 1;
+	eht_240_cap->bfmess320mhz = (eht_cap->phy_cap[EHT_PHYCAP_BEAMFORMEE_SS_320MHZ_IDX] &
+				     EHT_PHYCAP_BEAMFORMEE_SS_320MHZ_MASK) >> 5;
+	eht_240_cap->numsound320mhz = ((eht_cap->phy_cap[EHT_PHYCAP_NUM_SOUND_DIM_320MHZ_IDX] &
+					EHT_PHYCAP_NUM_SOUND_DIM_320MHZ_MASK) >> 6) |
+				      ((eht_cap->phy_cap[EHT_PHYCAP_NUM_SOUND_DIM_320MHZ_IDX_1] &
+					EHT_PHYCAP_NUM_SOUND_DIM_320MHZ_MASK_1) << 2);
+	eht_240_cap->nonofdmaulmumimo320mhz = (eht_cap->phy_cap[EHT_PHYCAP_MU_CAPABILITY_IDX] &
+					       EHT_PHYCAP_NON_OFDMA_UL_MU_MIMO_320MHZ) >> 3;
+	eht_240_cap->mubfmr320mhz = (eht_cap->phy_cap[EHT_PHYCAP_MU_CAPABILITY_IDX] &
+				     EHT_PHYCAP_MU_BEAMFORMER_MASK) >> 6;
 
 	memcpy(&eht_240_cap->mcs_map_320mhz, &eht_cap->mcs, EHT_PHYCAP_MCS_NSS_LEN_160MHZ);
 	pos += sizeof(struct ieee80211_240mhz_vendor_oper);
--- a/src/common/ieee802_11_defs.h
+++ b/src/common/ieee802_11_defs.h
@@ -2744,7 +2744,11 @@ struct ieee80211_240mhz_vendor_oper {
 	u8 ccfs1;
 	u8 ccfs0;
 	u16 punct_bitmap;
-	u16 phy_cap_320mhz;
+	u16 is5ghz240mhz          :1,
+	    bfmess320mhz          :3,
+	    numsound320mhz        :3,
+	    nonofdmaulmumimo320mhz:1,
+	    mubfmr320mhz          :1;
 	u8 mcs_map_320mhz[3];
 } STRUCT_PACKED;
 
@@ -2790,6 +2794,14 @@ struct ieee80211_eht_operation {
 #define EHT_PHYCAP_SU_BEAMFORMEE_IDX		0
 #define EHT_PHYCAP_SU_BEAMFORMEE		((u8) BIT(6))
 
+#define EHT_PHYCAP_BEAMFORMEE_SS_320MHZ_IDX	1
+#define EHT_PHYCAP_BEAMFORMEE_SS_320MHZ_MASK	((u8) (BIT(5) | BIT(6) | BIT(7)))
+
+#define EHT_PHYCAP_NUM_SOUND_DIM_320MHZ_IDX	2
+#define EHT_PHYCAP_NUM_SOUND_DIM_320MHZ_MASK	((u8) (BIT(6) | BIT(7)))
+#define EHT_PHYCAP_NUM_SOUND_DIM_320MHZ_IDX_1	3
+#define EHT_PHYCAP_NUM_SOUND_DIM_320MHZ_MASK_1	((u8) (BIT(0)))
+
 #define EHT_PHYCAP_PPE_THRESHOLD_PRESENT_IDX	5
 #define EHT_PHYCAP_PPE_THRESHOLD_PRESENT	((u8) BIT(3))
 
@@ -3089,20 +3101,6 @@ enum scs_request_type {
 	SCS_REQ_CHANGE = 2,
 };
 
-#define EHT_PHYCAP_BEAMFORMEE_SS_320MHZ_IDX    3
-#define EHT_PHYCAP_BEAMFORMEE_SS_320MHZ_MASK   ((u8) (BIT(0) | BIT(1) | \
-                                                BIT(2) | BIT(3)))
-
-#define EHT_PHYCAP_NUM_SOUND_DIM_320MHZ_IDX    1
-#define EHT_PHYCAP_NUM_SOUND_DIM_320MHZ_MASK   ((u8) (BIT(0) | BIT(2) | \
-                                                BIT(3)))
-#define EHT_PHYCAP_NUM_SOUND_DIM_320MHZ_IDX_1  2
-#define EHT_PHYCAP_NUM_SOUND_DIM_320MHZ_MASK_1 ((u8) (BIT(0))
-
-#define EHT_PHYCAP_NON_OFDMA_UL_MUMIMO_320MHZ_IDX      6
-#define EHT_PHYCAP_NON_OFDMA_UL_MUMIMO_320MHZ_MASK     ((u8) BIT(3))
-
-
 /*
  * IEEE P802.11be/D4.0, 9.4.2.316 QoS Characteristics element,
  * Table 9-404s (Direction subfield encoding)
