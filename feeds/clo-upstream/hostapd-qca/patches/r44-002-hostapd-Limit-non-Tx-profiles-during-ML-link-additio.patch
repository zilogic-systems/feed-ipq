From 69aab15a899f867d57fd3a043f847a239d4f135c Mon Sep 17 00:00:00 2001
From: Rameshkumar Sundaram <quic_ramess@quicinc.com>
Date: Thu, 5 Sep 2024 11:10:09 +0530
Subject: [PATCH] hostapd: Limit non Tx profiles during ML link addition

Currently for MBSSID, ML link addition is supported only up to 8 VAPs as
ML link addition along with EMA is not supported. Add "ml_reconf_enabled"
knob to apply above limitation. Allow MBSSID link addition only for non-EMA
MBSSID that is when 'mbssid' config is set to 1. This prevents beacon bloat
and remove DTIM update over head due to profile addition and deletion in an
EMA AP due to fixed periodicity. This limitation can be removed when MBSSID
grouping is supported.

Signed-off-by: Rameshkumar Sundaram <quic_ramess@quicinc.com>
Signed-off-by: Sowmiya Sree Elavalagan <quic_ssreeela@quicinc.com>
---
 hostapd/config_file.c |  2 ++
 hostapd/hostapd.conf  |  4 ++++
 src/ap/ap_config.c    | 21 +++++++++++++++++++++
 src/ap/ap_config.h    |  1 +
 src/ap/hostapd.c      | 10 ++++++++++
 src/ap/ieee802_11.c   |  8 +++++++-
 src/common/defs.h     |  1 +
 7 files changed, 46 insertions(+), 1 deletion(-)

--- a/hostapd/config_file.c
+++ b/hostapd/config_file.c
@@ -5188,6 +5188,8 @@ static int hostapd_config_fill(struct ho
 		}
 	} else if (os_strcmp(buf, "eht_bw320_offset") == 0) {
 		conf->eht_bw320_offset = atoi(pos);
+	} else if (os_strcmp(buf, "ml_reconf_enabled") == 0) {
+		conf->ml_reconf_enabled = atoi(pos);
 #ifdef CONFIG_TESTING_OPTIONS
 	} else if (os_strcmp(buf, "eht_oper_puncturing_override") == 0) {
 		if (get_u16(pos, line, &bss->eht_oper_puncturing_override))
--- a/hostapd/hostapd.conf
+++ b/hostapd/hostapd.conf
@@ -1127,6 +1127,10 @@ wmm_ac_vo_acm=0
 # advertising in management frame.
 #disable_eml_cap=1
 
+# ml_reconf_enabled: Enable dynamic link addition when 11BE is enabled. This is
+# used to restrict the non-Tx BSS to 7 incase of MBSSID as EMA is not supported.
+#ml_reconf_enabled=1
+
 ##### IEEE 802.1X-2004 related configuration ##################################
 
 # Require IEEE 802.1X authorization
--- a/src/ap/ap_config.c
+++ b/src/ap/ap_config.c
@@ -1637,6 +1637,22 @@ int hostapd_config_check(struct hostapd_
 	if (full_config)
 		hostapd_set_and_check_bw320_offset(conf,
 						   conf->eht_bw320_offset);
+
+	if (!conf->ieee80211be && conf->ml_reconf_enabled) {
+		wpa_printf(MSG_ERROR, "ML reconfig cannot be enabled without ieee80211be");
+		return -1;
+	}
+
+	if (conf->ml_reconf_enabled && conf->mbssid && conf->mbssid != MBSSID_ENABLED) {
+		wpa_printf(MSG_ERROR, "Link addition is not supported for enhanced MBSSID");
+		return -1;
+	}
+
+	if (conf->ml_reconf_enabled && conf->num_bss > ML_RECONF_MAX_MBSSID_PROFILES) {
+		wpa_printf(MSG_ERROR, "Maximum number of MBSSID profiles allowed "
+			   "with ML reconfig is %d", ML_RECONF_MAX_MBSSID_PROFILES);
+		return -1;
+	}
 #endif /* CONFIG_IEEE80211BE */
 
 	if (full_config && conf->mbssid && !conf->ieee80211ax) {
--- a/src/ap/ap_config.h
+++ b/src/ap/ap_config.h
@@ -1272,6 +1272,7 @@ struct hostapd_config {
 	struct eht_phy_capabilities_info eht_phy_capab;
 	u16 punct_bitmap; /* a bitmap of disabled 20 MHz channels */
 	u8 punct_acs_threshold;
+	bool ml_reconf_enabled;
 	u8 eht_default_pe_duration;
 	u8 eht_bw320_offset;
 #endif /* CONFIG_IEEE80211BE */
--- a/src/ap/hostapd.c
+++ b/src/ap/hostapd.c
@@ -3604,6 +3604,16 @@ hostapd_interface_init_bss(struct hapd_i
 			return NULL;
 		}
 
+#ifdef CONFIG_IEEE80211BE
+		if (iface->conf->ml_reconf_enabled && iface->conf->mbssid &&
+		    (iface->conf->num_bss + 1) > ML_RECONF_MAX_MBSSID_PROFILES) {
+			wpa_printf(MSG_ERROR, "Maximum number of MBSSID profiles allowed "
+				   "with ML reconfig is %d",
+				   ML_RECONF_MAX_MBSSID_PROFILES);
+			hostapd_config_free(conf);
+			return NULL;
+		}
+#endif /* CONFIG_IEEE80211BE */
 		ifname = conf->bss[0]->iface;
 		if (ifname[0] == '\0') {
 			wpa_printf(MSG_ERROR,
--- a/src/ap/ieee802_11.c
+++ b/src/ap/ieee802_11.c
@@ -3470,7 +3470,13 @@ static u8 hostapd_max_bssid_indicator(st
 	if (!hapd->iconf->mbssid || hapd->iface->num_bss <= 1)
 		return 0;
 
-	num_bss_nontx = hapd->iface->num_bss - 1;
+#ifdef CONFIG_IEEE80211BE
+	if (hapd->iconf->ml_reconf_enabled)
+		num_bss_nontx = ML_RECONF_MAX_MBSSID_PROFILES - 1;
+	else
+#endif
+		num_bss_nontx = hapd->iface->num_bss - 1;
+
 	while (num_bss_nontx > 0) {
 		max_bssid_ind++;
 		num_bss_nontx >>= 1;
--- a/src/common/defs.h
+++ b/src/common/defs.h
@@ -527,6 +527,7 @@ enum frame_encryption {
 	FRAME_ENCRYPTED = 1
 };
 
+#define ML_RECONF_MAX_MBSSID_PROFILES 8
 #define MAX_NUM_MLD_LINKS 15
 
 enum sae_pwe {
