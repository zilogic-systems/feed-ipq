From 83ed91e4e709609532b62b406319fc2d5da0a362 Mon Sep 17 00:00:00 2001
From: Sowmiya Sree Elavalagan <quic_ssreeela@quicinc.com>
Date: Thu, 5 Sep 2024 11:24:39 +0530
Subject: [PATCH] hostapd: Include EHT basic ML info for critical update

Add critical update check for EHT basic ML info when
number of simultaneous links get modified on link addition.

Patch-depdendency: r04-007-hostapd-Add-NL-attribute-to-set-critical-update-para.patch

Signed-off-by: Sowmiya Sree Elavalagan <quic_ssreeela@quicinc.com>
---
 src/ap/beacon.c  | 11 ++++++++---
 src/ap/hostapd.h |  1 +
 2 files changed, 9 insertions(+), 3 deletions(-)

--- a/src/ap/beacon.c
+++ b/src/ap/beacon.c
@@ -2332,7 +2332,7 @@ int ieee802_11_build_ap_params(struct ho
 	u8 *pos, *tailpos, *tailend, *csa_pos;
 	bool complete = false;
 	u8 *startpos;
-	u8 elemid_modified = 0;
+	u16 elemid_modified = 0;
 	struct hostapd_data *tx_bss;
 #endif /* NEED_AP_MLME */
 	struct hostapd_data *lhapd;
@@ -2617,9 +2617,14 @@ int ieee802_11_build_ap_params(struct ho
 
 #ifdef CONFIG_IEEE80211BE
 	if (hapd->iconf->ieee80211be && !hapd->conf->disable_11be) {
-		if (hapd->conf->mld_ap)
+		if (hapd->conf->mld_ap) {
+			startpos = tailpos;
 			tailpos = hostapd_eid_eht_ml_beacon(hapd, NULL,
 							    tailpos, false);
+			hostapd_eid_update_cu_info(hapd, &elemid_modified, startpos,
+						   tailpos-startpos, ELEMID_CU_PARAM_EXT_ML);
+		}
+
 		tailpos = hostapd_eid_eht_capab(hapd, tailpos,
 						IEEE80211_MODE_AP);
 		startpos = tailpos;
--- a/src/ap/hostapd.h
+++ b/src/ap/hostapd.h
@@ -223,6 +223,7 @@ enum elemid_cu {
 	ELEMID_CU_PARAM_WMM,
 	ELEMID_CU_PARAM_MU_EDCA,
 	ELEMID_CU_PARAM_SPATIAL_REUSE,
+	ELEMID_CU_PARAM_EXT_ML,
 
 	ELEMID_CU_PARAM_MAX,
 };
--- a/src/ap/ieee802_11.c
+++ b/src/ap/ieee802_11.c
@@ -9204,7 +9204,7 @@ static bool hostapd_eid_rnr_bss(struct h
 				struct mbssid_ie_profiles *skip_profiles,
 				size_t i, u8 *tbtt_count, size_t *len,
 				u8 **pos, u8 **tbtt_count_pos, u8 tbtt_info_len,
-				u8 op_class, bool mld_update)
+				u8 op_class, bool mld_update, u32 type)
 {
 	struct hostapd_iface *iface = hapd->iface;
 	struct hostapd_data *bss = iface->bss[i];
@@ -9264,7 +9264,7 @@ static bool hostapd_eid_rnr_bss(struct h
 
 #ifdef CONFIG_IEEE80211BE
 	if (ap_mld) {
-		u8 param_ch = bss->rx_cu_param.bpcc;
+		u8 param_ch = 0;
 		bool is_partner;
 
 		/* If BSS is not a partner of the reporting_hapd
@@ -9274,6 +9274,9 @@ static bool hostapd_eid_rnr_bss(struct h
 		/* If atleast one of the MLD params is Unknown, set Unknown for all
 		 * mld params.
 		 */
+		if (type != WLAN_FC_STYPE_BEACON)
+			param_ch = bss->rx_cu_param.bpcc;
+
 		if ((match_idx == 0xff) || (bss->mld_link_id == 0xf) ||
 				(param_ch == 0xff)) {
 			*eid++ = 0xff;
@@ -9311,7 +9314,7 @@ static u8 * hostapd_eid_rnr_iface(struct
 				  struct hostapd_data *reporting_hapd,
 				  u8 *eid, size_t *current_len,
 				  struct mbssid_ie_profiles *skip_profiles,
-				  bool mld_update)
+				  bool mld_update, u32 type)
 {
 	struct hostapd_iface *iface = hapd->iface;
 	size_t i, start;
@@ -9360,7 +9363,7 @@ repeat_rnr:
 						skip_profiles, i,
 						&tbtt_count, &len, &eid,
 						&tbtt_count_pos, tbtt_info_len,
-						op_class, mld_update))
+						op_class, mld_update, type))
 				break;
 		}
 
@@ -9391,7 +9394,7 @@ repeat_rnr:
 
 
 u8 * hostapd_eid_rnr_colocation(struct hostapd_data *hapd, u8 *eid,
-				size_t *current_len)
+				size_t *current_len, u32 type)
 {
 	struct hostapd_iface *iface;
 	size_t i;
@@ -9408,7 +9411,7 @@ u8 * hostapd_eid_rnr_colocation(struct h
 			continue;
 
 		eid = hostapd_eid_rnr_iface(iface->bss[0], hapd, eid,
-					    current_len, NULL, false);
+					    current_len, NULL, false, type);
 	}
 
 	return eid;
@@ -9438,7 +9441,7 @@ u8 * hostapd_eid_rnr_mlo(struct hostapd_
 			continue;
 
 		eid = hostapd_eid_rnr_iface(iface->bss[0], hapd, eid,
-					    current_len, skip_profiles, true);
+					    current_len, skip_profiles, true, type);
 	}
 #endif /* CONFIG_IEEE80211BE */
 
@@ -9461,17 +9464,17 @@ u8 * hostapd_eid_rnr(struct hostapd_data
 	case WLAN_FC_STYPE_PROBE_RESP:
 		if (mode == COLOCATED_LOWER_BAND)
 			eid = hostapd_eid_rnr_colocation(hapd, eid,
-							 &current_len);
+							 &current_len, type);
 
 		if (hapd->conf->rnr && hapd->iface->num_bss > 1 &&
 		    !hapd->iconf->mbssid)
 			eid = hostapd_eid_rnr_iface(hapd, hapd, eid,
-						    &current_len, NULL, false);
+						    &current_len, NULL, false, type);
 		break;
 	case WLAN_FC_STYPE_ACTION:
 		if (hapd->iface->num_bss > 1 && mode == STANDALONE_6GHZ)
 			eid = hostapd_eid_rnr_iface(hapd, hapd, eid,
-						    &current_len, NULL, false);
+						    &current_len, NULL, false, type);
 		break;
 	default:
 		return eid_start;
@@ -9676,7 +9679,7 @@ size_t hostapd_eid_mbssid_len(struct hos
 }
 
 #ifdef CONFIG_IEEE80211BE
-void hostapd_eid_update_cu_info(struct hostapd_data *hapd, u8 *elemid_modified,
+void hostapd_eid_update_cu_info(struct hostapd_data *hapd, u16 *elemid_modified,
 				       const u8 *eid_pos, size_t eid_len,
 				       enum elemid_cu eid_cu)
 {
@@ -9906,7 +9909,7 @@ u8 * hostapd_eid_mbssid(struct hostapd_d
 			cur_len = 0;
 			rnr_eid = hostapd_eid_rnr_iface(
 				hapd, hostapd_mbssid_get_tx_bss(hapd),
-				rnr_eid, &cur_len, &skip_profiles, false);
+				rnr_eid, &cur_len, &skip_profiles, false, frame_stype);
 			rnr_eid = hostapd_eid_rnr_mlo(
 				hostapd_mbssid_get_tx_bss(hapd), frame_stype,
 				rnr_eid, &skip_profiles, &cur_len);
@@ -9923,7 +9926,7 @@ u8 * hostapd_eid_mbssid(struct hostapd_d
 			rnr_eid = hostapd_eid_nr_db(hapd, rnr_eid, &cur_len);
 		if (get_colocation_mode(hapd) == COLOCATED_LOWER_BAND)
 			rnr_eid = hostapd_eid_rnr_colocation(hapd, rnr_eid,
-							     &cur_len);
+							     &cur_len, frame_stype);
 	}
 
 	return eid;
--- a/src/ap/ieee802_11.h
+++ b/src/ap/ieee802_11.h
@@ -285,7 +285,7 @@ u8 * hostapd_eid_mbssid(struct hostapd_d
 			u32 *elemid_modified_bmap);
 u16 hostapd_critical_update_capab(struct hostapd_data *hapd);
 bool hostapd_is_mld_ap(struct hostapd_data *hapd);
-void hostapd_eid_update_cu_info(struct hostapd_data *hapd, u8 *elemid_modified,
+void hostapd_eid_update_cu_info(struct hostapd_data *hapd, u16 *elemid_modified,
 				const u8 *eid_pos, size_t eid_len,
 				enum elemid_cu eid_cu);
 const char * sae_get_password(struct hostapd_data *hapd,
--- a/src/ap/ieee802_11_eht.c
+++ b/src/ap/ieee802_11_eht.c
@@ -622,7 +622,10 @@ static u8 * hostapd_eid_eht_basic_ml_com
 	wpabuf_put_u8(buf, hapd->mld_link_id);
 
 	/* BSS Parameters Change Count */
-	wpabuf_put_u8(buf, hapd->rx_cu_param.bpcc);
+	if (type == WLAN_FC_STYPE_BEACON)
+		wpabuf_put_u8(buf, 0);
+	else
+		wpabuf_put_u8(buf, hapd->rx_cu_param.bpcc);
 
 	if (!hapd->conf->disable_eml_cap) {
 		/* Reset the EMLSR Transision and Padding delay to zero for
