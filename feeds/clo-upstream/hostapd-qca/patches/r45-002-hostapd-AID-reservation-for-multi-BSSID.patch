From d774758e15654d5915ca4956401c45d8e15264bd Mon Sep 17 00:00:00 2001
From: Rathees Kumar R Chinannan <quic_rrchinan@quicinc.com>
Date: Tue, 10 Sep 2024 14:34:59 +0530
Subject: [PATCH 2/4] hostapd: AID reservation for multi BSSID

When setting up multi bssid, reserve AIDs for group transmission
on Tx BSS and make sure TX bss is used as AID allocator for
a MBSSID group.

Patch-dependency: None

Signed-off-by: Rathees Kumar R Chinannan <quic_rrchinan@quicinc.com>
---
 src/ap/hostapd.c    | 29 +++++++++++++++++++++++++----
 src/ap/ieee802_11.c |  4 ++--
 2 files changed, 27 insertions(+), 6 deletions(-)

--- a/src/ap/hostapd.c
+++ b/src/ap/hostapd.c
@@ -3514,7 +3514,7 @@ fail:
 }
 
 
-void hostapd_multi_mbssid_setup_bss(struct hostapd_data *hapd)
+static void hostapd_multi_mbssid_add_bss(struct hostapd_data *hapd)
 {
 	struct hostapd_iface *iface = hapd->iface;
 	struct hostapd_multi_mbssid_group *group = NULL, **all_group;
@@ -3574,6 +3574,27 @@ fail:
 	hapd->mbssid_group = NULL;
 }
 
+static void hostapd_mbssid_setup_bss(struct hostapd_data *hapd)
+{
+	struct hostapd_data *tx_bss;
+	size_t num_bss, i;
+
+	hostapd_multi_mbssid_add_bss(hapd);
+
+	/*
+	 * When setting up multi bssid, reserve AIDs for group transmssion
+	 * on Tx VAP
+	 */
+	tx_bss = hostapd_mbssid_get_tx_bss(hapd);
+	if (tx_bss != hapd)
+		return;
+
+	num_bss = (1 << hostapd_max_bssid_indicator(tx_bss));
+
+	for (i = 0; i < num_bss; i++)
+		tx_bss->sta_aid[0] |= BIT(i);
+}
+
 static void hostapd_cleanup_unused_mlds(struct hapd_interfaces *interfaces)
 {
 #ifdef CONFIG_IEEE80211BE
@@ -3703,7 +3724,7 @@ struct hostapd_iface * hostapd_init(stru
 		 */
 		hapd->mbssid_idx = i;
 		hostapd_bss_setup_multi_link(hapd, interfaces);
-		hostapd_multi_mbssid_setup_bss(hapd);
+		hostapd_mbssid_setup_bss(hapd);
 	}
 
 	hapd_iface->is_ch_switch_dfs = false;
@@ -3859,7 +3880,7 @@ hostapd_interface_init_bss(struct hapd_i
 		iface->bss[iface->num_bss] = hapd;
 		hapd->msg_ctx = hapd;
 		hostapd_bss_setup_multi_link(hapd, interfaces);
-		hostapd_multi_mbssid_setup_bss(hapd);
+		hostapd_mbssid_setup_bss(hapd);
 
 
 		bss_idx = iface->num_bss++;
@@ -4269,7 +4290,7 @@ static int hostapd_data_alloc(struct hos
 		}
 		hapd->msg_ctx = hapd;
 		hostapd_bss_setup_multi_link(hapd, hapd_iface->interfaces);
-		hostapd_multi_mbssid_setup_bss(hapd);
+		hostapd_mbssid_setup_bss(hapd);
 	}
 
 	hapd_iface->conf = conf;
--- a/src/ap/ieee802_11.c
+++ b/src/ap/ieee802_11.c
@@ -3486,7 +3486,7 @@ static u32 hostapd_get_aid_word(struct h
 					   "MLD: Failed to get link BSS for AID");
 				continue;
 			}
-
+			link_bss = hostapd_mbssid_get_tx_bss(link_bss);
 			aid_word |= link_bss->sta_aid[i];
 		}
 
@@ -3578,7 +3578,7 @@ int hostapd_get_aid(struct hostapd_data
 	}
 	if (j == 32)
 		return -1;
-	aid = i * 32 + j + (1 << hostapd_max_bssid_indicator(hapd));
+	aid = i * 32 + j;
 	if (aid > 2007)
 		return -1;
 
@@ -4777,7 +4777,7 @@ static int ieee80211_ml_process_link(str
 			status = WLAN_STATUS_UNSPECIFIED_FAILURE;
 			goto out;
 		}
-		hapd->sta_aid[(sta->aid - 1) / 32] |= BIT((sta->aid - 1) % 32);
+		hapd->sta_aid[sta->aid / 32] |= BIT(sta->aid % 32);
 		sta->listen_interval = origin_sta->listen_interval;
 		if (update_ht_state(hapd, sta) > 0)
 			ieee802_11_update_beacons(hapd->iface);
--- a/src/ap/sta_info.c
+++ b/src/ap/sta_info.c
@@ -301,8 +301,8 @@ void ap_free_sta(struct hostapd_data *ha
 	ap_sta_list_del(hapd, sta);
 
 	if (sta->aid > 0)
-		hapd->sta_aid[(sta->aid - 1) / 32] &=
-			~BIT((sta->aid - 1) % 32);
+		hapd->sta_aid[sta->aid / 32] &=
+			~BIT(sta->aid % 32);
 
 	if (sta->wds_mld_uid > 0)
 		hapd->wds_sta_uid[(sta->wds_mld_uid - 1) / 32] &=
--- a/src/ap/hostapd.h
+++ b/src/ap/hostapd.h
@@ -262,7 +262,7 @@ struct hostapd_data {
 
 	/*
 	 * Bitfield for indicating which AIDs are allocated. Only AID values
-	 * 1-2007 are used and as such, the bit at index 0 corresponds to AID
+	 * 1-2007 are used and as such, the bit at index 1 corresponds to AID
 	 * 1.
 	 */
 #define AID_WORDS ((2008 + 31) / 32)
