From ce90591555d4541a32a8cf2637654274be2ffe9c Mon Sep 17 00:00:00 2001
From: Karthik M <quic_karm@quicinc.com>
Date: Wed, 18 Sep 2024 16:40:32 +0530
Subject: [PATCH] WAR: QSDK: hostapd: Fix wpa_supplicant sigterm crash

With Mesh configuration, wpa_supplicant crashes after multiple
wifi up/down.

In eloop_handle_signal, the callback handler is getting invoked and
accesses the eloop.signals which is already freed in previous instance.
Since eloop is global pointer and signals memory is not set to NULL, it
leads to invalid memory access.

Fix this by setting the signals pointer to NULL after it is freed in
eloop_destroy callback. Once Ucode change is merged, this gerrit can be 
reverted.

Signed-off-by: Karthik M <quic_karm@quicinc.com>
---
 src/utils/eloop.c | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/src/utils/eloop.c b/src/utils/eloop.c
index 50dd1be..1c819b9 100644
--- a/src/utils/eloop.c
+++ b/src/utils/eloop.c
@@ -983,6 +983,9 @@ static void eloop_handle_signal(int sig)
 {
 	size_t i;
 
+	if (!eloop.signals)
+		return;
+
 #ifndef CONFIG_NATIVE_WINDOWS
 	if ((sig == SIGINT || sig == SIGTERM) && !eloop.pending_terminate) {
 		/* Use SIGALRM to break out from potential busy loops that
@@ -1305,6 +1308,7 @@ void eloop_destroy(void)
 	eloop_sock_table_destroy(&eloop.writers);
 	eloop_sock_table_destroy(&eloop.exceptions);
 	os_free(eloop.signals);
+	eloop.signals = NULL;
 
 #ifdef CONFIG_ELOOP_POLL
 	os_free(eloop.pollfds);
-- 
2.34.1

