From c1a3e8b34a9b6d4bf21851b374ffd352cecaf46a Mon Sep 17 00:00:00 2001
From: Aaradhana Sahu <quic_aarasahu@quicinc.com>
Date: Fri, 15 Nov 2024 10:23:41 +0530
Subject: [PATCH] UPSTREAM:PROTOCOL:hostapd: fix WPS association issue when mbssid enable

When mbssid is enable then all bss information present in one beacon
frame due to this, when we press wps push-button station identify as
overlap wps session across all bss and cancel wps session.

Address this issue by including UUID-E attribute info in beacon frame
in active PBC mode, which is allow to stations to figure out that multiple
BSS in PBC mode is not a PBC session overlap.

This issue easily visible for 6G radio because by default mbssid is enabled
in 6G.

Patch-dependency: None
patch-work: None
Feature: WPS-PBC

Signed-off-by: Aaradhana Sahu <quic_aarasahu@quicinc.com>
---
 src/ap/wps_hostapd.c    | 7 +++++++
 src/wps/wps.h           | 7 +++++++
 src/wps/wps_registrar.c | 3 ++-
 3 files changed, 16 insertions(+), 1 deletion(-)

diff --git a/src/ap/wps_hostapd.c b/src/ap/wps_hostapd.c
index 9b35108..2fbac6e 100644
--- a/src/ap/wps_hostapd.c
+++ b/src/ap/wps_hostapd.c
@@ -939,6 +939,12 @@ static void hostapd_wps_event_cb(void *ctx, enum wps_event event,
 		hapd->wps_event_cb(hapd->wps_event_cb_ctx, event, data);
 }
 
+static int hostapd_wps_mbssid_cb (void *ctx)
+{
+	struct hostapd_data *hapd = ctx;
+
+	return hapd->iconf->mbssid;
+}
 
 static int hostapd_wps_rf_band_cb(void *ctx)
 {
@@ -1097,6 +1103,7 @@ int hostapd_init_wps(struct hostapd_data *hapd,
 	wps->cred_cb = hostapd_wps_cred_cb;
 	wps->event_cb = hostapd_wps_event_cb;
 	wps->rf_band_cb = hostapd_wps_rf_band_cb;
+	wps->wps_mbssid_cb = hostapd_wps_mbssid_cb;
 	wps->cb_ctx = hapd;
 
 	os_memset(&cfg, 0, sizeof(cfg));
diff --git a/src/wps/wps.h b/src/wps/wps.h
index fed3e28..8cab8f1 100644
--- a/src/wps/wps.h
+++ b/src/wps/wps.h
@@ -845,6 +845,13 @@ struct wps_context {
 	/* Whether to send WPA2-PSK passphrase as a passphrase instead of PSK
 	 * for WPA3-Personal transition mode needs. */
 	bool use_passphrase;
+
+	/**
+	 * wps_mbssid_cb - fetch mbssid
+	 * @ctx: Higher layer context data (cb_ctx)
+	 * Return: number of mbssid
+	 */
+	 int (*wps_mbssid_cb)(void *ctx);
 };
 
 struct wps_registrar *
diff --git a/src/wps/wps_registrar.c b/src/wps/wps_registrar.c
index 9587293..a2a44b3 100644
--- a/src/wps/wps_registrar.c
+++ b/src/wps/wps_registrar.c
@@ -561,7 +561,8 @@ static int wps_build_sel_pbc_reg_uuid_e(struct wps_registrar *reg,
 		return 0;
 	if (reg->sel_reg_dev_password_id_override >= 0)
 		id = reg->sel_reg_dev_password_id_override;
-	if (id != DEV_PW_PUSHBUTTON || !reg->dualband)
+	if ((id != DEV_PW_PUSHBUTTON || !reg->dualband) &&
+	    !reg->wps->wps_mbssid_cb(reg->wps->cb_ctx))
 		return 0;
 	return wps_build_uuid_e(msg, reg->wps->uuid);
 }
-- 
2.34.1

