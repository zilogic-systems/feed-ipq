From 824ad8bc717dc74a9cb8fdccde3bb4c1d54ad30f Mon Sep 17 00:00:00 2001
From: Harshitha Prem <quic_hprem@quicinc.com>
Date: Thu, 17 Oct 2024 16:23:05 +0530
Subject: [PATCH] QSDK: CP: hostapd: pass radio_id ref

Update radio id details received from ucode, which would be
useful during remove interface case in mld.

Signed-off-by: Harshitha Prem <quic_hprem@quicinc.com>
---
 src/ap/ucode.c | 63 ++++++++++++++++++++++++++++++++++++++++++++++----
 src/ap/ucode.h |  1 +
 2 files changed, 59 insertions(+), 5 deletions(-)

--- a/src/ap/ucode.c
+++ b/src/ap/ucode.c
@@ -63,7 +63,7 @@ hostapd_ucode_update_bss_list(struct hos
 }
 
 static void
-hostapd_ucode_update_interfaces(void)
+hostapd_ucode_update_interfaces()
 {
 	uc_value_t *ifs = ucv_object_new(vm);
 	uc_value_t *if_bss = ucv_array_new(vm);
@@ -72,31 +72,76 @@ hostapd_ucode_update_interfaces(void)
 
 	for (i = 0; i < interfaces->count; i++) {
 		struct hostapd_iface *iface = interfaces->iface[i];
-
+		wpa_printf(MSG_INFO, "adding ucode index as %s\n", iface->phy);
 		ucv_object_add(ifs, iface->phy, ucv_get(hostapd_ucode_iface_get_uval(iface)));
 		hostapd_ucode_update_bss_list(iface, if_bss, bss);
 	}
-
 	ucv_object_add(ucv_prototype_get(global), "interfaces", ucv_get(ifs));
 	ucv_object_add(ucv_prototype_get(global), "interface_bss", ucv_get(if_bss));
 	ucv_object_add(ucv_prototype_get(global), "bss", ucv_get(bss));
 	ucv_gc(vm);
 }
 
+char *hostapd_ucode_get_ifname(int id, char *ifname) {
+        int i;
+
+	wpa_printf(MSG_INFO, "get interface name for id %d : %s\n",id, ifname);
+
+	if (id == -1)
+		return ifname;
+
+        for (i = 0; i < interfaces->count; i++) {
+                struct hostapd_iface *iface = interfaces->iface[i];
+                if (iface->ucode.radio_id == id) {
+                        wpa_printf(MSG_INFO, "remove iface %s\n", iface->conf->bss[0]->iface);
+                        return iface->conf->bss[0]->iface;
+                }
+        }
+	return NULL;
+}
+
+void hostapd_ucode_update_radio_id(char *ifname, int id) {
+	int i;
+
+	for (i = 0; i < interfaces->count; i++) {
+		struct hostapd_iface *iface = interfaces->iface[i];
+		if (!os_strcmp(iface->conf->bss[0]->iface, ifname)) {
+			wpa_printf(MSG_INFO, "updating radio_id %d\n", id);
+			iface->ucode.radio_id = id;
+		}
+	}
+}
+
 static uc_value_t *
 uc_hostapd_add_iface(uc_vm_t *vm, size_t nargs)
 {
 	uc_value_t *iface = uc_fn_arg(0);
+	uc_value_t *radio_id = uc_fn_arg(1);
+	uc_value_t *iface_name = uc_fn_arg(2);
+	int id;
 	char *data;
+	char *ifname;
 	int ret;
 
 	if (ucv_type(iface) != UC_STRING)
 		return ucv_int64_new(-1);
 
+	 if (ucv_type(radio_id) != UC_INTEGER)
+		wpa_printf(MSG_ERROR, "%s: failed to fetch radio_id", __func__);
+
+	if (ucv_type(iface) != UC_STRING)
+		wpa_printf(MSG_ERROR, "%s: failed to fetch ifname", __func__);
+
+	id = ucv_int64_get(radio_id);
+	ifname = ucv_string_get(iface_name);
 	data = strdup(ucv_string_get(iface));
+
+	wpa_printf(MSG_INFO, "%s:  add interface %d: %s", __func__, id, ifname);
 	ret = hostapd_add_iface(interfaces, data);
 	free(data);
 
+	hostapd_ucode_update_radio_id(ifname, id);
+
 	hostapd_ucode_update_interfaces();
 
 	return ucv_int64_new(ret);
@@ -106,12 +151,25 @@ static uc_value_t *
 uc_hostapd_remove_iface(uc_vm_t *vm, size_t nargs)
 {
 	uc_value_t *iface = uc_fn_arg(0);
+	uc_value_t *radio_id = uc_fn_arg(1);
+	char *ifname;
+	int id;
 
 	if (ucv_type(iface) != UC_STRING)
 		return NULL;
 
-	hostapd_remove_iface(interfaces, ucv_string_get(iface));
-	hostapd_ucode_update_interfaces();
+         if (ucv_type(radio_id) != UC_INTEGER)
+                wpa_printf(MSG_ERROR, "failed to fetch radio_id");
+
+        id = ucv_int64_get(radio_id);
+
+	ifname = hostapd_ucode_get_ifname(id, ucv_string_get(iface));
+
+	if (ifname) {
+		wpa_printf(MSG_INFO, "removing interface %s", ifname);
+		hostapd_remove_iface(interfaces, ifname);
+		hostapd_ucode_update_interfaces();
+	}
 
 	return NULL;
 }
@@ -259,6 +317,7 @@ uc_hostapd_bss_set_config(uc_vm_t *vm, s
 	conf->bss[idx] = old_bss;
 
 	hostapd_setup_bss(hapd, hapd == iface->bss[0], true);
+
 	hostapd_ucode_update_interfaces();
 
 done:
@@ -327,6 +386,7 @@ uc_hostapd_bss_delete(uc_vm_t *vm, size_
 	os_free(hapd);
 
 	hostapd_ucode_update_interfaces();
+
 	ucv_gc(vm);
 
 	return NULL;
--- a/src/ap/ucode.h
+++ b/src/ap/ucode.h
@@ -14,6 +14,7 @@ struct hostapd_ucode_bss {
 struct hostapd_ucode_iface {
 #ifdef UCODE_SUPPORT
 	int idx;
+	int radio_id;
 #endif
 };
 
