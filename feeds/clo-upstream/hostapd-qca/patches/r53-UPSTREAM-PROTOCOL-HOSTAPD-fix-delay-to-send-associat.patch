From f078966f6b891c6e8384c9ab62f81bd574955471 Mon Sep 17 00:00:00 2001
From: Ramasamy Kaliappan <quic_rkaliapp@quicinc.com>
Date: Thu, 21 Nov 2024 23:36:43 +0530
Subject: [PATCH] UPSTREAM:PROTOCOL:HOSTAPD: fix delay to send association
 Response

When it configures the maximum (16) MLD AP while handling the
association request frame, if set_beacon is true, it updates the beacon
content, which internally sets the beacon content for all 2 GHz and
5 GHz partner link interfaces. This leads to a delay in sending the
association response frame.

Optimize the delay between association request and association response
update the beacon content after sending the association response frame.

Signee-off-by: Ramasamy Kaliappan <quic_rkaliapp@quicinc.com>
---
 src/ap/drv_callbacks.c |  2 +-
 src/ap/ieee802_11.c    | 20 +++++++++++---------
 src/ap/ieee802_11.h    |  3 ++-
 3 files changed, 14 insertions(+), 11 deletions(-)

--- a/src/ap/drv_callbacks.c
+++ b/src/ap/drv_callbacks.c
@@ -925,7 +925,7 @@ skip_wpa_check:
 #ifdef CONFIG_IEEE80211BE
 	if (hostapd_process_assoc_ml_info(hapd, sta, req_ies, req_ies_len,
 					  !!reassoc, WLAN_STATUS_SUCCESS,
-					  true)) {
+					  true, NULL)) {
 		status = WLAN_STATUS_UNSPECIFIED_FAILURE;
 		reason = WLAN_REASON_UNSPECIFIED;
 		goto fail;
--- a/src/ap/ieee802_11.c
+++ b/src/ap/ieee802_11.c
@@ -4734,7 +4734,8 @@ static int ieee80211_ml_process_link(str
 				     struct sta_info *origin_sta,
 				     struct mld_link_info *link,
 				     const u8 *ies, size_t ies_len,
-				     bool reassoc, bool offload)
+				     bool reassoc, bool offload,
+				     bool *set_beacon)
 {
 	struct ieee802_11_elems elems;
 	struct wpabuf *mlbuf = NULL;
@@ -4813,8 +4814,8 @@ static int ieee80211_ml_process_link(str
 		}
 		hapd->sta_aid[sta->aid / 32] |= BIT(sta->aid % 32);
 		sta->listen_interval = origin_sta->listen_interval;
-		if (update_ht_state(hapd, sta) > 0)
-			ieee802_11_update_beacons(hapd->iface);
+		if (update_ht_state(hapd, sta) > 0 && set_beacon)
+			*set_beacon = true;
 	}
 
 	/*
@@ -4876,7 +4877,8 @@ int hostapd_process_assoc_ml_info(struct
 				  struct sta_info *sta,
 				  const u8 *ies, size_t ies_len,
 				  bool reassoc, int tx_link_status,
-				  bool offload)
+				  bool offload,
+				  bool *set_beacon)
 {
 #ifdef CONFIG_IEEE80211BE
 	unsigned int i;
@@ -4962,7 +4964,7 @@ int hostapd_process_assoc_ml_info(struct
 		} else {
 			if (ieee80211_ml_process_link(bss, hapd, sta, link,
 						      ies, ies_len, reassoc,
-						      offload))
+						      offload, set_beacon))
 				return -1;
 		}
 	}
@@ -6124,9 +6126,6 @@ static void handle_assoc(struct hostapd_
 	}
 #endif /* CONFIG_FILS */
 
-	if (set_beacon)
-		ieee802_11_update_beacons(hapd->iface);
-
 	ubus_resp = hostapd_ubus_handle_event(hapd, &req);
 	if (ubus_resp) {
 		wpa_printf(MSG_DEBUG, "Station " MACSTR " assoc rejected by ubus handler.\n",
@@ -6156,7 +6155,7 @@ static void handle_assoc(struct hostapd_
 	 */
 	if (sta)
 		hostapd_process_assoc_ml_info(hapd, sta, pos, left, reassoc,
-					      resp, false);
+					      resp, false, &set_beacon);
 
 	if (resp == WLAN_STATUS_SUCCESS && sta &&
 	    add_associated_sta(hapd, sta, reassoc))
@@ -6206,6 +6205,10 @@ static void handle_assoc(struct hostapd_
 					    sa, resp, reassoc,
 					    pos, left, rssi, omit_rsnxe,
 					    !mld_addrs_not_translated);
+
+	if (set_beacon)
+		ieee802_11_update_beacons(hapd->iface);
+
 	os_free(tmp);
 
 	/*
--- a/src/ap/ieee802_11.h
+++ b/src/ap/ieee802_11.h
@@ -299,6 +299,7 @@ int hostapd_process_assoc_ml_info(struct
 				  struct sta_info *sta,
 				  const u8 *ies, size_t ies_len,
 				  bool reassoc, int tx_link_status,
-				  bool offload);
+				  bool offload,
+				  bool *set_beacon);
 
 #endif /* IEEE802_11_H */
