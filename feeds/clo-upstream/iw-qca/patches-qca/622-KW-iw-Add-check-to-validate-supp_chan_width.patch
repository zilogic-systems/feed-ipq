From 6a4aae13b9a2ff3797e23fa133858c26c9c0cddc Mon Sep 17 00:00:00 2001
From: Rajat Soni <quic_rajson@quicinc.com>
Date: Wed, 28 Aug 2024 10:13:03 +0530
Subject: [PATCH] KW: iw: Add check to validate supp_chan_width

In print_vht_info(), we have supp_chan_width that represents if we are
supporting 160 MHz and 80+80 MHz.
supp_chan_width = 0, means 160 MHz and 80+80 MHz are not supported.
supp_chan_width = 1, means 160 MHz is supported and 80+80 MHz is not
supported.
supp_chan_width = 2, means 160 MHz and 80+80 MHz are supported.

So, allowed supp_chan_width values are 0,1 and 2.

supp_chan_width is calculated as
"supp_chan_width = (capa >> 2) & 3;", supp_chan_width can be 0 to 3. 

Array nss_ratio_tbl is define as nss_ratio_tbl[3][4], and we access
nss_ratio_tbl[supp_chan_width][ext_nss_bw]. The value of supp_chan_width
can cause array out of bound issue and corrupt the memory.

To resolve this issue add a check for the value of supp_chan_width.

Patch-dependency: None
Patch-rework: None

Signed-off-by: Rajat Soni <quic_rajson@quicinc.com>
---
 util.c | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/util.c b/util.c
index b84d1e7..d2c37d0 100644
--- a/util.c
+++ b/util.c
@@ -1121,6 +1121,12 @@ void print_vht_info(__u32 capa, const __u8 *mcs)
 
 	printf("\t\t\tSupported Channel Width: ");
 	supp_chan_width = (capa >> 2) & 3;
+
+	if (supp_chan_width > 2) {
+		printf("Invalid Supported Channel Width %d received", supp_chan_width);
+		return;
+	}
+
 	ext_nss_bw = (capa >> 30) & 3;
 	nss_tbl = &nss_ratio_tbl[supp_chan_width][ext_nss_bw];
 
-- 
2.34.1

