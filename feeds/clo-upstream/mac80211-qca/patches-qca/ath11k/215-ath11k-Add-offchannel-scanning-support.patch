From 2dea4f3eea80c9024e2ca291c821dee3f31876b5 Mon Sep 17 00:00:00 2001
From: Abinaya Kalaiselvan <akalaise@codeaurora.org>
Date: Thu, 15 Oct 2020 16:39:56 +0530
Subject: [PATCH] ath11k: Add offchannel scanning support

Advertise NL80211_EXT_FEATURE_SET_SCAN_DWELL to add support for
offchannel scanning.

Usage:
iw wlanX scan trigger freq <freq> duration <dur> ap-force

Ex:
iw wlan0 scan trigger freq 5825 duration 30 ap-force

Sample Output:
iw wlan0 survey dump

Survey data from wlan0
        frequency:                      5825 MHz
        noise:                          -105 dBm
        channel active time:            25 ms

Signed-off-by: Abinaya Kalaiselvan <akalaise@codeaurora.org>
---
 drivers/net/wireless/ath/ath11k/core.h |  2 ++
 drivers/net/wireless/ath/ath11k/mac.c  | 25 ++++++++++++++++++++++---
 drivers/net/wireless/ath/ath11k/wmi.c  |  4 ++++
 drivers/net/wireless/ath/ath11k/wmi.h  |  2 ++
 4 files changed, 30 insertions(+), 3 deletions(-)

--- a/drivers/net/wireless/ath/ath11k/core.h
+++ b/drivers/net/wireless/ath/ath11k/core.h
@@ -45,6 +45,8 @@ extern bool ath11k_collect_dump;
 
 #define ATH11K_TX_MGMT_TARGET_MAX_SUPPORT_WMI 64
 
+#define ATH11K_SCAN_CHANNEL_SWITCH_WMI_EVT_OVERHEAD 10 /* msec */
+
 /* Pending management packets threshold for dropping probe responses */
 #define ATH11K_PRB_RSP_DROP_THRESHOLD ((ATH11K_TX_MGMT_TARGET_MAX_SUPPORT_WMI * 3) / 4)
 
--- a/drivers/net/wireless/ath/ath11k/mac.c
+++ b/drivers/net/wireless/ath/ath11k/mac.c
@@ -4444,6 +4444,7 @@ ath11k_mac_bitrate_mask_num_ht_rates(str
 {
 	int num_rates = 0;
 	int i;
+	u32 scan_timeout;
 
 	for (i = 0; i < ARRAY_SIZE(mask->control[band].ht_mcs); i++)
 		num_rates += hweight8(mask->control[band].ht_mcs[i]);
@@ -10073,6 +10074,11 @@ static int __ath11k_mac_register(struct
 
 	wiphy_ext_feature_set(ar->hw->wiphy, NL80211_EXT_FEATURE_ACK_SIGNAL_SUPPORT);
 
+	if (test_bit(WMI_TLV_SERVICE_PASSIVE_SCAN_START_TIME_ENHANCE,
+                     ar->ab->wmi_ab.svc_map))
+		 wiphy_ext_feature_set(ar->hw->wiphy,
+				       NL80211_EXT_FEATURE_SET_SCAN_DWELL);
+
 	ar->hw->queues = ATH11K_HW_MAX_QUEUES;
 	ar->hw->wiphy->tx_queue_len = ATH11K_QUEUE_LEN;
 	ar->hw->offchannel_tx_hw_queue = ATH11K_HW_MAX_QUEUES - 1;
