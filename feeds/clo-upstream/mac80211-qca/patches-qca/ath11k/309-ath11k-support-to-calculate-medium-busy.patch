From 10b8f3176e2174278b82989a1f614ce084308c9f Mon Sep 17 00:00:00 2001
From: Hari Chandrakanthan <haric@codeaurora.org>
Date: Mon, 4 Sep 2023 13:35:32 +0530
Subject: [PATCH] ath11k : support to calculate medium busy

Signed-off-by: Hari Chandrakanthan <haric@codeaurora.org>
---
 drivers/net/wireless/ath/ath11k/debugfs.c | 26 +++++++++++++++++++++++
 drivers/net/wireless/ath/ath11k/wmi.c     | 13 ++++++++++++
 2 files changed, 39 insertions(+)

diff --git a/drivers/net/wireless/ath/ath11k/debugfs.c b/drivers/net/wireless/ath/ath11k/debugfs.c
index 616b3aa..18b7195 100644
--- a/drivers/net/wireless/ath/ath11k/debugfs.c
+++ b/drivers/net/wireless/ath/ath11k/debugfs.c
@@ -3632,6 +3632,30 @@ static const struct file_operations fops_ani_level = {
 	.llseek = default_llseek,
 };
 
+static ssize_t ath11k_medium_busy_read(struct file *file,
+				       char __user *user_buf,
+				       size_t count, loff_t *ppos)
+{
+	struct ath11k *ar = file->private_data;
+	u8 buf[50];
+	size_t len = 0;
+
+	mutex_lock(&ar->conf_mutex);
+	len += scnprintf(buf + len, sizeof(buf) - len,
+			 "Medium Busy in percentage %u\n",
+			 ar->hw->medium_busy);
+	mutex_unlock(&ar->conf_mutex);
+
+	return simple_read_from_buffer(user_buf, count, ppos, buf, len);
+}
+
+static const struct file_operations fops_medium_busy = {
+	.read = ath11k_medium_busy_read,
+	.open = simple_open,
+	.owner = THIS_MODULE,
+	.llseek = default_llseek,
+};
+
 int ath11k_debugfs_register(struct ath11k *ar)
 {
 	struct ath11k_base *ab = ar->ab;
@@ -3744,6 +3768,8 @@ int ath11k_debugfs_register(struct ath11k *ar)
 			    ar->debug.debugfs_pdev, ar, &fops_ani_poll_period);
 	debugfs_create_file("ani_listen_period", S_IRUSR | S_IWUSR,
 			    ar->debug.debugfs_pdev, ar, &fops_ani_listen_period);
+	debugfs_create_file("medium_busy", S_IRUSR, ar->debug.debugfs_pdev, ar,
+			    &fops_medium_busy);
 	return 0;
 }
 
diff --git a/drivers/net/wireless/ath/ath11k/wmi.c b/drivers/net/wireless/ath/ath11k/wmi.c
index 0b9717a..ec03f40 100644
--- a/drivers/net/wireless/ath/ath11k/wmi.c
+++ b/drivers/net/wireless/ath/ath11k/wmi.c
@@ -7370,6 +7370,7 @@ static int ath11k_wmi_tlv_fw_stats_data_parse(struct ath11k_base *ab,
 	struct ath11k_sta *arsta;
 	int i, ret = 0;
 	const void *data = ptr;
+	u64 time, time_busy;
 
 	if (!ev) {
 		ath11k_warn(ab, "failed to fetch update stats ev");
@@ -7405,7 +7406,16 @@ static int ath11k_wmi_tlv_fw_stats_data_parse(struct ath11k_base *ab,
 		ath11k_wmi_pull_pdev_stats_tx(&src->tx, dst);
 		ath11k_wmi_pull_pdev_stats_rx(&src->rx, dst);
 		list_add_tail(&dst->list, &stats->pdevs);
+
+		spin_lock_bh(&ar->data_lock);
+		time = div_u64(dst->cycle_count, ab->cc_freq_hz);
+		if(ar && time) {
+			time_busy = div_u64(dst->rx_clear_count, ab->cc_freq_hz);
+			ar->hw->medium_busy = div_u64((time_busy * 100), time);
+		}
+		spin_unlock_bh(&ar->data_lock);
 	}
+	rcu_read_unlock();
 
 	for (i = 0; i < ev->num_vdev_stats; i++) {
 		const struct wmi_vdev_stats *src;
@@ -9060,6 +9070,9 @@ static void ath11k_chan_info_event(struct ath11k_base *ab, struct sk_buff *skb)
 				 SURVEY_INFO_TIME_BUSY;
 		survey->time = div_u64(ch_info_ev.cycle_count, cc_freq_hz);
 		survey->time_busy = div_u64(ch_info_ev.rx_clear_count, cc_freq_hz);
+		if (survey->time)
+			ar->hw->medium_busy = div_u64((survey->time_busy * 100),
+						      survey->time);
 	}
 exit:
 	spin_unlock_bh(&ar->data_lock);
-- 
2.17.1

