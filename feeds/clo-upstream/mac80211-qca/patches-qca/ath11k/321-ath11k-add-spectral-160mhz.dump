From b783459a2ede8bbb083ea9c6c2de0294453f23c9 Mon Sep 17 00:00:00 2001
From: Tamizh Chelvam <tamizhr@codeaurora.org>
Date: Mon, 26 Jul 2021 12:37:25 +0530
Subject: [PATCH] ath11k: Add spectral scan support for 160mhz

Add spectral scan 160mhz support for all chipsets.
There are two types of 160mhz support mentioned below
1. Fragmented approach
2. Single event approach
In this fragmented approach, single 160mhz will be splitted
as two 80mhz buffer. First buffer will contain spectral scan
buffer or primary 80 and the second buffer will contain
secondary 80 and here cfreq1 and cfreq2 will be mentioned.
In case of 160mhz on 36th channel will contain cfreq1 as 5210
and cfreq2 as 5290. Chipsets which support this approach are
IPQ8074/IPQ6018.

A boolean parameter(is_primary) introduced to notify this two
different buffer to userspace tool by checking cfreq2 value.

In the 2nd approach each buffer will contain spectral scan
result for whole 160mhz by mentioning cfreq1 as 5250 which
is center frequency of whole 160mhz. And the new two parameters
will be false for this approach. Chipsets which support this
approach are QCN9074/QCN6122.

Signed-off-by: Tamizh Chelvam <tamizhr@codeaurora.org>
---
 drivers/net/wireless/ath/ath11k/core.c     | 5 +++++
 drivers/net/wireless/ath/ath11k/hw.h       | 1 +
 drivers/net/wireless/ath/ath11k/spectral.c | 9 +++++++++
 drivers/net/wireless/ath/ath11k/spectral.h | 1 +
 drivers/net/wireless/ath/spectral_common.h | 2 ++
 5 files changed, 18 insertions(+)

--- a/drivers/net/wireless/ath/spectral_common.h
+++ b/drivers/net/wireless/ath/spectral_common.h
@@ -116,6 +116,7 @@ struct fft_sample_ath11k {
 	u8 chan_width_mhz;
 	s8 max_index;
 	u8 max_exp;
+	bool is_primary;
 	__be16 freq1;
 	__be16 freq2;
 	__be16 max_magnitude;
--- a/drivers/net/wireless/ath/ath11k/wmi.h
+++ b/drivers/net/wireless/ath/ath11k/wmi.h
@@ -2234,6 +2234,7 @@ enum wmi_beacon_gen_mode {
 enum wmi_direct_buffer_module {
 	WMI_DIRECT_BUF_SPECTRAL = 0,
 	WMI_DIRECT_BUF_CFR = 1,
+	WMI_CONFIG_MODULE_CV_UPLOAD = 2,
 
 	/* keep it last */
 	WMI_DIRECT_BUF_MAX
