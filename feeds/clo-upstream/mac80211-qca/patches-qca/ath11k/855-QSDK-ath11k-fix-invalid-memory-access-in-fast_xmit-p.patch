From 40eb0125b6143ab725c9422a3e0c5b062d2af549 Mon Sep 17 00:00:00 2001
From: Thiraviyam Mariyappan <quic_tmariyap@quicinc.com>
Date: Thu, 2 May 2024 10:21:51 +0530
Subject: [PATCH] QSDK: ath11k: fix invalid memory access in fast_xmit path

Currently skb->cb is not getting memset in mac80211's fast_xmit path to
avoid CPU degradation. So when using skb->cb in ath11k driver, it leads
to invalid memory access.

Fix it by calling ath11k_dp_tx_simple before accessing the skb->cb pointer.

Fixes : I3601409bfab (ath12k: Optimize ath12k Tx datpath for peak performance)
Patch-dependency: none

Signed-off-by: P Praneesh <quic_ppranees@quicinc.com>
Signed-off-by: Thiraviyam Mariyappan <quic_tmariyap@quicinc.com>
---
 drivers/net/wireless/ath/ath11k/mac.c | 15 ++++++++++-----
 1 file changed, 10 insertions(+), 5 deletions(-)

diff --git a/drivers/net/wireless/ath/ath11k/mac.c b/drivers/net/wireless/ath/ath11k/mac.c
index e04b854..3a57868 100644
--- a/drivers/net/wireless/ath/ath11k/mac.c
+++ b/drivers/net/wireless/ath/ath11k/mac.c
@@ -7647,11 +7647,6 @@ static void ath11k_mac_op_tx(struct ieee80211_hw *hw,
 	int ret;
 	u64 adjusted_tsf;
 
-#ifdef CPTCFG_MAC80211_SFE_SUPPORT
-	 if (skb->fast_xmit)
-                info_flags |= IEEE80211_TX_CTL_HW_80211_ENCAP;
-#endif
-
 	if (arvif->vdev_type == WMI_VDEV_TYPE_MONITOR) {
 		ieee80211_free_txskb(ar->hw, skb);
 		return;
@@ -7665,6 +7660,13 @@ static void ath11k_mac_op_tx(struct ieee80211_hw *hw,
 	memset(skb_cb, 0, sizeof(*skb_cb));
 	skb_cb->vif = vif;
 
+#ifdef CPTCFG_MAC80211_SFE_SUPPORT
+	 if (skb->fast_xmit) {
+                info_flags |= IEEE80211_TX_CTL_HW_80211_ENCAP;
+		goto skip_regular_xmit;
+	}
+#endif
+
 	if (key) {
 		skb_cb->cipher = key->cipher;
 		skb_cb->flags |= ATH11K_SKB_CIPHER_SET;
@@ -7746,6 +7748,9 @@ static void ath11k_mac_op_tx(struct ieee80211_hw *hw,
 			skb_cb->flags |= ATH11K_SKB_F_NOACK_TID;
 	}
 
+#ifdef CPTCFG_MAC80211_SFE_SUPPORT
+skip_regular_xmit:
+#endif
 	if (ar->ab->nss.enabled)
 		ret = ath11k_nss_tx(arvif, skb);
 	else if (info->flags & IEEE80211_TX_CTL_HW_80211_ENCAP)
-- 
2.17.1

