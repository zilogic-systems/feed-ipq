From 7af16078ca67bb710655572b122b0b3f08a67cfb Mon Sep 17 00:00:00 2001
From: Aaradhana Sahu <quic_aarasahu@quicinc.com>
Date: Wed, 20 Dec 2023 16:09:27 +0530
Subject: [PATCH] ath11k: Fix DBDC WARN_ON and send wmi suspend command during
 rmmod only

Currently, wmi suspend command send for radio down also due to this
firmware reload and start which affect ap station connectivity and
less beacon on air.

Fix this issue by sending wmi suspend command only during rmmod.
This patch also fixes below warn on for DBDC.

Rate marked as an HE rate but data is invalid: MCS: 0, NSS: 0

 ieee80211_rx_list+0x238/0xd74 [mac80211]
 ieee80211_rx_napi+0x54/0xc8 [mac80211]
 ath11k_dp_tx_htt_monitor_mode_ring_config+0x132c/0x2c7c [ath11k]
 ath11k_dp_rx_cbf_pktlog_process+0x3d8/0x4bc [ath11k]
 ath11k_dp_rx_mon_dest_process+0x274/0x2b8 [ath11k]
 ath11k_dp_rx_process_mon_status+0x5d4/0xf38 [ath11k]
 ath11k_dp_rx_process_mon_rings+0x41c/0x4b8 [ath11k]
 ath11k_dp_service_srng+0x19c/0x350 [ath11k]
 0xffffffc0012aada0
 __napi_poll+0x30/0x178
 napi_threaded_poll+0xd4/0x144
 kthread+0x104/0x114
 ret_from_fork+0x10/0x20

Signed-off-by: Aaradhana Sahu <quic_aarasahu@quicinc.com>
---
 drivers/net/wireless/ath/ath11k/dp_rx.c | 10 ++++++----
 drivers/net/wireless/ath/ath11k/mac.c   |  8 +++++---
 2 files changed, 11 insertions(+), 7 deletions(-)

diff --git a/drivers/net/wireless/ath/ath11k/dp_rx.c b/drivers/net/wireless/ath/ath11k/dp_rx.c
index 721b2c7..de71bc7 100644
--- a/drivers/net/wireless/ath/ath11k/dp_rx.c
+++ b/drivers/net/wireless/ath/ath11k/dp_rx.c
@@ -6554,10 +6554,10 @@ int ath11k_dp_rx_process_mon_status(struct ath11k_base *ab, int mac_id,
 	if (!num_buffs_reaped)
 		goto exit;
 
-	if (!ppdu_info->ppdu_continuation)
+	if (!ppdu_info->ppdu_continuation) {
 		memset(ppdu_info, 0, sizeof(*ppdu_info));
-
-	ppdu_info->peer_id = HAL_INVALID_PEERID;
+		ppdu_info->peer_id = HAL_INVALID_PEERID;
+	}
 
 	while ((skb = __skb_dequeue(&skb_list))) {
 		if (ath11k_debugfs_is_pktlog_lite_mode_enabled(ar)) {
@@ -6576,7 +6576,9 @@ int ath11k_dp_rx_process_mon_status(struct ath11k_base *ab, int mac_id,
 		if (log_type != ATH11K_PKTLOG_TYPE_INVALID)
 			trace_ath11k_htt_rxdesc(ar, skb->data, log_type, rx_buf_sz);
 
-		ppdu_info->peer_id = HAL_INVALID_PEERID;
+		if (!ppdu_info->ppdu_continuation)
+			memset(ppdu_info, 0, sizeof(struct hal_rx_mon_ppdu_info));
+
 		hal_status = ath11k_hal_rx_parse_mon_status(ab, ppdu_info, skb);
 
 		if (test_bit(ATH11K_FLAG_MONITOR_STARTED, &ar->monitor_flags) &&
diff --git a/drivers/net/wireless/ath/ath11k/mac.c b/drivers/net/wireless/ath/ath11k/mac.c
index 09b595c..dc7d9e3 100644
--- a/drivers/net/wireless/ath/ath11k/mac.c
+++ b/drivers/net/wireless/ath/ath11k/mac.c
@@ -8050,7 +8050,8 @@ static void ath11k_mac_op_stop(struct ieee80211_hw *hw)
 			   ret);
 
 	clear_bit(ATH11K_CAC_RUNNING, &ar->dev_flags);
-	if (ar->state != ATH11K_STATE_OFF) {
+	if (ar->state != ATH11K_STATE_OFF &&
+	    test_bit(ATH11K_FLAG_UNREGISTERING, &ar->ab->dev_flags)) {
 		ath11k_wait_for_suspend(ar, WMI_PDEV_SUSPEND_AND_DISABLE_INTR);
 
 		if (!test_bit(ATH11K_FLAG_CRASH_FLUSH, &ar->ab->dev_flags))
@@ -8059,9 +8060,10 @@ static void ath11k_mac_op_stop(struct ieee80211_hw *hw)
 		ath11k_hif_power_down(ar->ab);
 		ath11k_qmi_free_resource(ar->ab);
 		ar->ab->pm_suspend = true;
-		ar->state = ATH11K_STATE_OFF;
-		ar->ap_ps_state = ATH11K_AP_PS_STATE_OFF;
 	}
+
+	ar->state = ATH11K_STATE_OFF;
+	ar->ap_ps_state = ATH11K_AP_PS_STATE_OFF;
 	mutex_unlock(&ar->conf_mutex);
 
 	cancel_delayed_work_sync(&ar->scan.timeout);
-- 
2.34.1

