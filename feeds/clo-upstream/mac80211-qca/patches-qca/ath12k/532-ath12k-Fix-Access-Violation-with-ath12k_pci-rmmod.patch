From fbb28f4c838d4071d4851b6ad82411b6154b00b6 Mon Sep 17 00:00:00 2001
From: Karthikeyan Periyasamy <quic_periyasa@quicinc.com>
Date: Thu, 3 Feb 2022 18:52:39 +0530
Subject: [PATCH] ath12k: Fix Access Violation with ath12k_pci rmmod

Below warning messages are seen during rmmod ath12k_pci,
WARN: Access Violation!!!, Run
"cat /sys/kernel/debug/qti_debug_logs/tz_log" for more
details
When doing "rmmod ath12k_pci", ath12k performs global SOC reset
and MHI reset, where 0 address access is captured by IOMMU.
Such an invalid access occurs because, during rmmod or SSR, MSI
address is cleared but HW MSI functionality not disabled, thus HW
target is able to raise an MSI transaction with 0 as MSI address.
So it can be fixed by simply disabling MSI before reset. For SSR,
since MSI functionality is still needed after target is brought
back, we need to reenable it.

Signed-off-by: Karthikeyan Periyasamy <quic_periyasa@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/pci.c | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/drivers/net/wireless/ath/ath12k/pci.c b/drivers/net/wireless/ath/ath12k/pci.c
index d9f5e34..1be6a41 100644
--- a/drivers/net/wireless/ath/ath12k/pci.c
+++ b/drivers/net/wireless/ath/ath12k/pci.c
@@ -321,6 +321,8 @@ static void ath12k_pci_force_wake(struct ath12k_base *ab)
 
 static void ath12k_pci_sw_reset(struct ath12k_base *ab, bool power_on)
 {
+	mdelay(100);
+
 	if (power_on) {
 		ath12k_pci_enable_ltssm(ab);
 		ath12k_pci_clear_all_intrs(ab);
-- 
2.17.1

