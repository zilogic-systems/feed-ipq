From 0fbacb2191aa9c1ec4f1388ce81a2436e9cd052c Mon Sep 17 00:00:00 2001
From: Sivashankari Madhavan <quic_sivamadh@quicinc.com>
Date: Wed, 9 Nov 2022 16:48:49 +0530
Subject: [PATCH] ath12k: Fix the avg ack signal inconsistency issue

The average acknowledgment signal is filled by the value of the
default noise level + RSSI(received signal strength indicator).

Before calculation, the RSSI variable is not updated anywhere
it always comes with 0.
(ie) -95 + 0 = -95

Fix it by filling in the RSSI Value before calculating the
average acknowledgment signal.

root@OpenWrt:/# iw wlan0 station dump
.....
last ack signal:-32 dBm
avg ack signal: -32 dBm
.....

Signed-off-by: Sivashankari Madhavan <quic_sivamadh@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/dp_tx.c | 2 ++
 1 file changed, 2 insertions(+)

--- a/drivers/net/wireless/ath/ath12k/dp_tx.c
+++ b/drivers/net/wireless/ath/ath12k/dp_tx.c
@@ -645,6 +645,8 @@ static inline void ath12k_dp_tx_status_p
 			       desc->info0);
 	ts->ppdu_id = FIELD_GET(HAL_WBM_COMPL_TX_INFO1_TQM_STATUS_NUMBER,
 				desc->info1);
+	ts->ack_rssi = FIELD_GET(HAL_WBM_COMPL_TX_INFO2_ACK_FRAME_RSSI,
+				 desc->info2);
 	if (desc->rate_stats.info0 & HAL_TX_RATE_STATS_INFO0_VALID)
 		ts->rate_stats = desc->rate_stats.info0;
 	else
--- a/drivers/net/wireless/ath/ath12k/wmi.c
+++ b/drivers/net/wireless/ath/ath12k/wmi.c
@@ -5967,7 +5967,8 @@ static int ath12k_pull_mgmt_rx_params_tl
 }
 
 static int wmi_process_mgmt_tx_comp(struct ath12k *ar, u32 desc_id,
-				    u32 status)
+				    u32 status,
+				    u32 ack_rssi)
 {
 	struct sk_buff *msdu;
 	struct ieee80211_tx_info *info;
@@ -6021,8 +6022,11 @@ skip_mgmt_stats:
 	spin_unlock_bh(&ar->data_lock);
 
 	info = IEEE80211_SKB_CB(msdu);
-	if ((!(info->flags & IEEE80211_TX_CTL_NO_ACK)) && !status)
+	if ((!(info->flags & IEEE80211_TX_CTL_NO_ACK)) && !status) {
 		info->flags |= IEEE80211_TX_STAT_ACK;
+		info->status.ack_signal = ack_rssi;
+		info->status.flags |= IEEE80211_TX_STATUS_ACK_SIGNAL_VALID;
+	}
 
 	ieee80211_tx_status_irqsafe(ar->ah->hw, msdu);
 
@@ -6063,6 +6067,8 @@ static int ath12k_pull_mgmt_tx_compl_par
 	param->pdev_id = ev->pdev_id;
 	param->desc_id = ev->desc_id;
 	param->status = ev->status;
+	param->ppdu_id = ev->ppdu_id;
+	param->ack_rssi = ev->ack_rssi;
 
 	kfree(tb);
 	return 0;
@@ -7570,7 +7576,8 @@ static void ath12k_mgmt_tx_compl_event(s
 	}
 
 	wmi_process_mgmt_tx_comp(ar, le32_to_cpu(tx_compl_param.desc_id),
-				 le32_to_cpu(tx_compl_param.status));
+				 le32_to_cpu(tx_compl_param.status),
+				 le32_to_cpu(tx_compl_param.ack_rssi));
 
 	ath12k_dbg(ab, ATH12K_DBG_MGMT,
 		   "mgmt tx compl ev pdev_id %d, desc_id %d, status %d",
--- a/drivers/net/wireless/ath/ath12k/wmi.h
+++ b/drivers/net/wireless/ath/ath12k/wmi.h
@@ -5047,6 +5047,8 @@ struct wmi_mgmt_tx_compl_event {
 	__le32 desc_id;
 	__le32 status;
 	__le32 pdev_id;
+	__le32 ppdu_id;
+	__le32 ack_rssi;
 } __packed;
 
 struct wmi_scan_event {
