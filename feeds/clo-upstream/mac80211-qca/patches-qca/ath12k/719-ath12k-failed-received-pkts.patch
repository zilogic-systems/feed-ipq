From 96f1f818ba1d2650797a5764530f7b8112284af6 Mon Sep 17 00:00:00 2001
From: saleemuddin shaik <quic_saleemud@quicinc.com>
Date: Sat, 4 Mar 2023 14:05:28 +0530
Subject: ath12k: add statistic support for counting wmm failed received
 packets.

if the desc bit is not set and num_msdu is greater then one,
then increment the drop packets are counted based on WMM categories.

Signed-off-by: saleemuddin shaik <quic_saleemud@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/core.h    |  1 +
 drivers/net/wireless/ath/ath12k/debugfs.c | 12 ++++++++++++
 drivers/net/wireless/ath/ath12k/dp_rx.c   |  1 +
 3 files changed, 14 insertions(+)

--- a/drivers/net/wireless/ath/ath12k/core.h
+++ b/drivers/net/wireless/ath/ath12k/core.h
@@ -738,6 +738,7 @@ struct ath12k_wmm_stats {
 	u64 total_wmm_tx_pkts[WME_NUM_AC];
 	u64 total_wmm_rx_pkts[WME_NUM_AC];
 	u64 total_wmm_tx_drop[WME_NUM_AC];
+	u64 total_wmm_rx_drop[WME_NUM_AC];
 };
 
 #define ATH12K_DSCP_PRIORITY 7
--- a/drivers/net/wireless/ath/ath12k/debugfs.c
+++ b/drivers/net/wireless/ath/ath12k/debugfs.c
@@ -1357,6 +1357,7 @@ static ssize_t ath12k_read_wmm_stats(str
 	u64 total_wmm_sent_pkts = 0;
 	u64 total_wmm_received_pkts = 0;
 	u64 total_wmm_fail_sent = 0;
+	u64 total_wmm_fail_received = 0;
 
 	buf = kzalloc(size, GFP_KERNEL);
 	if (!buf) {
@@ -1369,6 +1370,7 @@ static ssize_t ath12k_read_wmm_stats(str
 		total_wmm_sent_pkts += ar->wmm_stats.total_wmm_tx_pkts[count];
 		total_wmm_received_pkts += ar->wmm_stats.total_wmm_rx_pkts[count];
 		total_wmm_fail_sent += ar->wmm_stats.total_wmm_tx_drop[count];
+		total_wmm_fail_received += ar->wmm_stats.total_wmm_rx_drop[count];
 	}
 
 	len += scnprintf(buf + len, size - len, "Total number of wmm_sent: %llu\n",
@@ -1377,6 +1379,8 @@ static ssize_t ath12k_read_wmm_stats(str
 			 total_wmm_received_pkts);
 	len += scnprintf(buf + len, size - len, "total number of wmm_fail_sent: %llu\n",
 			 total_wmm_fail_sent);
+	len += scnprintf(buf + len, size - len, "total number of wmm_fail_received: %llu\n",
+			 total_wmm_fail_received);
 	len += scnprintf(buf + len, size - len, "Num of BE wmm_sent: %llu\n",
 			 ar->wmm_stats.total_wmm_tx_pkts[WME_AC_BE]);
 	len += scnprintf(buf + len, size - len, "Num of BK wmm_sent: %llu\n",
@@ -1401,6 +1405,14 @@ static ssize_t ath12k_read_wmm_stats(str
 			 ar->wmm_stats.total_wmm_tx_drop[WME_AC_VI]);
 	len += scnprintf(buf + len, size - len, "num of vo wmm_tx_dropped: %llu\n",
 			 ar->wmm_stats.total_wmm_tx_drop[WME_AC_VO]);
+	len += scnprintf(buf + len, size - len, "num of be wmm_rx_dropped: %llu\n",
+			 ar->wmm_stats.total_wmm_rx_drop[WME_AC_BE]);
+	len += scnprintf(buf + len, size - len, "num of bk wmm_rx_dropped: %llu\n",
+			 ar->wmm_stats.total_wmm_rx_drop[WME_AC_BK]);
+	len += scnprintf(buf + len, size - len, "num of vi wmm_rx_dropped: %llu\n",
+			 ar->wmm_stats.total_wmm_rx_drop[WME_AC_VI]);
+	len += scnprintf(buf + len, size - len, "num of vo wmm_rx_dropped: %llu\n",
+			 ar->wmm_stats.total_wmm_rx_drop[WME_AC_VO]);
 
 	mutex_unlock(&ar->conf_mutex);
 
--- a/drivers/net/wireless/ath/ath12k/dp_rx.c
+++ b/drivers/net/wireless/ath/ath12k/dp_rx.c
@@ -4120,8 +4120,7 @@ int ath12k_dp_rx_process_err(struct ath1
 	int mac_id;
 	struct ath12k *ar;
 	dma_addr_t paddr;
-	bool is_frag;
-	bool drop = false;
+	bool is_frag, drop = false;
 	int pdev_id;
 
 	tot_n_bufs_reaped = 0;
@@ -4186,6 +4185,9 @@ int ath12k_dp_rx_process_err(struct ath1
 			pdev_id = ath12k_hw_mac_id_to_pdev_id(ab->hw_params, mac_id);
 			ar = ab->pdevs[pdev_id].ar;
 
+			if (drop)
+				ar->wmm_stats.total_wmm_rx_drop[ar->wmm_stats.rx_type]++;
+
 			if (!ath12k_dp_process_rx_err_buf(ar, reo_desc, drop,
 							  msdu_cookies[i]))
 				tot_n_bufs_reaped++;
