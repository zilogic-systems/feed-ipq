From a5eb6c8b1358083577d84f8bae9f3e6177ae0e29 Mon Sep 17 00:00:00 2001
From: Karthikeyan Kathirvel <quic_kathirve@quicinc.com>
Date: Fri, 21 Apr 2023 23:06:50 +0530
Subject: [PATCH] ath12k: add beacon protection support for ath12k

AP provisions its clients with the APâ€™s Beacon Integrity Key during
security association setup and adds a message integrity check (MIC)
element to Beacon frames that covers all but the timestamp field of
the Beacon frame contents. This allows clients that are associated
with the AP to verify the Beacon frame integrity, and detect active
attacks that forge or modify Beacon frames. This prevents active
attacks in which the Beacon frame IEs are altered to cause client
devices to, for example, consume more power, use lower data rates,
or incorrectly switch channels.

Sample IE format in beacon:

        Tag: Management MIC
            Tag Number: Management MIC (76)
            Tag length: 16
            KeyID: 6
            IPN: 010000000000
            MIC: 581e118108cccf9f

Signed-off-by: Karthikeyan Kathirvel <quic_kathirve@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/mac.c | 7 +++++--
 drivers/net/wireless/ath/ath12k/wmi.h | 2 +-
 2 files changed, 6 insertions(+), 3 deletions(-)

--- a/drivers/net/wireless/ath/ath12k/mac.c
+++ b/drivers/net/wireless/ath/ath12k/mac.c
@@ -1557,6 +1557,7 @@ static void ath12k_mac_setup_bcn_tmpl_vi
 	struct ieee80211_mgmt *mgmt;
 	struct ath12k_vif *ahvif = arvif->ahvif;
 	struct ieee80211_vht_cap *vht_cap;
+	const struct element *elem;
 	u8 *ies;
 	const u8 *vht_cap_ie;
 
@@ -1575,6 +1576,11 @@ static void ath12k_mac_setup_bcn_tmpl_vi
 		arvif->vht_cap = vht_cap->vht_cap_info;
 	}
 
+	elem = cfg80211_find_elem(WLAN_EID_EXT_CAPABILITY, ies, (skb_tail_pointer(bcn) - ies));
+	if (elem && elem->datalen >= 11 &&
+			(elem->data[10] & WLAN_EXT_CAPA11_BCN_PROTECT))
+		arvif->beacon_prot = true;
+
 	/* avoid ie parsing if already done for this ahvif */
 	if (!ahvif->wpaie_present &&
 	    cfg80211_find_vendor_ie(WLAN_OUI_MICROSOFT,
@@ -5423,6 +5429,16 @@ static int ath12k_install_key(struct ath
 	case WLAN_CIPHER_SUITE_GCMP_256:
 		arg.key_cipher = WMI_CIPHER_AES_GCM;
 		break;
+	case WLAN_CIPHER_SUITE_AES_CMAC:
+		arg.key_cipher = WMI_CIPHER_AES_CMAC;
+		break;
+	case WLAN_CIPHER_SUITE_BIP_GMAC_128:
+	case WLAN_CIPHER_SUITE_BIP_GMAC_256:
+		arg.key_cipher = WMI_CIPHER_AES_GMAC;
+		break;
+	case WLAN_CIPHER_SUITE_BIP_CMAC_256:
+		arg.key_cipher = WMI_CIPHER_NONE;
+		break;
 	default:
 		ath12k_warn(ar->ab, "cipher %d is not supported\n", key->cipher);
 		return -EOPNOTSUPP;
@@ -5636,11 +5652,8 @@ static int ath12k_mac_op_set_key(struct
 
 	mutex_lock(&ah->conf_mutex);
 
-	/* BIP needs to be done in software */
-	if (key->cipher == WLAN_CIPHER_SUITE_AES_CMAC ||
-	    key->cipher == WLAN_CIPHER_SUITE_BIP_GMAC_128 ||
-	    key->cipher == WLAN_CIPHER_SUITE_BIP_GMAC_256 ||
-	    key->cipher == WLAN_CIPHER_SUITE_BIP_CMAC_256) {
+	/* IGTK needs to be done in host software */
+	if (key->keyidx == 4 || key->keyidx == 5) {
 		ret = 1;
 		goto out;
 	}
@@ -15024,6 +15037,7 @@ static int ath12k_mac_hw_register(struct
 	wiphy_ext_feature_set(hw->wiphy, NL80211_EXT_FEATURE_CQM_RSSI_LIST);
 	wiphy_ext_feature_set(hw->wiphy, NL80211_EXT_FEATURE_STA_TX_PWR);
 	wiphy_ext_feature_set(hw->wiphy, NL80211_EXT_FEATURE_ACK_SIGNAL_SUPPORT);
+	wiphy_ext_feature_set(hw->wiphy, NL80211_EXT_FEATURE_BEACON_PROTECTION);
 
 	if (test_bit(WMI_TLV_SERVICE_BSS_COLOR_OFFLOAD, ab->wmi_ab.svc_map))
                 wiphy_ext_feature_set(hw->wiphy,
--- a/drivers/net/wireless/ath/ath12k/wmi.h
+++ b/drivers/net/wireless/ath/ath12k/wmi.h
@@ -4071,6 +4071,8 @@ struct wmi_ftm_event_msg {
 #define WMI_BEACON_EMA_PARAM_FIRST_TMPL_SHIFT          16
 #define WMI_BEACON_EMA_PARAM_LAST_TMPL_SHIFT           24
 
+#define WMI_BEACON_PROTECTION_EN_BIT	BIT(0)
+
 struct wmi_bcn_tmpl_cmd {
 	__le32 tlv_header;
 	__le32 vdev_id;
@@ -5365,7 +5367,7 @@ enum wmi_ap_ps_peer_param {
 
 #define DISABLE_SIFS_RESPONSE_TRIGGER 0
 
-#define WMI_MAX_KEY_INDEX   3
+#define WMI_MAX_KEY_INDEX   7
 #define WMI_MAX_KEY_LEN     32
 
 enum wmi_key_type {
--- a/drivers/net/wireless/ath/ath12k/core.h
+++ b/drivers/net/wireless/ath/ath12k/core.h
@@ -302,6 +302,7 @@ struct ath12k_link_vif {
 	u8 search_type;
 	int bank_id;
 	u8 vdev_id_check_en;
+	bool beacon_prot;
 
 	struct wmi_wmm_params_all_arg wmm_params;
 	struct list_head list;
--- a/drivers/net/wireless/ath/ath12k/wmi.c
+++ b/drivers/net/wireless/ath/ath12k/wmi.c
@@ -2611,6 +2611,8 @@ int ath12k_wmi_bcn_tmpl(struct ath12k *a
 	cmd->buf_len = cpu_to_le32(bcn->len);
 	cmd->mbssid_ie_offset = cpu_to_le32(offs->mbssid_off);
 	cmd->ema_params = cpu_to_le32(ema_params);
+	cmd->feature_enable_bitmap = cpu_to_le32(u32_encode_bits(arvif->beacon_prot,
+						WMI_BEACON_PROTECTION_EN_BIT));
 
 	ptr = skb->data + sizeof(*cmd);
 
