ath12k/783-002-wifi-ath12k-Fix-BCCA-counter-for-EMA.patchFrom 2717fe6fd7f54cb2d21074c5e88b12f962762ed2 Mon Sep 17 00:00:00 2001
From: Rameshkumar Sundaram <quic_ramess@quicinc.com>
Date: Thu, 15 Jun 2023 12:30:15 +0530
Subject: [PATCH] wifi: ath12k: Fix BCCA counter for EMA

Currently BCCA counter is updated to FW via csa counter offs and
beacon with new countdown is updated for every beacon tx completion event.
For EMA, all EMA beacons are updated in one shot, and counter update for
every tx event will mess up the actual sequence of countdown sent over the air.

Allow FW to update the countdown till 1 and finalize the color
change.

Signed-off-by: Rameshkumar Sundaram <quic_ramess@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/mac.c | 31 ---------------------------
 drivers/net/wireless/ath/ath12k/mac.h |  1 -
 drivers/net/wireless/ath/ath12k/wmi.c | 14 +++++++-----
 3 files changed, 9 insertions(+), 37 deletions(-)

--- a/drivers/net/wireless/ath/ath12k/mac.h
+++ b/drivers/net/wireless/ath/ath12k/mac.h
@@ -159,7 +159,6 @@ enum hal_encrypt_type ath12k_dp_tx_get_e
 void ath12k_mac_get_any_chandef_iter(struct ieee80211_hw *hw,
                                      struct ieee80211_chanctx_conf *conf,
                                      void *data);
-void ath12k_mac_bcn_tx_event(struct ath12k_link_vif *arvif);
 struct ath12k *ath12k_get_ar_by_vif(struct ieee80211_hw *hw, struct ieee80211_vif *vif,
 				    u8 link_id);
 int ath12k_mac_mlo_setup(struct ath12k_hw *ah);
--- a/drivers/net/wireless/ath/ath12k/wmi.c
+++ b/drivers/net/wireless/ath/ath12k/wmi.c
@@ -8887,7 +8887,6 @@ static void ath12k_bcn_tx_status_event(s
 		rcu_read_unlock();
 		return;
 	}
-	ath12k_mac_bcn_tx_event(arvif);
 	rcu_read_unlock();
 }
 
@@ -12304,12 +12303,17 @@ ath12k_wmi_process_csa_switch_count_even
 			continue;
 
 		/* FIXME some changes are expected for ML vifs */
-		if (arvif->is_up && link_conf->csa_active) {
-			if (!ev->current_switch_count)
-				ieee80211_csa_finish(arvif->ahvif->vif);
-			else if (ev->current_switch_count > 1)
+		if (arvif->is_up && (link_conf->csa_active || link_conf->color_change_active)) {
+			if (!ev->current_switch_count) {
+				if (link_conf->csa_active)
+					ieee80211_csa_finish(arvif->ahvif->vif, arvif->link_id);
+			} else if (ev->current_switch_count > 1) {
 				ieee80211_beacon_update_cntdwn(arvif->ahvif->vif,
 							       arvif->link_id);
+			} else {
+				if (link_conf->color_change_active)
+					ieee80211_color_change_finish(arvif->ahvif->vif, arvif->link_id);
+			}
 		}
 	}
 	rcu_read_unlock();
