From 69bef38c76d034d6b73e6ddb0b3576f5d0298cea Mon Sep 17 00:00:00 2001
From: Bhagavathi Perumal S <quic_bperumal@quicinc.com>
Date: Mon, 19 Jun 2023 23:44:58 +0530
Subject: [PATCH] ath11\12k: Add define MAC80211_SFE_SUPPORT

This patch add define MAC80211_SFE_SUPPORT to avoid compilation
error. the nss sfe pvt changes in kernel will cause compilaiton
error when built with upstream kernel.

Signed-off-by: Bhagavathi Perumal S <quic_bperumal@quicinc.com>
---
 drivers/net/wireless/ath/ath11k/mac.c    | 2 ++
 drivers/net/wireless/ath/ath12k/bondif.c | 2 ++
 drivers/net/wireless/ath/ath12k/dp_tx.c  | 6 +++++-
 drivers/net/wireless/ath/ath12k/mac.c    | 2 ++
 net/mac80211/tx.c                        | 8 +++++---
 5 files changed, 16 insertions(+), 4 deletions(-)

--- a/drivers/net/wireless/ath/ath12k/bondif.c
+++ b/drivers/net/wireless/ath/ath12k/bondif.c
@@ -649,7 +649,9 @@ int ath12k_dp_mlo_xmit_netdev(struct sk_
 		return NETDEV_TX_OK;
 	}
 
+#ifdef CPTCFG_MAC80211_SFE_SUPPORT
 	skb->fast_xmit = 0;
+#endif
 	return link_dev->netdev_ops->ndo_start_xmit(skb, link_dev);
 }
 
--- a/drivers/net/wireless/ath/ath12k/dp_tx.c
+++ b/drivers/net/wireless/ath/ath12k/dp_tx.c
@@ -278,7 +278,11 @@ int ath12k_dp_tx_direct(struct ath12k_li
 #endif
 	dma_addr_t paddr;
 	int ret;
+#ifdef CPTCFG_MAC80211_SFE_SUPPORT
 	int len = skb->fast_xmit ? 256 : skb->len;
+#else
+	int len = skb->len;
+#endif
 
 	if (unlikely(test_bit(ATH12K_FLAG_CRASH_FLUSH, &ar->ab->dev_flags)))
 		return -ESHUTDOWN;
@@ -307,10 +311,13 @@ int ath12k_dp_tx_direct(struct ath12k_li
 	tx_desc->mac_id = arvif->pdev_idx;
 	tx_desc->recycler_fast_xmit = 0;
 	tx_desc->timestamp = ktime_get_real();
+
+#ifdef CPTCFG_MAC80211_SFE_SUPPORT
 	/* the edma driver uses this flags to optimize the cache invalidation */
 	skb->fast_recycled = 1;
 	if (skb->is_from_recycler)
 		tx_desc->recycler_fast_xmit = 1;
+#endif
 
 	skb_cb->vif = arvif->ahvif->vif;
 	skb_cb->paddr =  paddr;
@@ -1478,11 +1485,15 @@ int ath12k_ppeds_tx_completion_handler(s
 			skb_shinfo(msdu)->frag_list = NULL;
 		}
 
+#ifdef CPTCFG_MAC80211_SFE_SUPPORT
 		if (likely(msdu->is_from_recycler)) {
 			__skb_queue_head(&free_list_head, msdu);
 		} else {
 			dev_kfree_skb(msdu);
 		}
+#else
+		dev_kfree_skb(msdu);
+#endif
 
 		work_done++;
 	}
--- a/drivers/net/wireless/ath/ath12k/mac.c
+++ b/drivers/net/wireless/ath/ath12k/mac.c
@@ -9229,6 +9229,7 @@ static void ath12k_mac_op_tx(struct ieee
 
 	ar = arvif->ar;
 
+#ifdef CPTCFG_MAC80211_SFE_SUPPORT
 	if (skb->fast_xmit) {
 		ret = ath12k_mac_tx_check_max_limit(ar, skb);
 		if (ret) {
@@ -9247,6 +9248,7 @@ static void ath12k_mac_op_tx(struct ieee
 		}
 		return;
 	}
+#endif
 
 	ah = ar->ah;
 
--- a/drivers/net/wireless/ath/ath12k/dp_rx.c
+++ b/drivers/net/wireless/ath/ath12k/dp_rx.c
@@ -257,8 +257,14 @@ int ath12k_dp_rx_bufs_replenish(struct a
 	num_remain = req_entries;
 
 	while (num_remain > 0) {
+#ifdef CPTCFG_MAC80211_SFE_SUPPORT
+		skb = netdev_alloc_skb_fast(NULL,
+					    DP_RX_BUFFER_SIZE +\
+					    DP_RX_BUFFER_ALIGN_SIZE);
+#else
 		skb = dev_alloc_skb(DP_RX_BUFFER_SIZE +
 				    DP_RX_BUFFER_ALIGN_SIZE);
+#endif
 		if (unlikely(!skb))
 			break;
 
