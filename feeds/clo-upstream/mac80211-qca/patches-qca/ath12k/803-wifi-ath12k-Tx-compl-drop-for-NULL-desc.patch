From f111d2552435f54da812b389de2c3818c733e348 Mon Sep 17 00:00:00 2001
From: Karthikeyan Periyasamy <quic_periyasa@quicinc.com>
Date: Wed, 12 Jul 2023 22:33:09 +0530
Subject: [PATCH] wifi: ath12k: Tx compl drop for NULL desc

When Tx completion happen for already completed Tx buffer, skb
will be NULL. It lead to NULL crash. So added the msdu NULL check
and avoid the descriptor processing with DP Statistics account.

Signed-off-by: Karthikeyan Periyasamy <quic_periyasa@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/bondif.c  |  2 --
 drivers/net/wireless/ath/ath12k/core.h    |  1 +
 drivers/net/wireless/ath/ath12k/debugfs.c |  7 +++++++
 drivers/net/wireless/ath/ath12k/dp_tx.c   | 13 +++++++++++--
 4 files changed, 19 insertions(+), 4 deletions(-)

--- a/drivers/net/wireless/ath/ath12k/core.h
+++ b/drivers/net/wireless/ath/ath12k/core.h
@@ -51,6 +51,7 @@
 extern unsigned int ath12k_frame_mode;
 
 
+extern bool ath12k_debug_critical;
 #define ATH12K_MON_TIMER_INTERVAL  10
 #define ATH12K_RESET_TIMEOUT_HZ			(180 * HZ)
 #define ATH12K_RESET_MAX_FAIL_COUNT_FIRST	3
@@ -1170,6 +1171,7 @@ struct ath12k_soc_dp_stats {
 	u32 fw_tx_status[MAX_FW_TX_STATUS];
 	u32 tx_enqueued[MAX_TCL_RING];
 	u32 tx_completed[MAX_TCL_RING];
+	u32 null_tx_complete[MAX_TCL_RING];
 	u32 bond_tx_ucast_enqueued[MAX_TCL_RING];
 	u32 bond_tx_mcast_enqueued[MAX_TCL_RING];
 	u32 bond_tx_ucast_dropped[MAX_TCL_RING];
--- a/drivers/net/wireless/ath/ath12k/debugfs.c
+++ b/drivers/net/wireless/ath/ath12k/debugfs.c
@@ -1727,6 +1727,13 @@ static ssize_t ath12k_debugfs_dump_soc_d
 			 soc_stats->tx_err.peers_not_present);
 
 	len += scnprintf(buf + len, size - len,
+			"\nnull tx complete: 0:%u 1:%u 2:%u 3:%u\n",
+			soc_stats->null_tx_complete[0],
+			soc_stats->null_tx_complete[1],
+			soc_stats->null_tx_complete[2],
+			soc_stats->null_tx_complete[3]);
+
+	len += scnprintf(buf + len, size - len,
 			"\ntx_completed: 0:%u 1:%u 2:%u 3:%u\n",
 			soc_stats->tx_completed[0],
 			soc_stats->tx_completed[1],
--- a/drivers/net/wireless/ath/ath12k/dp_tx.c
+++ b/drivers/net/wireless/ath/ath12k/dp_tx.c
@@ -1572,10 +1572,24 @@ int ath12k_dp_tx_completion_handler(stru
 		recycler_fast_xmit = tx_desc->recycler_fast_xmit;
 		skb_ext_desc = tx_desc->skb_ext_desc;
 		timestamp = tx_desc->timestamp;
+
 		/* Release descriptor as soon as extracting necessary info
 		 * to reduce contention
 		 */
 		ath12k_dp_tx_release_txbuf(dp, tx_desc, tx_desc->pool_id);
+
+		if (unlikely(!msdu)) {
+			ab->soc_stats.null_tx_complete[tx_ring->tcl_data_ring_id]++;
+
+			ath12k_err_dump(ab, "Null msdu\n", "Tx compl Desc: ", tx_status,
+					sizeof(*tx_status), NULL);
+
+			if (ath12k_debug_critical)
+				BUG_ON(1);
+
+			continue;
+		}
+
 		/* Find the HAL_WBM_RELEASE_INFO0_REL_SRC_MODULE value */
 		buf_rel_source = tx_status->info0 & HAL_WBM_RELEASE_INFO0_REL_SRC_MASK;
 		ab->soc_stats.tx_wbm_rel_source[buf_rel_source]++;
--- a/drivers/net/wireless/ath/ath12k/core.c
+++ b/drivers/net/wireless/ath/ath12k/core.c
@@ -67,6 +67,10 @@ bool ath12k_mgmt_rx_reordering = false;
 module_param_named(mgmt_rx_reorder, ath12k_mgmt_rx_reordering, bool, 0644);
 MODULE_PARM_DESC(mgmt_rx_reorder, "Mgmt Rx Re-Ordering (0 - disable, 1 - enable)");
 
+bool ath12k_debug_critical = false;
+module_param_named(debug_critical, ath12k_debug_critical, bool, 0644);
+MODULE_PARM_DESC(debug_critical, "Debug critical issue (0 - disable, 1 - enable)");
+
 static DEFINE_MUTEX(ath12k_hw_lock);
 static struct list_head ath12k_hw_groups = LIST_HEAD_INIT(ath12k_hw_groups);
 
