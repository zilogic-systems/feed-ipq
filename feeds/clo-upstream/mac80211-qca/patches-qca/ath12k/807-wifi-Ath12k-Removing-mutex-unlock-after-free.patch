From e1eb87f4f3990d6c8c9709a8e8e175e8ba9a40c0 Mon Sep 17 00:00:00 2001
From: Avula Sri Charan <quic_asrichar@quicinc.com>
Date: Tue, 12 Sep 2023 10:22:34 +0530
Subject: wifi: Ath12k: Removing mutex unlock after free

After freeing ag in ath12k_core_hw_group_free we are still
trying to unlock ag->mutex_lock so moving locking sequence
to ath12k_core_put_hw_group to avoid acquiring lock before
ath12k_core_hw_group_free.

Signed-off-by: Avula Sri Charan <quic_asrichar@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/core.c | 31 ++++++++++----------------
 1 file changed, 12 insertions(+), 19 deletions(-)

--- a/drivers/net/wireless/ath/ath12k/core.c
+++ b/drivers/net/wireless/ath/ath12k/core.c
@@ -99,15 +99,16 @@ static void ath12k_core_hw_group_free(st
 	mutex_unlock(&ath12k_hw_lock);
 }
 
-static void __ath12k_core_put_hw_group(struct ath12k_base *ab)
+void ath12k_core_put_hw_group(struct ath12k_base *ab)
 {
 	struct ath12k_hw_group *ag = ab->ag;
 	u8 chip_id = ab->chip_id;
+	int num_probed;
 
 	if (!ag)
 		return;
 
-	lockdep_assert_held(&ag->mutex_lock);
+	mutex_lock(&ag->mutex_lock);
 
 	if (chip_id >= ag->num_chip) {
 		ath12k_err(ab, "failed to put Invalid chip id %d in the group id %d max chip %d\n",
@@ -130,17 +131,13 @@ static void __ath12k_core_put_hw_group(s
 	if (ag->num_probed)
 		ag->num_probed--;
 
-	if (!ag->num_probed)
-		ath12k_core_hw_group_free(ag);
-}
-
-void ath12k_core_put_hw_group(struct ath12k_base *ab)
-{
-	struct ath12k_hw_group *ag = ab->ag;
+	num_probed = ag->num_probed;
 
-	mutex_lock(&ag->mutex_lock);
-	__ath12k_core_put_hw_group(ab);
 	mutex_unlock(&ag->mutex_lock);
+
+	if (!num_probed)
+		ath12k_core_hw_group_free(ag);
+
 }
 
 static struct ath12k_hw_group *
@@ -2357,9 +2354,7 @@ int ath12k_core_init(struct ath12k_base
 	return 0;
 
 err_hw_group:
-	mutex_lock(&ag->mutex_lock);
-	__ath12k_core_put_hw_group(ab);
-	mutex_unlock(&ag->mutex_lock);
+	ath12k_core_put_hw_group(ab);
 err_debugfs:
 	ath12k_debugfs_soc_destroy(ab);
 	return ret;
@@ -2494,9 +2489,9 @@ void ath12k_core_deinit(struct ath12k_ba
 	if (ret)
 		ath12k_err(ab, "failed to un-register ssr notifier callback\n");
 
-	__ath12k_core_put_hw_group(ab);
-
 	mutex_unlock(&ag->mutex_lock);
+
+	ath12k_core_put_hw_group(ab);
 }
 
 void ath12k_core_free(struct ath12k_base *ab)
