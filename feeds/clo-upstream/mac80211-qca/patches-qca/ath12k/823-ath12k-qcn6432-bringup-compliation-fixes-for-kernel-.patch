From 6d814327c4776bad883feaa7de7c021621440e6e Mon Sep 17 00:00:00 2001
From: Saravanakumar Duraisamy <quic_saradura@quicinc.com>
Date: Sat, 15 Jul 2023 16:15:01 +0530
Subject: [PATCH] ath12k: qcn6432 bringup compliation fixes for kernel 6.1

Some of the 5.4 kernel APIs changed either in arguments/name in
6.1 kernel. Based on kernel version relavent APIs are made
compiled.

Signed-off-by: Saravanakumar Duraisamy <quic_saradura@quicinc.com>
---
 backport-include/linux/netdevice.h     | 10 +++++++++-
 drivers/net/wireless/ath/ath11k/ahb.c  |  6 +-----
 drivers/net/wireless/ath/ath11k/pcic.c | 17 +++++------------
 drivers/net/wireless/ath/ath12k/ahb.c  |  7 ++-----
 drivers/net/wireless/ath/ath12k/pcic.c | 23 ++++++++++++++---------
 drivers/net/wireless/ath/ath12k/qmi.c  |  5 +++++
 6 files changed, 36 insertions(+), 32 deletions(-)

--- a/backport-include/linux/netdevice.h
+++ b/backport-include/linux/netdevice.h
@@ -285,4 +285,12 @@ static inline int LINUX_BACKPORT(netif_r
 #define netif_rx LINUX_BACKPORT(netif_rx)
 #endif /* < 5.18.0 */
 
-#endif /* __BACKPORT_NETDEVICE_H */
+#if LINUX_VERSION_IS_LESS(6,1,0)
+static inline void netif_napi_add_weight(struct net_device *dev, struct napi_struct *napi,
+			   int (*poll)(struct napi_struct *, int), int weight)
+{
+	netif_napi_add(dev, napi, poll, weight);
+}
+#endif /* < 6.1 */
+
+#endif /* __BACKPORT_NETDEVICE_H */
\ No newline at end of file
--- a/drivers/net/wireless/ath/ath12k/ahb.c
+++ b/drivers/net/wireless/ath/ath12k/ahb.c
@@ -513,13 +513,10 @@ static int ath12k_ahb_config_ext_irq(str
 		irq_grp->ab = ab;
 		irq_grp->grp_id = i;
 		init_dummy_netdev(&irq_grp->napi_ndev);
-#if (LINUX_VERSION_CODE < KERNEL_VERSION(6, 1, 0))
-		netif_napi_add(&irq_grp->napi_ndev, &irq_grp->napi,
-			       ath12k_ahb_ext_grp_napi_poll, NAPI_POLL_WEIGHT);
-#else
+
 		 netif_napi_add_weight(&irq_grp->napi_ndev, &irq_grp->napi,
                                ath12k_ahb_ext_grp_napi_poll, NAPI_POLL_WEIGHT);
-#endif
+
 		for (j = 0; j < ATH12K_EXT_IRQ_NUM_MAX; j++) {
 			if (ab->hw_params->ring_mask->tx[i]  &&
 					(j <= ATH12K_MAX_TCL_RING_NUM) &&
--- a/drivers/net/wireless/ath/ath12k/pcic.c
+++ b/drivers/net/wireless/ath/ath12k/pcic.c
@@ -377,7 +377,7 @@ static int ath12k_pcic_ext_config_gic_ms
 	if (ab->hw_params->ring_mask->tx[i])
 		budget = tx_comp_budget;
 
-	netif_napi_add(&irq_grp->napi_ndev, &irq_grp->napi,
+	netif_napi_add_weight(&irq_grp->napi_ndev, &irq_grp->napi,
 		       ath12k_pcic_ext_grp_napi_poll, budget);
 
 	if (ab->hw_params->ring_mask->tx[i] ||
@@ -651,13 +651,8 @@ static int ath12k_pci_ext_irq_config(str
 		 */
 		if (ab->hw_params->ring_mask->tx[i])
 			budget = tx_comp_budget;
-#if (LINUX_VERSION_CODE < KERNEL_VERSION(6, 1, 0))
-		netif_napi_add(&irq_grp->napi_ndev, &irq_grp->napi,
-			       ath12k_pcic_ext_grp_napi_poll, budget);
-#else
 		 netif_napi_add_weight(&irq_grp->napi_ndev, &irq_grp->napi,
 				       ath12k_pcic_ext_grp_napi_poll, budget);
-#endif
 
 		if (ab->hw_params->ring_mask->tx[i] ||
 		    ab->hw_params->ring_mask->rx[i] ||
@@ -795,8 +790,13 @@ int ath12k_pcic_config_hybrid_irq(struct
 		return ret;
 	}
 
-	//TODO: Need to optimize the below code to have one loop
-	for_each_msi_entry(msi_desc, &pdev->dev) {
+	/* TODO: Need to optimize the below code to have one loop */
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(6, 1, 0))
+		for_each_msi_entry(msi_desc, &pdev->dev) {
+#else
+		msi_lock_descs(&pdev->dev);
+        msi_for_each_desc(msi_desc, &pdev->dev, MSI_DESC_ALL) {
+#endif
 		ret = ath12k_pcic_get_user_msi_assignment(ab, "CE", &num_vectors,
                                                          &user_base_data, &base_vector);
                 if (ret < 0)
@@ -839,10 +839,16 @@ int ath12k_pcic_config_hybrid_irq(struct
 		}
 		i++;
 	}
-
+#if (LINUX_VERSION_CODE > KERNEL_VERSION(6, 1, 0))
+	msi_unlock_descs(&pdev->dev);
+#endif
 	i = 0;
-
-	for_each_msi_entry(msi_desc, &pdev->dev) {
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(6, 1, 0))
+		for_each_msi_entry(msi_desc, &pdev->dev) {
+#else
+		msi_lock_descs(&pdev->dev);
+        msi_for_each_desc(msi_desc, &pdev->dev, MSI_DESC_ALL) {
+#endif
 		ret = ath12k_pcic_get_user_msi_assignment(ab, "CE", &num_vectors,
 							  &user_base_data, &base_vector);
 		if (ret < 0)
@@ -883,6 +889,9 @@ int ath12k_pcic_config_hybrid_irq(struct
 		}
 		i++;
 	}
+#if (LINUX_VERSION_CODE > KERNEL_VERSION(6, 1, 0))
+	msi_unlock_descs(&pdev->dev);
+#endif
 	ab->ipci.gic_enabled = 1;
 	wake_up(&ab->ipci.gic_msi_waitq);
 
--- a/drivers/net/wireless/ath/ath12k/qmi.c
+++ b/drivers/net/wireless/ath/ath12k/qmi.c
@@ -5620,8 +5620,11 @@ static int ath12k_qmi_request_device_inf
 		goto out;
 	}
 
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(6, 1, 0))
 	bar_addr_va = ioremap_nocache(resp.bar_addr, resp.bar_size);
-
+#else
+        bar_addr_va = ioremap(resp.bar_addr, resp.bar_size);
+#endif
 	if (!bar_addr_va) {
 		ath12k_warn(ab, "qmi device info ioremap failed\n");
 		ab->mem_len = 0;
