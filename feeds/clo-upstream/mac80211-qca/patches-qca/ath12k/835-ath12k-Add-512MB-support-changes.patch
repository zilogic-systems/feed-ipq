From d8f7495ebb35fa95cbf6d8febcd1e15b710709d4 Mon Sep 17 00:00:00 2001
From: Tamizh Chelvam Raja <quic_tamizhr@quicinc.com>
Date: Mon, 11 Sep 2023 22:12:09 +0530
Subject: [PATCH 2/2] ath12k: Add 512MB support changes

Made below changes to load driver in 512MB profile

-> Reduce Tx, Rx desc and monitor ring size
-> Removed TX monitor buf/Tx monitor dst ring support
-> Notify fw about the 512MB mem type through qmi init
-> Reduce Number of vdev count to 8

Signed-off-by: Tamizh Chelvam Raja <quic_tamizhr@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/Kconfig |  7 ++++++
 drivers/net/wireless/ath/ath12k/dp.h    | 32 +++++++++++++++++--------
 drivers/net/wireless/ath/ath12k/hw.c    | 12 ++++++++++
 drivers/net/wireless/ath/ath12k/hw.h    |  8 +++++++
 drivers/net/wireless/ath/ath12k/qmi.c   |  2 +-
 drivers/net/wireless/ath/ath12k/qmi.h   |  7 +++++-
 local-symbols                           |  1 +
 7 files changed, 57 insertions(+), 12 deletions(-)

--- a/drivers/net/wireless/ath/ath12k/Kconfig
+++ b/drivers/net/wireless/ath/ath12k/Kconfig
@@ -67,6 +67,13 @@ config ATH12K_PKTLOG
 	log uses ring buffer to dump the data. The buffer size,
 	frame filters can be altered by debugfs entries.
 
+config ATH12K_MEM_PROFILE_512M
+	bool "ath12k enable 512MB memory profile"
+	depends on ATH12K
+	default n
+	---help---
+	Enables 512MB memory profile for ath12k
+
 config ATH12K_PPE_DS_SUPPORT
 	bool "QTI ath12k ppe-ds support"
 	depends on ATH12K_DEBUGFS
--- a/drivers/net/wireless/ath/ath12k/dp.h
+++ b/drivers/net/wireless/ath/ath12k/dp.h
@@ -156,9 +156,30 @@ struct ath12k_pdev_dp {
 
 #define DP_IDLE_SCATTER_BUFS_MAX 16
 
+#ifdef CPTCFG_ATH12K_MEM_PROFILE_512M
+
+#define DP_TX_COMP_RING_SIZE		8192
+#define DP_RXDMA_MON_STATUS_RING_SIZE	512
+#define DP_RXDMA_MONITOR_BUF_RING_SIZE	256
+#define DP_RXDMA_MONITOR_DST_RING_SIZE	512
+#define ATH12K_NUM_POOL_TX_DESC		8192
+#define DP_REO2PPE_RING_SIZE		2048
+/* TODO revisit this count during testing */
+#define ATH12K_RX_DESC_COUNT		(4096)
+
+#else
+#define DP_TX_COMP_RING_SIZE		32768
+#define DP_RXDMA_MON_STATUS_RING_SIZE	2048
+#define DP_RXDMA_MONITOR_BUF_RING_SIZE	4096
+#define DP_RXDMA_MONITOR_DST_RING_SIZE	8192
+#define ATH12K_NUM_POOL_TX_DESC		32768
+#define DP_REO2PPE_RING_SIZE 16384
+/* TODO revisit this count during testing */
+#define ATH12K_RX_DESC_COUNT		(12288)
+#endif
+
 #define DP_WBM_RELEASE_RING_SIZE	64
 #define DP_TCL_DATA_RING_SIZE		512
-#define DP_TX_COMP_RING_SIZE		32768
 #define DP_TX_IDR_SIZE			DP_TX_COMP_RING_SIZE
 #define DP_TCL_CMD_RING_SIZE		32
 #define DP_TCL_STATUS_RING_SIZE		32
@@ -172,9 +193,6 @@ struct ath12k_pdev_dp {
 #define DP_RXDMA_BUF_RING_SIZE		8192
 #define DP_RXDMA_REFILL_RING_SIZE	2048
 #define DP_RXDMA_ERR_DST_RING_SIZE	1024
-#define DP_RXDMA_MON_STATUS_RING_SIZE	2048
-#define DP_RXDMA_MONITOR_BUF_RING_SIZE	4096
-#define DP_RXDMA_MONITOR_DST_RING_SIZE	8192
 #define DP_RXDMA_MONITOR_DESC_RING_SIZE	8192
 #define DP_RX_MONITOR_BUF_LOW_TH	32
 #define DP_TX_MONITOR_BUF_RING_SIZE	4096
@@ -188,7 +206,6 @@ struct ath12k_pdev_dp {
 #define DP_RX_BUFFER_SIZE_LITE	1024
 #define DP_RX_BUFFER_ALIGN_SIZE	128
 
-#define DP_REO2PPE_RING_SIZE 16384
 #define DP_PPE2TCL_RING_SIZE 2048
 #define DP_PPE_WBM2SW_RING_SIZE 8192
 #define HAL_REO2PPE_DST_IND 6
@@ -208,17 +225,12 @@ struct ath12k_pdev_dp {
 #define ATH12K_SHADOW_DP_TIMER_INTERVAL 20
 #define ATH12K_SHADOW_CTRL_TIMER_INTERVAL 10
 
-#define ATH12K_NUM_POOL_TX_DESC	32768
-
 #ifdef CPTCFG_ATH12K_PPE_DS_SUPPORT
 #define ATH12K_NUM_POOL_PPEDS_TX_DESC 0x10000
 #else
 #define ATH12K_NUM_POOL_PPEDS_TX_DESC 0
 #endif
 
-/* TODO: revisit this count during testing */
-#define ATH12K_RX_DESC_COUNT	(12288)
-
 #define ATH12K_PAGE_SIZE	PAGE_SIZE
 
 /* Total 1024 entries in PPT, i.e 4K/4 considering 4K aligned
--- a/drivers/net/wireless/ath/ath12k/hw.c
+++ b/drivers/net/wireless/ath/ath12k/hw.c
@@ -1518,7 +1518,9 @@ static struct ath12k_hw_params ath12k_hw
 		.interface_modes = BIT(NL80211_IFTYPE_STATION) |
 					BIT(NL80211_IFTYPE_AP) |
 					BIT(NL80211_IFTYPE_MESH_POINT),
+#ifndef CPTCFG_ATH12K_MEM_PROFILE_512M
 		.supports_monitor = true,
+#endif
 
 		.idle_ps = false,
 		.cold_boot_calib = false,
@@ -1559,6 +1561,7 @@ static struct ath12k_hw_params ath12k_hw
 		.support_umac_reset = false,
 		.en_qdsslog = true,
 		.supports_tx_monitor = false,
+		.fw_mem_mode = ATH12K_QMI_TARGET_MEM_MODE,
 	},
 	{
 		.name = "wcn7850 hw2.0",
@@ -1626,6 +1629,7 @@ static struct ath12k_hw_params ath12k_hw
 		.support_umac_reset = false,
 		.en_qdsslog = true,
 		.supports_tx_monitor = false,
+		.fw_mem_mode = ATH12K_QMI_TARGET_MEM_MODE,
 	},
 	{
 		.name = "qcn9274 hw2.0",
@@ -1662,7 +1666,9 @@ static struct ath12k_hw_params ath12k_hw
 		.interface_modes = BIT(NL80211_IFTYPE_STATION) |
 					BIT(NL80211_IFTYPE_AP) |
 					BIT(NL80211_IFTYPE_MESH_POINT),
+#ifndef CPTCFG_ATH12K_MEM_PROFILE_512M
 		.supports_monitor = true,
+#endif
 
 		.idle_ps = false,
 		.cold_boot_calib = true,
@@ -1704,6 +1710,7 @@ static struct ath12k_hw_params ath12k_hw
 		.support_umac_reset = true,
 		.en_qdsslog = true,
 		.supports_tx_monitor = false,
+		.fw_mem_mode = ATH12K_QMI_TARGET_MEM_MODE,
 	},
 	{
 		.name = "ipq5332 hw1.0",
@@ -1743,7 +1750,9 @@ static struct ath12k_hw_params ath12k_hw
 		.interface_modes = BIT(NL80211_IFTYPE_STATION) |
 					BIT(NL80211_IFTYPE_AP) |
 					BIT(NL80211_IFTYPE_MESH_POINT),
+#ifndef CPTCFG_ATH12K_MEM_PROFILE_512M
 		.supports_monitor = true,
+#endif
 
 		.idle_ps = false,
 		.cold_boot_calib = false,
@@ -1787,6 +1796,7 @@ static struct ath12k_hw_params ath12k_hw
 		.support_ce_manual_poll=true,
 		.en_qdsslog = false,
 		.supports_tx_monitor = false,
+		.fw_mem_mode = ATH12K_QMI_TARGET_MEM_MODE,
 	},
 	{
 		.name = "qcn6432 hw1.0",
@@ -1825,7 +1835,9 @@ static struct ath12k_hw_params ath12k_hw
 		.interface_modes = BIT(NL80211_IFTYPE_STATION) |
 					BIT(NL80211_IFTYPE_AP) |
 					BIT(NL80211_IFTYPE_MESH_POINT),
+#ifndef CPTCFG_ATH12K_MEM_PROFILE_512M
 		.supports_monitor = true,
+#endif
 
 		.idle_ps = false,
 		.cold_boot_calib = false,
@@ -1863,7 +1875,7 @@ static struct ath12k_hw_params ath12k_hw
 		.en_fwlog = false,
 		.support_umac_reset = false,
 		.en_qdsslog = false,
-		.supports_monitor = false,
+		.fw_mem_mode = ATH12K_QMI_TARGET_MEM_MODE,
 	},
 };
 
--- a/drivers/net/wireless/ath/ath12k/hw.h
+++ b/drivers/net/wireless/ath/ath12k/hw.h
@@ -14,8 +14,15 @@
 
 /* Target configuration defines */
 
+#ifdef CPTCFG_ATH12K_MEM_PROFILE_512M
+/* Num VDEVS per radio */
+#define TARGET_NUM_VDEVS	(8 + 1)
+#define ATH12K_QMI_TARGET_MEM_MODE	ATH12K_QMI_TARGET_MEM_MODE_512M
+#else
 /* Num VDEVS per radio */
 #define TARGET_NUM_VDEVS	(16 + 1)
+#define ATH12K_QMI_TARGET_MEM_MODE	ATH12K_QMI_TARGET_MEM_MODE_DEFAULT
+#endif
 
 #define TARGET_NUM_PEERS_PDEV	(TARGET_NUM_STATIONS + TARGET_NUM_VDEVS)
 
@@ -237,6 +244,7 @@ struct ath12k_hw_params {
 	bool support_ce_manual_poll;
 	const struct pmm_remap *pmm_remap;
 	bool support_umac_reset;
+	int fw_mem_mode;
 };
 
 struct ath12k_hw_ops {
--- a/drivers/net/wireless/ath/ath12k/qmi.c
+++ b/drivers/net/wireless/ath/ath12k/qmi.c
@@ -6159,7 +6159,7 @@ int ath12k_qmi_init_service(struct ath12
 	memset(&ab->qmi.target_mem, 0, sizeof(struct target_mem_chunk));
 	ab->qmi.ab = ab;
 
-	ab->qmi.target_mem_mode = ATH12K_QMI_TARGET_MEM_MODE_DEFAULT;
+	ab->qmi.target_mem_mode = ab->hw_params->fw_mem_mode;
 	ret = qmi_handle_init(&ab->qmi.handle, ATH12K_QMI_RESP_LEN_MAX,
 			      &ath12k_qmi_ops, ath12k_qmi_msg_handlers);
 	if (ret < 0) {
--- a/drivers/net/wireless/ath/ath12k/qmi.h
+++ b/drivers/net/wireless/ath/ath12k/qmi.h
@@ -48,7 +48,6 @@
 
 #define QMI_WLANFW_MAX_DATA_SIZE_V01		6144
 #define ATH12K_FIRMWARE_MODE_OFF		4
-#define ATH12K_QMI_TARGET_MEM_MODE_DEFAULT	0
 #define ATH12K_COLD_BOOT_FW_RESET_DELAY		(60 * HZ)
 
 #define ATH12K_BOARD_ID_DEFAULT	0xFF
@@ -57,6 +56,11 @@
 #define QCN6432_DEVICE_BAR_SIZE		0x200000
 #define ATH12K_RCV_GIC_MSI_HDLR_DELAY		(3 * HZ)
 
+enum ath12k_target_mem_mode {
+	ATH12K_QMI_TARGET_MEM_MODE_DEFAULT = 0,
+	ATH12K_QMI_TARGET_MEM_MODE_512M,
+};
+
 /* userpd_id in multi pd arch */
 enum userpd_id {
 	USERPD_0 = 0,
--- a/local-symbols
+++ b/local-symbols
@@ -189,6 +189,7 @@ ATH12K_PPE_DS_SUPPORT=
 ATH12K_BONDED_DS_SUPPORT=
 ATH12K_SPECTRAL=
 ATH12K_PKTLOG=
+ATH12K_MEM_PROFILE_512M=
 ATH12K_SAWF=
 WLAN_VENDOR_ATMEL=
 ATMEL=
