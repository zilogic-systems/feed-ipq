From af91265035ff86c72d2c5e396ce2cc4f3f98f076 Mon Sep 17 00:00:00 2001
From: Aditya Kumar Singh <quic_adisi@quicinc.com>
Date: Sun, 17 Sep 2023 12:49:05 +0530
Subject: [PATCH] wifi: ath12k: fix WMI peer kickout sta event for link sta

Currently WMI event WMI_PEER_STA_KICKOUT_EVENTID is handled only for
non-mlo peer. However, with MLO peer, it needs to handle and search
the ieee80211_sta with the given address by treating it as link address
instead of the normal interface address. But instead it uses non-mlo
handler and hence it fails to find a valid entry and the event is
simply dropped. This ultimately leads to client dis-connectivity issue
in case of MLO STA.

Fix the above issue by using proper handler based on whether the peer
is a ML peer or not.

Signed-off-by: Aditya Kumar Singh <quic_adisi@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/wmi.c | 20 ++++++++++++++++----
 1 file changed, 16 insertions(+), 4 deletions(-)

--- a/drivers/net/wireless/ath/ath12k/wmi.c
+++ b/drivers/net/wireless/ath/ath12k/wmi.c
@@ -11502,6 +11502,7 @@ static void ath12k_peer_sta_kickout_even
 	struct ieee80211_sta *sta;
 	struct ath12k_peer *peer;
 	struct ath12k *ar;
+	unsigned int link_id;
 
 	if (ath12k_pull_peer_sta_kickout_ev(ab, skb, &arg) != 0) {
 		ath12k_warn(ab, "failed to extract peer sta kickout event");
@@ -11527,11 +11528,22 @@ static void ath12k_peer_sta_kickout_even
 		goto exit;
 	}
 
-	sta = ieee80211_find_sta_by_ifaddr(ar->ah->hw,
-					   arg.mac_addr, NULL);
+	if (peer->mlo)
+		sta = ieee80211_find_sta_by_link_addrs(ar->ah->hw, arg.mac_addr,
+						       NULL, &link_id);
+	else
+		sta = ieee80211_find_sta_by_ifaddr(ar->ah->hw,
+						   arg.mac_addr, NULL);
 	if (!sta) {
-		ath12k_warn(ab, "Spurious quick kickout for STA %pM\n",
-			    arg.mac_addr);
+		ath12k_warn(ab, "Spurious quick kickout for %sSTA %pM\n",
+			    peer->mlo ? "MLO " : "", arg.mac_addr);
+		goto exit;
+	}
+
+	if (peer->mlo && peer->link_id != link_id) {
+		ath12k_warn(ab,
+			    "Spurious quick kickout for MLO STA %pM with invalid link_id, peer: %d, sta: %d\n",
+			    arg.mac_addr, peer->link_id, link_id);
 		goto exit;
 	}
 
