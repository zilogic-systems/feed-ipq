From d4a038973c7493dcfb3e48ebee95cdd055b616ae Mon Sep 17 00:00:00 2001
From: Jeff Johnson <quic_jjohnson@quicinc.com>
Date: Wed, 4 Oct 2023 15:22:24 -0700
Subject: [PATCH] wifi: ath12k: Introduce and use ath12k_sta_to_ahsta()

Currently, the logic to return an ath12k_sta pointer, given a
ieee80211_sta pointer, uses typecasting throughout the driver. In
general, conversion functions are preferable to typecasting since
using a conversion function allows the compiler to validate the types
of both the input and output parameters.

ath12k already defines a conversion function ath12k_vif_to_ahvif() for
a similar conversion. So introduce ath12k_sta_to_ahsta() for this use
case, and convert all of the existing typecasting to use this
function.

Signed-off-by: Jeff Johnson <quic_jjohnson@quicinc.com>

diff --git a/drivers/net/wireless/ath/ath12k/bondif.c b/drivers/net/wireless/ath/ath12k/bondif.c
index aa2977bb22e4..3613017ed5a0 100644
--- a/drivers/net/wireless/ath/ath12k/bondif.c
+++ b/drivers/net/wireless/ath/ath12k/bondif.c
@@ -372,7 +372,7 @@ static struct net_device *ath12k_mac_get_tx_link_netdev(struct ath12k_mld_dev *m
 		return ndev;
 	}
 
-	ahsta = (struct ath12k_sta *)sta->drv_priv;
+	ahsta = ath12k_sta_to_ahsta(sta);
 
 	if (!sta->mlo) {
 		ndev = mldev->vif->link_ndev[ahsta->deflink.link_id];
diff --git a/drivers/net/wireless/ath/ath12k/core.c b/drivers/net/wireless/ath/ath12k/core.c
index 3f70378ea4fa..16fd576e21f0 100644
--- a/drivers/net/wireless/ath/ath12k/core.c
+++ b/drivers/net/wireless/ath/ath12k/core.c
@@ -2065,7 +2065,7 @@ static int ath12k_core_mode1_recovery_sta_list(void *data,
 					       struct ieee80211_sta *sta)
 {
 	struct ath12k_link_sta *arsta;
-	struct ath12k_sta *ahsta = (struct ath12k_sta *)sta->drv_priv;
+	struct ath12k_sta *ahsta = ath12k_sta_to_ahsta(sta);
 	struct ath12k_link_vif *arvif = (struct ath12k_link_vif *)data;
 	struct ath12k_vif *ahvif = arvif->ahvif;
 	struct ieee80211_vif *vif = ahvif->vif;
diff --git a/drivers/net/wireless/ath/ath12k/core.h b/drivers/net/wireless/ath/ath12k/core.h
index bb3bddc04b58..ec665105a94a 100644
--- a/drivers/net/wireless/ath/ath12k/core.h
+++ b/drivers/net/wireless/ath/ath12k/core.h
@@ -1760,6 +1760,11 @@ static inline struct ath12k_vif *ath12k_vif_to_ahvif(struct ieee80211_vif *vif)
 	return (struct ath12k_vif *)vif->drv_priv;
 }
 
+static inline struct ath12k_sta *ath12k_sta_to_ahsta(struct ieee80211_sta *sta)
+{
+	return (struct ath12k_sta *)sta->drv_priv;
+}
+
 static inline struct ath12k *ath12k_ab_to_ar(struct ath12k_base *ab,
 					     int mac_id)
 {
diff --git a/drivers/net/wireless/ath/ath12k/debugfs_sta.c b/drivers/net/wireless/ath/ath12k/debugfs_sta.c
index 0e732b281eeb..f12b14d5af5b 100644
--- a/drivers/net/wireless/ath/ath12k/debugfs_sta.c
+++ b/drivers/net/wireless/ath/ath12k/debugfs_sta.c
@@ -202,7 +202,7 @@ static ssize_t ath12k_dbg_sta_dump_tx_stats(struct file *file,
 	struct ieee80211_link_sta *link_sta = file->private_data;
 	struct ieee80211_sta *sta = link_sta->sta;
 	u8 link_id = link_sta->link_id;
-	struct ath12k_sta *ahsta = (struct ath12k_sta *)sta->drv_priv;
+	struct ath12k_sta *ahsta = ath12k_sta_to_ahsta(sta);
 	struct ath12k_hw *ah = ahsta->ahvif->ah;
 	struct ath12k_link_sta *arsta;
 	struct ath12k *ar;
@@ -418,7 +418,7 @@ static ssize_t ath12k_dbg_sta_dump_rx_stats(struct file *file,
 	struct ieee80211_link_sta *link_sta = file->private_data;
 	struct ieee80211_sta *sta = link_sta->sta;
 	u8 link_id = link_sta->link_id;
-	struct ath12k_sta *ahsta = (struct ath12k_sta *)sta->drv_priv;
+	struct ath12k_sta *ahsta = ath12k_sta_to_ahsta(sta);
 	struct ath12k_hw *ah = ahsta->ahvif->ah;
 	struct ath12k_link_sta *arsta;
 	struct ath12k *ar;
@@ -715,7 +715,7 @@ ath12k_dbg_sta_open_htt_peer_stats(struct inode *inode, struct file *file)
 	struct ieee80211_link_sta *link_sta = inode->i_private;
 	struct ieee80211_sta *sta = link_sta->sta;
 	u8 link_id = link_sta->link_id;
-	struct ath12k_sta *ahsta = (struct ath12k_sta *)sta->drv_priv;
+	struct ath12k_sta *ahsta = ath12k_sta_to_ahsta(sta);
 	struct ath12k_hw *ah = ahsta->ahvif->ah;
 	struct ath12k_link_sta *arsta;
 	struct ath12k *ar;
@@ -778,7 +778,7 @@ ath12k_dbg_sta_release_htt_peer_stats(struct inode *inode, struct file *file)
 	struct ieee80211_link_sta *link_sta = inode->i_private;
 	struct ieee80211_sta *sta = link_sta->sta;
 	u8 link_id = link_sta->link_id;
-	struct ath12k_sta *ahsta = (struct ath12k_sta *)sta->drv_priv;
+	struct ath12k_sta *ahsta = ath12k_sta_to_ahsta(sta);
 	struct ath12k_hw *ah = ahsta->ahvif->ah;
 	struct ath12k_link_sta *arsta;
 	struct ath12k *ar;
@@ -835,7 +835,7 @@ static ssize_t ath12k_dbg_sta_write_peer_pktlog(struct file *file,
 	struct ieee80211_link_sta *link_sta = file->private_data;
 	struct ieee80211_sta *sta = link_sta->sta;
 	u8 link_id = link_sta->link_id;
-	struct ath12k_sta *ahsta = (struct ath12k_sta *)sta->drv_priv;
+	struct ath12k_sta *ahsta = ath12k_sta_to_ahsta(sta);
 	struct ath12k_hw *ah = ahsta->ahvif->ah;
 	struct ath12k_link_sta *arsta;
 	struct ath12k *ar;
@@ -896,7 +896,7 @@ static ssize_t ath12k_dbg_sta_read_peer_pktlog(struct file *file,
 	struct ieee80211_link_sta *link_sta = file->private_data;
 	struct ieee80211_sta *sta = link_sta->sta;
 	u8 link_id = link_sta->link_id;
-	struct ath12k_sta *ahsta = (struct ath12k_sta *)sta->drv_priv;
+	struct ath12k_sta *ahsta = ath12k_sta_to_ahsta(sta);
 	struct ath12k_hw *ah = ahsta->ahvif->ah;
 	struct ath12k_link_sta *arsta;
 	struct ath12k *ar;
@@ -942,7 +942,7 @@ static ssize_t ath12k_dbg_sta_write_delba(struct file *file,
 					  size_t count, loff_t *ppos)
 {
 	struct ieee80211_sta *sta = file->private_data;
-	struct ath12k_sta *ahsta = (struct ath12k_sta *)sta->drv_priv;
+	struct ath12k_sta *ahsta = ath12k_sta_to_ahsta(sta);
 	struct ath12k_link_sta *arsta = &ahsta->deflink;
 	struct ath12k *ar = arsta->arvif->ar;
 	u32 tid, initiator, reason;
@@ -994,7 +994,7 @@ static ssize_t ath12k_dbg_sta_write_addba_resp(struct file *file,
 					       size_t count, loff_t *ppos)
 {
 	struct ieee80211_sta *sta = file->private_data;
-	struct ath12k_sta *ahsta = (struct ath12k_sta *)sta->drv_priv;
+	struct ath12k_sta *ahsta = ath12k_sta_to_ahsta(sta);
 	struct ath12k_link_sta *arsta = &ahsta->deflink;
 	struct ath12k *ar = arsta->arvif->ar;
 	u32 tid, status;
@@ -1045,7 +1045,7 @@ static ssize_t ath12k_dbg_sta_write_addba(struct file *file,
 					  size_t count, loff_t *ppos)
 {
 	struct ieee80211_sta *sta = file->private_data;
-	struct ath12k_sta *ahsta = (struct ath12k_sta *)sta->drv_priv;
+	struct ath12k_sta *ahsta = ath12k_sta_to_ahsta(sta);
 	struct ath12k_link_sta *arsta = &ahsta->deflink;
 	struct ath12k *ar = arsta->arvif->ar;
 	u32 tid, buf_size;
@@ -1097,7 +1097,7 @@ static ssize_t ath12k_dbg_sta_read_aggr_mode(struct file *file,
 					     size_t count, loff_t *ppos)
 {
 	struct ieee80211_sta *sta = file->private_data;
-	struct ath12k_sta *ahsta = (struct ath12k_sta *)sta->drv_priv;
+	struct ath12k_sta *ahsta = ath12k_sta_to_ahsta(sta);
 	struct ath12k_link_sta *arsta = &ahsta->deflink;
 	struct ath12k *ar = arsta->arvif->ar;
 	char buf[64];
@@ -1118,7 +1118,7 @@ static ssize_t ath12k_dbg_sta_write_aggr_mode(struct file *file,
 					      size_t count, loff_t *ppos)
 {
 	struct ieee80211_sta *sta = file->private_data;
-	struct ath12k_sta *ahsta = (struct ath12k_sta *)sta->drv_priv;
+	struct ath12k_sta *ahsta = ath12k_sta_to_ahsta(sta);
 	struct ath12k_link_sta *arsta = &ahsta->deflink;
 	struct ath12k *ar = arsta->arvif->ar;
 	u32 aggr_mode;
@@ -1166,7 +1166,7 @@ ath12k_write_htt_peer_stats_reset(struct file *file,
 	struct ieee80211_link_sta *link_sta = file->private_data;
 	struct ieee80211_sta *sta = link_sta->sta;
 	u8 link_id = link_sta->link_id;
-	struct ath12k_sta *ahsta = (struct ath12k_sta *)sta->drv_priv;
+	struct ath12k_sta *ahsta = ath12k_sta_to_ahsta(sta);
 	struct ath12k_hw *ah = ahsta->ahvif->ah;
 	struct ath12k_link_sta *arsta;
 	struct ath12k *ar;
@@ -1248,7 +1248,7 @@ ath12k_dbg_sta_dump_driver_tx_pkts_flow(struct file *file,
 	struct ieee80211_link_sta *link_sta = file->private_data;
 	struct ieee80211_sta *sta = link_sta->sta;
 	u8 link_id = link_sta->link_id;
-	struct ath12k_sta *ahsta = (struct ath12k_sta *)sta->drv_priv;
+	struct ath12k_sta *ahsta = ath12k_sta_to_ahsta(sta);
 	struct ath12k_hw *ah = ahsta->ahvif->ah;
 	struct ath12k_link_sta *arsta;
 	struct ath12k *ar;
@@ -1318,7 +1318,7 @@ static ssize_t ath12k_dbg_sta_reset_tx_stats(struct file *file,
 	struct ieee80211_link_sta *link_sta = file->private_data;
 	struct ieee80211_sta *sta = link_sta->sta;
 	u8 link_id = link_sta->link_id;
-	struct ath12k_sta *ahsta = (struct ath12k_sta *)sta->drv_priv;
+	struct ath12k_sta *ahsta = ath12k_sta_to_ahsta(sta);
 	struct ath12k_hw *ah = ahsta->ahvif->ah;
 	struct ath12k_link_sta *arsta;
 	struct ath12k *ar;
@@ -1379,7 +1379,7 @@ ath12k_dbg_sta_dump_driver_rx_pkts_flow(struct file *file,
 	struct ieee80211_link_sta *link_sta = file->private_data;
 	struct ieee80211_sta *sta = link_sta->sta;
 	u8 link_id = link_sta->link_id;
-	struct ath12k_sta *ahsta = (struct ath12k_sta *)sta->drv_priv;
+	struct ath12k_sta *ahsta = ath12k_sta_to_ahsta(sta);
 	struct ath12k_hw *ah = ahsta->ahvif->ah;
 	struct ath12k_link_sta *arsta;
 	struct ath12k *ar;
@@ -1455,7 +1455,7 @@ static ssize_t ath12k_dbg_sta_reset_rx_stats(struct file *file,
 	struct ieee80211_link_sta *link_sta = file->private_data;
 	struct ieee80211_sta *sta = link_sta->sta;
 	u8 link_id = link_sta->link_id;
-	struct ath12k_sta *ahsta = (struct ath12k_sta *)sta->drv_priv;
+	struct ath12k_sta *ahsta = ath12k_sta_to_ahsta(sta);
 	struct ath12k_hw *ah = ahsta->ahvif->ah;
 	struct ath12k_link_sta *arsta;
 	struct ath12k *ar;
@@ -1542,7 +1542,7 @@ static ssize_t ath12k_dbg_sta_dump_sawf_tx_delay_stats(struct file *file,
 
 	struct ieee80211_link_sta *link_sta = file->private_data;
 	struct ieee80211_sta *sta = link_sta->sta;
-	struct ath12k_sta *ahsta = (struct ath12k_sta *)sta->drv_priv;
+	struct ath12k_sta *ahsta = ath12k_sta_to_ahsta(sta);
 	struct ath12k_sawf_peer_ctx *peer_ctx = NULL;
 	const int size = 2 * ATH12K_SAWF_STATS_SIZE;
 	struct ath12k_hw *ah = ahsta->ahvif->ah;
@@ -1712,7 +1712,7 @@ static ssize_t ath12k_dbg_sta_dump_sawf_tx_stats(struct file *file,
 
 	struct ieee80211_link_sta *link_sta = file->private_data;
 	struct ieee80211_sta *sta = link_sta->sta;
-	struct ath12k_sta *ahsta = (struct ath12k_sta *)sta->drv_priv;
+	struct ath12k_sta *ahsta = ath12k_sta_to_ahsta(sta);
 	struct ath12k_sawf_peer_ctx *peer_ctx = NULL;
 	const int size = 2 * ATH12K_SAWF_STATS_SIZE;
 	struct ath12k_hw *ah = ahsta->ahvif->ah;
@@ -1815,7 +1815,7 @@ static ssize_t ath12k_dbg_sta_set_svc_id(struct file *file,
 {
 	struct ieee80211_link_sta *link_sta = file->private_data;
 	struct ieee80211_sta *sta = link_sta->sta;
-	struct ath12k_sta *ahsta = (struct ath12k_sta *)sta->drv_priv;
+	struct ath12k_sta *ahsta = ath12k_sta_to_ahsta(sta);
 	struct ath12k_hw *ah = ahsta->ahvif->ah;
 	u8 link_id = link_sta->link_id;
 	struct ath12k_link_sta *arsta;
diff --git a/drivers/net/wireless/ath/ath12k/dp_rx.c b/drivers/net/wireless/ath/ath12k/dp_rx.c
index ae44cb459bd2..1f40a360a958 100644
--- a/drivers/net/wireless/ath/ath12k/dp_rx.c
+++ b/drivers/net/wireless/ath/ath12k/dp_rx.c
@@ -1081,7 +1081,7 @@ void ath12k_dp_peer_reo_tid_setup(struct ath12k_base *ab,
 
 void ath12k_dp_tid_setup(void *data, struct ieee80211_sta *sta)
 {
-	struct ath12k_sta *ahsta = (struct ath12k_sta *)sta->drv_priv;
+	struct ath12k_sta *ahsta = ath12k_sta_to_ahsta(sta);
 	struct ath12k_base *ab = data;
 	struct ath12k_link_sta *arsta;
 	struct ath12k_link_vif *arvif;
@@ -1218,7 +1218,7 @@ int ath12k_dp_rx_ampdu_start(struct ath12k *ar,
 			     u8 link_id)
 {
 	struct ath12k_base *ab = ar->ab;
-	struct ath12k_sta *ahsta = (void *)params->sta->drv_priv;
+	struct ath12k_sta *ahsta = ath12k_sta_to_ahsta(params->sta);
 	struct ath12k_link_sta *arsta;
 	struct ath12k_peer *peer;
 	int vdev_id;
@@ -1260,7 +1260,7 @@ int ath12k_dp_rx_ampdu_stop(struct ath12k *ar,
 {
 	struct ath12k_base *ab = ar->ab;
 	struct ath12k_peer *peer;
-	struct ath12k_sta *ahsta = (void *)params->sta->drv_priv;
+	struct ath12k_sta *ahsta = ath12k_sta_to_ahsta(params->sta);
 	struct ath12k_link_sta *arsta;
 	int vdev_id;
 	bool active;
diff --git a/drivers/net/wireless/ath/ath12k/mac.c b/drivers/net/wireless/ath/ath12k/mac.c
index 8551d84baa51..c5bcfbde099e 100644
--- a/drivers/net/wireless/ath/ath12k/mac.c
+++ b/drivers/net/wireless/ath/ath12k/mac.c
@@ -1084,7 +1084,7 @@ int ath12k_mac_partner_peer_cleanup(struct ath12k_base *ab, bool disassoc)
 				link_id = peer->link_id;
 				/* get arsta */
 				sta = peer->sta;
-				ahsta = (struct ath12k_sta *)sta->drv_priv;
+				ahsta = ath12k_sta_to_ahsta(sta);
 
 				if (!disassoc) {
 					arsta = ahsta->link[link_id];
@@ -4004,7 +4004,7 @@ static void ath12k_bss_assoc(struct ath12k *ar,
 		return;
 	}
 
-	ahsta = (struct ath12k_sta *)ap_sta->drv_priv;
+	ahsta = ath12k_sta_to_ahsta(ap_sta);
 	arsta = ahsta->link[link_id];
 
 	/* he_cap here is updated at assoc success for sta mode only */
@@ -5887,7 +5887,7 @@ static int ath12k_mac_op_set_key(struct ieee80211_hw *hw, enum set_key_cmd cmd,
 	}
 
 	if (sta) {
-		ahsta = (struct ath12k_sta *)sta->drv_priv;
+		ahsta = ath12k_sta_to_ahsta(sta);
 		if (sta->mlo) {
 			for_each_set_bit(link_id, &sta->valid_links, IEEE80211_MLD_MAX_NUM_LINKS) {
 				arvif = ahvif->link[link_id];
@@ -6279,7 +6279,7 @@ static int ath12k_station_assoc(struct ath12k *ar,
 	band = def.chan->band;
 	mask = &arvif->bitrate_mask;
 
-	ahsta = (struct ath12k_sta *)sta->drv_priv;
+	ahsta = ath12k_sta_to_ahsta(sta);
 	arsta = ahsta->link[link_id];
 
 	if (WARN_ON(!arsta))
@@ -7365,7 +7365,7 @@ static int ath12k_mac_op_sta_set_txpwr(struct ieee80211_hw *hw,
 	struct ath12k_hw *ah = hw->priv;
 	struct ath12k *ar;
 	struct ath12k_vif *ahvif = (void *)vif->drv_priv;
-	struct ath12k_sta *ahsta = (struct ath12k_sta *)sta->drv_priv;
+	struct ath12k_sta *ahsta = ath12k_sta_to_ahsta(sta);
 	struct ath12k_link_vif *arvif;
 	struct ath12k_link_sta *arsta;
 	int ret = 0;
@@ -7434,7 +7434,7 @@ int ath12k_mac_update_sta_state(struct ieee80211_hw *hw,
 	struct ath12k_link_vif *arvif;
 	struct ath12k_link_sta *arsta;
 	struct ath12k_vif *ahvif = ath12k_vif_to_ahvif(vif);
-	struct ath12k_sta *ahsta = (struct ath12k_sta *)sta->drv_priv;
+	struct ath12k_sta *ahsta = ath12k_sta_to_ahsta(sta);
 	int ret = 0;
 	u8 link_id = 0;
 
@@ -7580,7 +7580,7 @@ static int ath12k_mac_op_change_sta_links(struct ieee80211_hw *hw,
 	struct ath12k_link_vif *arvif;
 	struct ath12k_link_sta *arsta;
 	struct ath12k_vif *ahvif = ath12k_vif_to_ahvif(vif);
-	struct ath12k_sta *ahsta = (struct ath12k_sta *)sta->drv_priv;
+	struct ath12k_sta *ahsta = ath12k_sta_to_ahsta(sta);
 	u8 link_id;
 	int ret = 0;
 
@@ -7645,7 +7645,7 @@ static void ath12k_mac_op_sta_set_4addr(struct ieee80211_hw *hw,
 					struct ieee80211_sta *sta, bool enabled)
 {
 	struct ath12k_hw *ah = hw->priv;
-	struct ath12k_sta *ahsta = (struct ath12k_sta *)sta->drv_priv;
+	struct ath12k_sta *ahsta = ath12k_sta_to_ahsta(sta);
 
 	if (enabled && !ahsta->use_4addr_set) {
 		ieee80211_queue_work(ah->hw, &ahsta->set_4addr_wk);
@@ -7659,7 +7659,7 @@ static void ath12k_mac_op_sta_rc_update(struct ieee80211_hw *hw,
 					u32 changed, u8 link_id)
 {
 	struct ath12k *ar;
-	struct ath12k_sta *ahsta = (struct ath12k_sta *)sta->drv_priv;
+	struct ath12k_sta *ahsta = ath12k_sta_to_ahsta(sta);
 	struct ath12k_vif *ahvif = (void *)vif->drv_priv;
 	struct ath12k_link_vif *arvif;
 	struct ath12k_link_sta *arsta;
@@ -9163,7 +9163,7 @@ static u8 ath12k_mac_get_tx_link(struct ieee80211_sta *sta, struct ieee80211_vif
 		return ahvif->deflink.link_id;
 	}
 
-	ahsta = (struct ath12k_sta *)sta->drv_priv;
+	ahsta = ath12k_sta_to_ahsta(sta);
 
 	/* Below translation ensures we pass proper A2 & A3 for non ML clients.
 	 * Also it assumes for now support only for MLO AP in this path
@@ -9411,7 +9411,7 @@ static void ath12k_mac_op_tx(struct ieee80211_hw *hw,
 		is_mcast = is_multicast_ether_addr(hdr->addr1);
 
 	if (sta)
-		ahsta = (struct ath12k_sta *)control->sta->drv_priv;
+		ahsta = ath12k_sta_to_ahsta(control->sta);
 
 	/* Must call mac80211 tx status handler, else when stats is disabled we
 	 * free the skb from driver. Own tx packets on monitor will also be
@@ -10790,7 +10790,7 @@ void ath12k_mac_vif_cache_flush(struct ath12k *ar,  struct ieee80211_vif *vif,
 	if (!list_empty(&cache->key_conf.list)) {
 		list_for_each_entry_safe(key_conf, tmp, &cache->key_conf.list, list) {
 			if (key_conf->sta) {
-				ahsta = (struct ath12k_sta *)key_conf->sta->drv_priv;
+				ahsta = ath12k_sta_to_ahsta(key_conf->sta);
 				arsta = ahsta->link[link_id];
 			}
 
@@ -11231,7 +11231,7 @@ static int ath12k_mac_op_ampdu_action(struct ieee80211_hw *hw,
 				      struct ieee80211_ampdu_params *params)
 {
 	struct ieee80211_sta *sta = params->sta;
-	struct ath12k_sta *ahsta = (struct ath12k_sta *)sta->drv_priv;
+	struct ath12k_sta *ahsta = ath12k_sta_to_ahsta(sta);
 	struct ath12k_hw *ah = hw->priv;
 	int ret = -EINVAL;
 	u8 link_id;
@@ -11682,7 +11682,7 @@ ath12k_mac_update_peer_ru_punct_bitmap_iter(void *data,
 {
 	struct ath12k_link_vif *arvif = data;
 	struct ath12k *ar = arvif->ar;
-	struct ath12k_sta *ahsta = (struct ath12k_sta *)sta->drv_priv;
+	struct ath12k_sta *ahsta = ath12k_sta_to_ahsta(sta);
 	struct ath12k_link_sta *arsta;
 	struct ieee80211_link_sta *link_sta;
 	u8 link_id = arvif->link_id;
@@ -14219,7 +14219,7 @@ static void ath12k_mac_set_bitrate_mask_iter(void *data,
 					     struct ieee80211_sta *sta)
 {
 	struct ath12k_link_vif *arvif = data;
-	struct ath12k_sta *ahsta = (struct ath12k_sta *)sta->drv_priv;
+	struct ath12k_sta *ahsta = ath12k_sta_to_ahsta(sta);
 	struct ath12k_link_sta *arsta;
 	struct ath12k *ar = arvif->ar;
 	u8 link_id = arvif->link_id;
@@ -14244,7 +14244,7 @@ static void ath12k_mac_disable_peer_fixed_rate(void *data,
 					       struct ieee80211_sta *sta)
 {
 	struct ath12k_link_sta *arsta;
-	struct ath12k_sta *ahsta = (struct ath12k_sta *)sta->drv_priv;
+	struct ath12k_sta *ahsta = ath12k_sta_to_ahsta(sta);
 	struct ath12k_link_vif *arvif = data;
 	struct ath12k *ar;
 	u8 link_id = arvif->link_id;
@@ -14884,7 +14884,7 @@ static void ath12k_mac_op_sta_statistics(struct ieee80211_hw *hw,
 					 struct ieee80211_sta *sta,
 					 struct station_info *sinfo)
 {
-	struct ath12k_sta *ahsta = (struct ath12k_sta *)sta->drv_priv;
+	struct ath12k_sta *ahsta = ath12k_sta_to_ahsta(sta);
 	struct ath12k_link_sta *arsta = &ahsta->deflink;
 	struct ath12k *ar = arsta->arvif->ar;
 
diff --git a/drivers/net/wireless/ath/ath12k/peer.c b/drivers/net/wireless/ath/ath12k/peer.c
index 1446b7528ca5..143d149e642c 100644
--- a/drivers/net/wireless/ath/ath12k/peer.c
+++ b/drivers/net/wireless/ath/ath12k/peer.c
@@ -598,7 +598,7 @@ int ath12k_peer_create(struct ath12k *ar, struct ath12k_link_vif *arvif,
 	 * exists
 	 */
 	if (sta) {
-		ahsta = (struct ath12k_sta *)sta->drv_priv;
+		ahsta = ath12k_sta_to_ahsta(sta);
 		spin_lock_bh(&ar->ah->data_lock);
 		ml_peer = ath12k_ml_peer_find(ar->ah, param->peer_addr);
 		if (ml_peer && (!sta->mlo || ml_peer->id != ahsta->ml_peer_id)) {
@@ -682,7 +682,7 @@ int ath12k_peer_create(struct ath12k *ar, struct ath12k_link_vif *arvif,
 	peer->vif = vif;
 
 	if (sta) {
-		ahsta = (struct ath12k_sta *)sta->drv_priv;
+		ahsta = ath12k_sta_to_ahsta(sta);
 		arsta = ahsta->link[link_id];
 		arsta->tcl_metadata |= HTT_TCL_META_DATA_GET(0,
 							     HTT_TCL_META_DATA_TYPE) |
@@ -751,7 +751,7 @@ static u16 ath12k_mac_alloc_ml_peer_id(struct ath12k_hw *ah)
 
 int ath12k_ml_peer_create(struct ath12k_hw *ah, struct ieee80211_sta *sta)
 {
-	struct ath12k_sta *ahsta = (struct ath12k_sta *)sta->drv_priv;
+	struct ath12k_sta *ahsta = ath12k_sta_to_ahsta(sta);
 	struct ath12k_ml_peer *ml_peer;
 
 	lockdep_assert_held(&ah->conf_mutex);
@@ -797,7 +797,7 @@ int ath12k_ml_peer_create(struct ath12k_hw *ah, struct ieee80211_sta *sta)
 
 int ath12k_ml_peer_delete(struct ath12k_hw *ah, struct ieee80211_sta *sta)
 {
-	struct ath12k_sta *ahsta = (struct ath12k_sta *)sta->drv_priv;
+	struct ath12k_sta *ahsta = ath12k_sta_to_ahsta(sta);
 	struct ath12k_ml_peer *ml_peer;
 
 	lockdep_assert_held(&ah->conf_mutex);
diff --git a/drivers/net/wireless/ath/ath12k/peer.h b/drivers/net/wireless/ath/ath12k/peer.h
index 52e9bcfc59a5..310650b2666a 100644
--- a/drivers/net/wireless/ath/ath12k/peer.h
+++ b/drivers/net/wireless/ath/ath12k/peer.h
@@ -129,7 +129,7 @@ struct ath12k_link_sta *ath12k_peer_get_link_sta(struct ath12k_base *ab,
 	if (!peer->sta)
 		return NULL;
 
-	ahsta = (struct ath12k_sta *)peer->sta->drv_priv;
+	ahsta = ath12k_sta_to_ahsta(peer->sta);
 	if (peer->ml_peer_id & ATH12K_ML_PEER_ID_VALID) {
 		if (!(ahsta->links_map & BIT(peer->link_id))) {
 			ath12k_warn(ab, "peer %pM id %d link_id %d can't found in STA link_map 0x%x\n",
-- 
2.42.0

