From 8e0928808abe0e5f37b8fe3f62b2693a389e3378 Mon Sep 17 00:00:00 2001
From: P Praneesh <quic_ppranees@quicinc.com>
Date: Sat, 30 Sep 2023 00:44:27 +0530
Subject: [PATCH] ath12k: add optimization in rx data path

In skb->data, first 64 bytes contains hal rx descriptor which is getting
fetched for all the buffers. Prefetch it for the next skb helps to avoid
cache miss. Also prefetch skb->protocol and some other fields preceding
skb->data members are used in network layer and in some parts of driver.
Prefetching it helps to improve throughput in rx path.

During deliver MSDU in Rx path, remove redundant peer lookup which
improves CPU in stats enabled case.

For fetching PPE virtual port number, arvif and ahvif is getting
dereferenced for every packets which is consuming more CPU. Add logic to
assign VP number during peer create itself and reusing it improves
throughput in rx path.

Below tag is applicable only for the PPE virtual port number related
change.

Fixes : I9ce6ec13 (ath12k: DS: support active vp acceleration for 2 GHz)

Signed-off-by: Karthikeyan Periyasamy <quic_periyasa@quicinc.com>
Signed-off-by: P Praneesh <quic_ppranees@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/dp_rx.c | 19 ++++++++-----------
 drivers/net/wireless/ath/ath12k/peer.c  |  6 ++++++
 drivers/net/wireless/ath/ath12k/peer.h  |  4 ++++
 3 files changed, 18 insertions(+), 11 deletions(-)

--- a/drivers/net/wireless/ath/ath12k/dp_rx.c
+++ b/drivers/net/wireless/ath/ath12k/dp_rx.c
@@ -2915,10 +2915,6 @@ static void ath12k_dp_rx_h_mpdu(struct a
 	int vp;
 #endif
 	struct wireless_dev *wdev = NULL;
-#ifdef CPTCFG_ATH12K_BONDED_DS_SUPPORT
-	struct ath12k_vif *ahvif;
-	struct ath12k_link_vif *arvif;
-#endif
 
 	/* PN for multicast packets will be checked in mac80211 */
 	rxcb = ATH12K_SKB_RXCB(msdu);
@@ -2939,20 +2935,16 @@ static void ath12k_dp_rx_h_mpdu(struct a
 		    ath12k_dp_rx_check_fast_rx(ar, msdu, rx_desc, peer, rx_info)) {
 			wdev = ieee80211_vif_to_wdev(peer->vif);
 		        if (wdev) {
-#ifdef CPTCFG_MAC80211_PPE_SUPPORT
-				vp = peer->vif->ppe_vp_num;
-#endif
-				spin_unlock_bh(&ar->ab->base_lock);
-				ath12k_dp_rx_h_csum_offload(ar, msdu, rx_info);
 #ifdef CPTCFG_ATH12K_BONDED_DS_SUPPORT
-				ahvif = ath12k_vif_to_ahvif(peer->vif);
-				arvif = ahvif->link[peer->link_id];
-				vp = arvif->ppe_vp_num;
-				if (wdev->bond_netdev)
+				vp = peer->ppe_vp_num;
+				if (unlikely(wdev->bond_netdev))
 					msdu->dev = wdev->bond_netdev;
 				else
 #endif
 					msdu->dev = wdev->netdev;
+
+				spin_unlock_bh(&ar->ab->base_lock);
+				ath12k_dp_rx_h_csum_offload(ar, msdu, rx_info);
 #if defined(CPTCFG_MAC80211_PPE_SUPPORT) || defined(CPTCFG_ATH12K_BONDED_DS_SUPPORT)
 				if (vp > 0) {
 					if (likely(ppe_vp_tx_to_ppe(vp, msdu)))
@@ -3242,7 +3234,6 @@ static void ath12k_dp_rx_deliver_msdu(st
 		decap = rx_info->decap_type;
 
 	spin_lock_bh(&ab->base_lock);
-	peer = ath12k_dp_rx_h_find_peer(ab, msdu, rx_info);
 	if (rxcb->peer_id)
 		peer = ath12k_peer_find_by_id(ab, rxcb->peer_id);
 	if (!peer && (rx_info->filled & BIT_ULL(ATH12K_RX_INFO_ADDR2)))
@@ -3449,6 +3440,9 @@ static void ath12k_dp_rx_process_receive
 		skb = msdu_list->next;
 		if (likely(skb)) {
 			prefetch(skb);
+			prefetch(&skb->protocol);
+			prefetch(&skb->data);
+			prefetch(skb->data);
 			prefetch(skb->data + 64);
 			prefetch(skb->data + 128);
 		}
--- a/drivers/net/wireless/ath/ath12k/peer.c
+++ b/drivers/net/wireless/ath/ath12k/peer.c
@@ -696,6 +696,12 @@ int ath12k_peer_create(struct ath12k *ar
 	peer->sec_type = HAL_ENCRYPT_TYPE_OPEN;
 	peer->sec_type_grp = HAL_ENCRYPT_TYPE_OPEN;
 	peer->vif = vif;
+#ifdef CPTCFG_MAC80211_PPE_SUPPORT
+	peer->ppe_vp_num = peer->vif->ppe_vp_num;
+#endif
+#ifdef CPTCFG_ATH12K_BONDED_DS_SUPPORT
+	peer->ppe_vp_num = arvif->ppe_vp_num;
+#endif
 
 	if (sta) {
 		ahsta = ath12k_sta_to_ahsta(sta);
--- a/drivers/net/wireless/ath/ath12k/peer.h
+++ b/drivers/net/wireless/ath/ath12k/peer.h
@@ -83,6 +83,10 @@ struct ath12k_peer {
 	 * here and would be same for all partner peers
 	 */
 	u8 ml_addr[ETH_ALEN];
+#if defined(CPTCFG_MAC80211_PPE_SUPPORT) || defined(CPTCFG_ATH12K_BONDED_DS_SUPPORT)
+	/* Duplicate PPE port number to avoid link vif lookup in rx data path */
+	int ppe_vp_num;
+#endif
 };
 
 struct ath12k_ml_peer {
