From 4fed21bdfca28894f13174bc9bf04a479c8e31d7 Mon Sep 17 00:00:00 2001
From: Ramya Gnanasekar <quic_rgnanase@quicinc.com>
Date: Fri, 20 Oct 2023 10:55:20 +0530
Subject: [PATCH] wifi: ath12k: Fix WMI STA kickout event parsing

WMI STA kickout event will be sent from fimware with STA mac address,
reason and RSSI.

Host decodes mac address and de references the pointer from parsed TLV
instead of copying the mac address. The pointer is passed to kernel API
for rhash lookup. This causes stack corruption.

Fix it by properly decoding the TLV and copying the mac address for 6
bytes.

Signed-off-by: Ramya Gnanasekar <quic_rgnanase@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/wmi.c |  8 +++++---
 drivers/net/wireless/ath/ath12k/wmi.h | 16 +++++++++++++++-
 2 files changed, 20 insertions(+), 4 deletions(-)

--- a/drivers/net/wireless/ath/ath12k/wmi.c
+++ b/drivers/net/wireless/ath/ath12k/wmi.c
@@ -7845,7 +7845,9 @@ static int ath12k_pull_peer_sta_kickout_
 		return -EPROTO;
 	}
 
-	arg->mac_addr = ev->peer_macaddr.addr;
+	ether_addr_copy(arg->mac_addr, ev->peer_macaddr.addr);
+	arg->reason = __le32_to_cpu(ev->reason);
+	arg->rssi = __le32_to_cpu(ev->rssi);
 
 	kfree(tb);
 	return 0;
@@ -11745,8 +11747,8 @@ static void ath12k_peer_sta_kickout_even
 		goto exit;
 	}
 
-	ath12k_dbg(ab, ATH12K_DBG_PEER, "peer sta kickout event %pM",
-		   arg.mac_addr);
+	ath12k_dbg(ab, ATH12K_DBG_PEER, "peer sta kickout event %pM reason:%d",
+		   arg.mac_addr, arg.reason);
 
 	ieee80211_report_low_ack(sta, 10);
 
--- a/drivers/net/wireless/ath/ath12k/wmi.h
+++ b/drivers/net/wireless/ath/ath12k/wmi.h
@@ -6385,12 +6385,26 @@ struct wmi_offchan_data_tx_compl_event {
 	__le32 ppdu_id;
 } __packed;
 
+enum wmi_peer_sta_kickout_reason {
+	WMI_PEER_STA_KICKOUT_REASON_UNSPECIFIED = 0,
+	WMI_PEER_STA_KICKOUT_REASON_XRETRY = 1,
+	WMI_PEER_STA_KICKOUT_REASON_INACTIVITY = 2,
+	WMI_PEER_STA_KICKOUT_REASON_IBSS_DISCONNECT = 3,
+	WMI_PEER_STA_KICKOUT_REASON_TDLS_DISCONNECT = 4,
+	WMI_PEER_STA_KICKOUT_REASON_SA_QUERY_TIMEOUT = 5,
+	WMI_PEER_STA_KICKOUT_REASON_ROAMING_EVENT = 6,
+};
+
 struct wmi_peer_sta_kickout_arg {
-	const u8 *mac_addr;
+	u8 mac_addr[ETH_ALEN];
+	__le32 reason;
+	__le32 rssi;
 };
 
 struct wmi_peer_sta_kickout_event {
 	struct ath12k_wmi_mac_addr_params peer_macaddr;
+	__le32 reason;
+	__le32 rssi;
 } __packed;
 
 enum wmi_roam_reason {
