From 81e59184b36a00f135601596260cc0e78cdca060 Mon Sep 17 00:00:00 2001
From: Nagarajan Maran <quic_nmaran@quicinc.com>
Date: Mon, 6 Nov 2023 22:27:13 +0530
Subject: [PATCH] wifi: ath12k: Add SDWF delay histogram stats support.

Add support to collect the delay histogram stats for Service Defined
Wi-Fi(SDWF) feature.

Signed-off-by: Nagarajan Maran <quic_nmaran@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/peer.c |  4 +++
 drivers/net/wireless/ath/ath12k/sawf.c | 38 ++++++++++++++++++++++++++
 drivers/net/wireless/ath/ath12k/sawf.h |  1 +
 3 files changed, 43 insertions(+)

--- a/drivers/net/wireless/ath/ath12k/peer.c
+++ b/drivers/net/wireless/ath/ath12k/peer.c
@@ -209,6 +209,10 @@ void ath12k_peer_map_event(struct ath12k
 		peer->ast_hash = ast_hash;
 		peer->hw_peer_id = hw_peer_id;
 		ether_addr_copy(peer->addr, mac_addr);
+#ifdef CPTCFG_ATH12K_SAWF
+		if (ath12k_sawf_enable)
+			ath12k_sdwf_fill_hbucket_type(peer);
+#endif
 		list_add(&peer->list, &ab->peers);
 		wake_up(&ab->peer_mapping_wq);
 	}
--- a/drivers/net/wireless/ath/ath12k/sawf.c
+++ b/drivers/net/wireless/ath/ath12k/sawf.c
@@ -1470,8 +1470,35 @@ void ath12k_sawf_compute_hw_delay(struct
 
 #define	ATH12K_HIST_AVG_DIV	2
 
+const u32 ath12k_hist_hw_tx_comp_bucket[] = {
+	250, 500, 750, 1000, 1500, 2000, 2500, 5000, 6000, 7000, 8000, 9000, U32_MAX
+};
+
+void ath12k_hist_fill_buckets(struct hist_bucket *hist, u32 value)
+{
+	enum hist_types hist_type;
+	int idx;
+
+	hist_type = hist->hist_type;
+
+	if (hist_type != HIST_TYPE_HW_TX_COMP_DELAY)
+		return;
+
+	for (idx = HIST_BUCKET_0; idx < ARRAY_SIZE(ath12k_hist_hw_tx_comp_bucket); idx++) {
+		if (value <= ath12k_hist_hw_tx_comp_bucket[idx]) {
+			hist->freq[idx]++;
+			return;
+		}
+	}
+}
+
 void ath12k_update_hist_stats(struct ath12k_delay_hist_stats *hist_stats, u32 value)
 {
+	if (!hist_stats)
+		return;
+
+	ath12k_hist_fill_buckets(&hist_stats->hist, value);
+
 	if (!hist_stats->min || value < hist_stats->min)
 		hist_stats->min = value;
 
@@ -1644,6 +1671,19 @@ latency_stats_update:
 	return;
 }
 
+void ath12k_sdwf_fill_hbucket_type(struct ath12k_peer *peer)
+{
+	u32 tid, q_id;
+	struct sawf_tx_delay_stats *delay_stats;
+
+	for (tid = 0; tid < ATH12K_SAWF_MAX_TID_SUPPORT; tid++) {
+		for (q_id = 0; q_id < MAX_Q_PER_TID; q_id++) {
+			delay_stats = &peer->sawf_stats.tx_delay_stats[tid][q_id];
+			delay_stats->delay_hist.hist.hist_type = HIST_TYPE_HW_TX_COMP_DELAY;
+		}
+	}
+}
+
 static int ath12k_get_msduq_id(u8 svc_id, struct ath12k_peer *peer, u8 *q_id, u8 *tid)
 {
 	struct ath12k_sawf_ctx *sawf_ctx;
--- a/drivers/net/wireless/ath/ath12k/sawf.h
+++ b/drivers/net/wireless/ath/ath12k/sawf.h
@@ -894,6 +894,7 @@ void ath12k_telemetry_notify_breach(u8 *
 void ath12k_telemetry_breach_indication(u8 *mac_addr, u8 svc_id,
 					u8 param, bool set_clear,
 					u8 tid);
+void ath12k_sdwf_fill_hbucket_type(struct ath12k_peer *peer);
 #else /* CPTCFG_ATH12K_SAWF */
 
 static inline void ath12k_sawf_init(struct ath12k_base *ab) {
