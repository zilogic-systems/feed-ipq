From 09e0f0577ad6038386a8e85340b1a08831b3d05c Mon Sep 17 00:00:00 2001
From: Karthikeyan Periyasamy <quic_periyasa@quicinc.com>
Date: Sun, 22 Oct 2023 19:35:18 +0530
Subject: [PATCH 3/6] wifi: ath12k: avoid pass the number of entry to replenish
 Rxdma

Currently rxdma replenish handler takes the number of free entries
implicitly when the caller passes the num_entries as zero. This is helpful
to replenish the rxdma ring when caller not aware of entries to replenish.
After the init/umac reset, we can pass the num_entries as zero for auto
replenish the rxdma ring. This is helpful for rx optimization to implement
the local used descriptor list. Because when we pass zero then no need to
pass used list.

Signed-off-by: Karthikeyan Periyasamy <quic_periyasa@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/dp.c | 7 ++-----
 1 file changed, 2 insertions(+), 5 deletions(-)

--- a/drivers/net/wireless/ath/ath12k/dp.c
+++ b/drivers/net/wireless/ath/ath12k/dp.c
@@ -2451,7 +2451,7 @@ fail_link_desc_cleanup:
 int ath12k_dp_rxdma_ring_setup(struct ath12k_base *ab)
 {
 	struct ath12k_dp *dp = &ab->dp;
-	int num_entries, ret;
+	int ret;
 	struct dp_rxdma_ring *rx_ring = &dp->rx_refill_buf_ring;
 
 	ret = ath12k_dp_srng_setup(ab,
@@ -2464,10 +2464,7 @@ int ath12k_dp_rxdma_ring_setup(struct at
 		return ret;
 	}
 
-	num_entries = rx_ring->refill_buf_ring.size /
-			ath12k_hal_srng_get_entrysize(ab, HAL_RXDMA_BUF);
-
-	ath12k_dp_rx_bufs_replenish(ab, rx_ring, num_entries,
+	ath12k_dp_rx_bufs_replenish(ab, rx_ring, 0,
 				    ab->hw_params->hal_params->rx_buf_rbm,
 				    true);
 	return 0;
--- a/drivers/net/wireless/ath/ath12k/dp_rx.c
+++ b/drivers/net/wireless/ath/ath12k/dp_rx.c
@@ -406,7 +406,7 @@ static int ath12k_dp_rxdma_ring_buf_setu
 	if ((ringtype == HAL_RXDMA_MONITOR_BUF) || (ringtype == HAL_TX_MONITOR_BUF))
 		ath12k_dp_mon_buf_replenish(ab, rx_ring, num_entries);
 	else
-		ath12k_dp_rx_bufs_replenish(ab, rx_ring, num_entries,
+		ath12k_dp_rx_bufs_replenish(ab, rx_ring, 0,
 					    ab->hw_params->hal_params->rx_buf_rbm,
 					    ringtype == HAL_RXDMA_BUF);
 	return 0;
