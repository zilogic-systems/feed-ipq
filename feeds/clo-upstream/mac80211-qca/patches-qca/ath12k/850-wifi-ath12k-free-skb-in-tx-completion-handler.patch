From 606818d257f1705caa614ecf354beb39ca7156fe Mon Sep 17 00:00:00 2001
From: Sarika Sharma <quic_sarishar@quicinc.com>
Date: Tue, 31 Oct 2023 14:31:21 +0530
Subject: [PATCH] wifi: ath12k: correctly free skb in tx completion handler

While freeing skb in tx completion path for status reinject, inspect
or vdevid mismatch, dev_kfree_skb_any() is used but when a function
is using functions from mac80211 to free an skb then it should do
it consistently and not switch to the generic dev_kfree_skb_any.
Otherwise, mac80211 will not be aware of the freed skb and thus
not clean up related information in its internal data structures.

Hence fix the issue by properly using ieee80211_free_txskb().

Signed-off-by: Sarika Sharma <quic_sarishar@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/dp_tx.c | 6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

--- a/drivers/net/wireless/ath/ath12k/dp_tx.c
+++ b/drivers/net/wireless/ath/ath12k/dp_tx.c
@@ -775,8 +775,12 @@ static void ath12k_dp_tx_free_txbuf(stru
 				    struct sk_buff *skb_ext_desc)
 {
 	struct ath12k_skb_cb *skb_cb;
+	struct ath12k *ar;
+	u8 flags = 0;
 
 	skb_cb = ATH12K_SKB_CB(msdu);
+	ar = ab->pdevs[mac_id].ar;
+	flags = skb_cb->flags;
 
 	dma_unmap_single_attrs(ab->dev, skb_cb->paddr, msdu->len, DMA_TO_DEVICE,
 			     DMA_ATTR_SKIP_CPU_SYNC);
@@ -786,10 +790,12 @@ static void ath12k_dp_tx_free_txbuf(stru
 				       DMA_TO_DEVICE, DMA_ATTR_SKIP_CPU_SYNC);
 		dev_kfree_skb_any(skb_ext_desc);
 	}
+	if (ab->stats_disable && !(flags & ATH12K_SKB_TX_STATUS))
+		dev_kfree_skb_any(msdu);
+	else
+		ieee80211_free_txskb(ar->ah->hw, msdu);
 
-	dev_kfree_skb_any(msdu);
-
-	ath12k_dp_tx_decrement(ab->pdevs[mac_id].ar);
+	ath12k_dp_tx_decrement(ar);
 }
 
 static inline void ath12k_dp_tx_status_parse(struct ath12k_base *ab,
