From a0c567df1e96b9cc903daad3b0b328b268d9135f Mon Sep 17 00:00:00 2001
From: P Praneesh <quic_ppranees@quicinc.com>
Date: Fri, 24 Nov 2023 00:32:33 +0530
Subject: [PATCH] wifi: ath12k: fix encap setting in DS Tx path

In DS mode, packets are queued to SW2TCL ring without setting mac80211 and
ath12k encap mode. While receiving Tx completion for this kind of SKB,
mac80211 interprets it as native wifi packet and tries to retransmit it
through the regular Tx path. During this case, firmware crash observed
because of the mismatch between actual packet content(ethernet packet)
and encap type (native wifi).

Fix it by adding encap type in DS mode and fast tx path.

Signed-off-by: P Praneesh <quic_ppranees@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/bondif.c | 2 ++
 drivers/net/wireless/ath/ath12k/mac.c    | 1 +
 2 files changed, 3 insertions(+)

diff --git a/drivers/net/wireless/ath/ath12k/bondif.c b/drivers/net/wireless/ath/ath12k/bondif.c
index b0fa383..4ca38f0 100644
--- a/drivers/net/wireless/ath/ath12k/bondif.c
+++ b/drivers/net/wireless/ath/ath12k/bondif.c
@@ -831,6 +831,8 @@ netdev_tx_t ieee80211_link_subif_start_xmit_8023(struct sk_buff *skb,
 	ab->soc_stats.bond_tx_ucast_enqueued[ring_id]++;
 	/* TODO: debug why queue is always 15 */
 	info->hw_queue = 0;
+	info->flags = IEEE80211_TX_CTL_HW_80211_ENCAP;
+	ATH12K_SKB_CB(skb)->flags = ATH12K_SKB_HW_80211_ENCAP;
 
 	ret = ath12k_mac_tx_check_max_limit(arvif->ar, skb);
 	if (ret) {
diff --git a/drivers/net/wireless/ath/ath12k/mac.c b/drivers/net/wireless/ath/ath12k/mac.c
index 57528c0..f8fc325 100644
--- a/drivers/net/wireless/ath/ath12k/mac.c
+++ b/drivers/net/wireless/ath/ath12k/mac.c
@@ -9540,6 +9540,7 @@ static void ath12k_mac_op_tx(struct ieee80211_hw *hw,
 			return;
 		}
 
+		skb_cb->flags = ATH12K_SKB_HW_80211_ENCAP;
 		ret = ath12k_dp_tx_direct(arvif, skb);
 		if (unlikely(ret)) {
 			ath12k_dbg(arvif->ar->ab, ATH12K_DBG_MAC,
-- 
2.17.1

