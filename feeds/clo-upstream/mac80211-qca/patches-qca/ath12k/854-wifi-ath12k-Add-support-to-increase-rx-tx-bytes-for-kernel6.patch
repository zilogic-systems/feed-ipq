From abf704ce1680a5ef3a87d1e7eb7f05b15f7c9ea4 Mon Sep 17 00:00:00 2001
From: Sarika Sharma <quic_sarishar@quicinc.com>
Date: Thu, 26 Oct 2023 12:08:14 +0530
Subject: [PATCH] wifi: ath12k: Add support to increase rx tx
 bytes for kernel6.1

Currently we are handling the tx_packets, rx_packets, tx_bytes,
rx_bytes for kernel version less than 6.1, for latest
kernel version increment of these values is not handled.

As for latest kernel version these values are declared as structure
in linux-6.1, incrementing values straight forward will not work
here.
Add else condition for increasing values with functions as
u64_stats_add() and u64_stats_inc() for latest Linux version.

Signed-off-by: Sarika Sharma <quic_sarishar@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/bondif.c | 26 +++++++++++++++---------
 1 files changed, 16 insertions(+), 10 deletions(-)

--- a/drivers/net/wireless/ath/ath12k/bondif.c
+++ b/drivers/net/wireless/ath/ath12k/bondif.c
@@ -151,16 +151,20 @@ void ath12k_bond_link_release(struct ath
 
 static bool ath12k_stats_update_ppe_vp(struct net_device *dev, ppe_vp_hw_stats_t *vp_stats)
 {
-#if (LINUX_VERSION_CODE < KERNEL_VERSION(6, 1, 0))
 	struct pcpu_sw_netstats *tstats = this_cpu_ptr(netdev_tstats(dev));
-
 	u64_stats_update_begin(&tstats->syncp);
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(6, 1, 0))
 	tstats->tx_packets += vp_stats->tx_pkt_cnt;
 	tstats->tx_bytes += vp_stats->tx_byte_cnt;
 	tstats->rx_packets += vp_stats->rx_pkt_cnt;
 	tstats->rx_bytes += vp_stats->rx_byte_cnt;
-	u64_stats_update_end(&tstats->syncp);
+#else
+	u64_stats_add(&tstats->tx_packets, vp_stats->tx_pkt_cnt);
+	u64_stats_add(&tstats->tx_bytes, vp_stats->tx_byte_cnt);
+	u64_stats_add(&tstats->rx_packets, vp_stats->rx_pkt_cnt);
+	u64_stats_add(&tstats->rx_bytes, vp_stats->rx_byte_cnt);
 #endif
+	u64_stats_update_end(&tstats->syncp);
 	return true;
 }
 
@@ -781,14 +785,18 @@ void ieee80211_link_uninit(struct net_de
 
 static inline void ieee80211_tx_stats_bonded_if(struct net_device *dev, u32 len)
 {
-#if (LINUX_VERSION_CODE < KERNEL_VERSION(6, 1, 0))
-    struct pcpu_sw_netstats *tstats = this_cpu_ptr(netdev_tstats(dev));
+	struct pcpu_sw_netstats *tstats = this_cpu_ptr(netdev_tstats(dev));
+
+	u64_stats_update_begin(&tstats->syncp);
 
-    u64_stats_update_begin(&tstats->syncp);
-    tstats->tx_packets++;
-    tstats->tx_bytes += len;
-    u64_stats_update_end(&tstats->syncp);
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(6, 1, 0))
+	tstats->tx_packets++;
+	tstats->tx_bytes += len;
+#else
+	u64_stats_inc(&tstats->tx_packets);
+	u64_stats_add(&tstats->tx_bytes, len);
 #endif
+	u64_stats_update_end(&tstats->syncp);
 }
 
 netdev_tx_t ieee80211_link_subif_start_xmit_8023(struct sk_buff *skb,
