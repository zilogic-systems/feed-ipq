From 32b4ad5844929f9024f8d1efd55dcc252c5ef7dd Mon Sep 17 00:00:00 2001
From: Ramasamy Kaliappan <quic_rkaliapp@quicinc.com>
Date: Tue, 26 Dec 2023 21:44:04 +0530
Subject: [PATCH] ath12k: Change profile count to bssid indicator

When VDEV up, the host sends the profile count to the firmware
as a non-transmitting VAP count. According to firmware request,
profile count is expected at 2 power from max bssid_indicator.

Therefore, we update the profile count with 2 power of the actual
maximum BSSID indicator.

Signed-off-by: Ramasamy Kaliappan <quic_rkaliapp@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/mac.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

--- a/drivers/net/wireless/ath/ath12k/mac.c
+++ b/drivers/net/wireless/ath/ath12k/mac.c
@@ -2060,8 +2060,6 @@ static void ath12k_control_beaconing(str
 				    arvif->vdev_id, ret);
 
 		arvif->is_up = false;
-		if (tx_arvif)
-			tx_arvif->nontransmitting_vif_count = 0;
 
 		return;
 	}
@@ -2084,9 +2082,7 @@ static void ath12k_control_beaconing(str
 	if (tx_arvif) {
 		params.tx_bssid = tx_arvif->bssid;
 		params.profile_idx = info->bssid_index;
-		if (params.profile_idx >= tx_arvif->nontransmitting_vif_count)
-			tx_arvif->nontransmitting_vif_count = params.profile_idx;
-		params.profile_count = tx_arvif->nontransmitting_vif_count;
+		params.profile_count = BIT(info->bssid_indicator);
 	}
 	ret = ath12k_wmi_vdev_up(arvif->ar, &params);
 	if (ret) {
@@ -4231,7 +4227,6 @@ void ath12k_bss_disassoc(struct ath12k *
 		if (!tx_arvif)
 			goto unlock;
 		lockdep_assert_held(&tx_arvif->ar->conf_mutex);
-		tx_arvif->nontransmitting_vif_count--;
 	}
 
 	/* TODO: cancel connection_loss_work */
@@ -4608,7 +4603,7 @@ void ath12k_mac_bss_info_changed(struct
 				tx_arvif = tx_ahvif->link[info->mbssid_tx_vif_linkid];
 				params.tx_bssid = tx_arvif->bssid;
 				params.profile_idx = ahvif->vif->bss_conf.bssid_index;
-				params.profile_count = tx_arvif->nontransmitting_vif_count;
+				params.profile_count = BIT(info->bssid_indicator);
 			}
 
 			if (info->mbssid_tx_vif && arvif != tx_arvif &&
@@ -4637,8 +4632,7 @@ void ath12k_mac_bss_info_changed(struct
 					params.profile_idx =
 						ahvif->vif->bss_conf.bssid_index;
 					params.profile_count =
-						tx_arvif->nontransmitting_vif_count;
-
+						BIT(info->bssid_indicator);
 					ret = ath12k_wmi_vdev_up(arvif_itr->ar, &params);
 					if (ret)
 						ath12k_warn(ar->ab, "failed to bring vdev up %d: %d\n",
@@ -11954,7 +11948,7 @@ beacon_tmpl_setup:
 		tx_arvif = tx_ahvif->link[link->mbssid_tx_vif_linkid];
 		params.tx_bssid = tx_arvif->bssid;
 		params.profile_idx = ahvif->vif->bss_conf.bssid_index;
-		params.profile_count = tx_arvif->nontransmitting_vif_count;
+		params.profile_count = BIT(link->bssid_indicator);
 	}
 
 	if (ahvif->vif->type == NL80211_IFTYPE_STATION && link->nontransmitted) {
--- a/drivers/net/wireless/ath/ath12k/core.h
+++ b/drivers/net/wireless/ath/ath12k/core.h
@@ -419,7 +419,6 @@ struct ath12k_link_vif {
 	u8 vdev_stats_id;
 	struct ath12k_fw_vdev_ol_stats vdev_stats;
 	struct host_link_stats link_stats;
-	u8 nontransmitting_vif_count;
 	bool bcca_zero_sent;
 	bool do_not_send_tmpl;
 	u32 vht_cap;
