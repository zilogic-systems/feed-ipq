From 9d7841dcb0ec1964ccda6106e9bed45546c04647 Mon Sep 17 00:00:00 2001
From: Aloka Dixit <quic_alokad@quicinc.com>
Date: Tue, 28 Nov 2023 10:42:07 -0800
Subject: [PATCH 5/8] wifi: ath12k: advertise support for SW progressive DFS

Advertise support to user space that the driver supports different
parameters for the device bandwidth compared to the operating bandwidth
and for background radar detection on the device bandwidth
when SW based progressive DFS is supported. Firmware will set
the service bit WMI_TLV_SERVICE_SW_PROG_DFS_SUPPORT which 
determines if SW Progressive DFS is supported and
NL80211_EXT_FEATURE_DEVICE_BW in user-space will be updated.
Check for this support when background scan is requested, no need to
send WMI command to firmware as the CAC is requested on the current
device bandwidth where radar detection is already active.

Signed-off-by: Aloka Dixit <quic_alokad@quicinc.com>
Signed-off-by: Shivani Tambatkar <quic_stambatk@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/mac.c | 30 +++++++++++++++++++++------
 drivers/net/wireless/ath/ath12k/wmi.h |  1 +
 2 files changed, 25 insertions(+), 6 deletions(-)

--- a/drivers/net/wireless/ath/ath12k/mac.c
+++ b/drivers/net/wireless/ath/ath12k/mac.c
@@ -15665,7 +15665,8 @@ static int ath12k_mac_op_set_radar_backg
 		goto exit;
 	}
 
-	if (!test_bit(ar->cfg_rx_chainmask, &ar->pdev->cap.adfs_chain_mask)) {
+	if (!test_bit(ar->cfg_rx_chainmask, &ar->pdev->cap.adfs_chain_mask) &&
+	    !test_bit(WMI_TLV_SERVICE_SW_PROG_DFS_SUPPORT, ar->ab->wmi_ab.svc_map)) {
 		ret  = -EINVAL;
 		goto exit;
 	}
@@ -15690,20 +15691,32 @@ static int ath12k_mac_op_set_radar_backg
 			ar->agile_chandef.chan = NULL;
 		}
 	} else {
-		if (!cfg80211_chandef_valid(def) ||
-		    !(def->chan->flags & IEEE80211_CHAN_RADAR)) {
+		if (!cfg80211_chandef_valid(def)) {
 			ret = -EINVAL;
 			goto exit;
 		}
 
-		if (WARN_ON(ath12k_mac_vif_chan(ahvif->vif, &conf_def,
-						arvif->link_id))) {
+		if (WARN_ON(ath12k_mac_vif_chan(ahvif->vif, &conf_def, arvif->link_id))) {
 			ret = -EINVAL;
 			goto exit;
 		}
 
-		/* Note: Only Half width and full bandwidth is supported */
+		if (cfg80211_chandef_identical(&conf_def, def) &&
+		    cfg80211_chandef_device_present(def)) {
+			if (!test_bit(WMI_TLV_SERVICE_SW_PROG_DFS_SUPPORT,
+				      ar->ab->wmi_ab.svc_map))
+				ret = -EINVAL;
+			else
+				ret = 0;
+			goto exit;
+		}
 
+		if (!(def->chan->flags & IEEE80211_CHAN_RADAR)) {
+			ret = -EINVAL;
+			goto exit;
+		}
+
+		/* Note: Only Half width and full bandwidth is supported */
 		if(!(ath12k_is_supported_agile_bandwidth(conf_def.width,
 							  def->width))) {
                         ret = -EINVAL;
@@ -16430,10 +16443,17 @@ static int __ath12k_mac_register(struct
 				      NL80211_EXT_FEATURE_UNSOL_BCAST_PROBE_RESP);
 	}
 
-	if ((ar->pdev->cap.supported_bands & WMI_HOST_WLAN_5G_CAP) &&
-	    test_bit(ar->cfg_rx_chainmask, &cap->adfs_chain_mask))
-		wiphy_ext_feature_set(hw->wiphy,
-				      NL80211_EXT_FEATURE_RADAR_BACKGROUND);
+	if (ar->pdev->cap.supported_bands & WMI_HOST_WLAN_5G_CAP) {
+		if (test_bit(ar->cfg_rx_chainmask, &cap->adfs_chain_mask)) {
+			wiphy_ext_feature_set(hw->wiphy,
+					      NL80211_EXT_FEATURE_RADAR_BACKGROUND);
+		} else if (test_bit(WMI_TLV_SERVICE_SW_PROG_DFS_SUPPORT,
+				    ar->ab->wmi_ab.svc_map)) {
+			wiphy_ext_feature_set(hw->wiphy, NL80211_EXT_FEATURE_DEVICE_BW);
+			wiphy_ext_feature_set(hw->wiphy,
+					      NL80211_EXT_FEATURE_RADAR_BACKGROUND);
+		}
+	}
 
 	return 0;
 }
--- a/drivers/net/wireless/ath/ath12k/wmi.h
+++ b/drivers/net/wireless/ath/ath12k/wmi.h
@@ -2450,6 +2450,7 @@ enum wmi_tlv_service {
 	WMI_TLV_SERVICE_PKTLOG_DECODE_INFO_SUPPORT = 320,
 	WMI_TLV_SERVICE_PEER_METADATA_V1A_V1B_SUPPORT = 365,
 	WMI_TLV_SERVICE_RADAR_FLAGS_SUPPORT = 390,
+	WMI_TLV_SERVICE_SW_PROG_DFS_SUPPORT = 395,
 	WMI_MAX_EXT2_SERVICE,
 };
 
