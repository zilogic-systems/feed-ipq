From 5f208d6f39effb49c3816a8e84a81924d8d8377d Mon Sep 17 00:00:00 2001
From: Shivani Tambatkar <quic_stambatk@quicinc.com>
Date: Wed, 6 Dec 2023 10:19:04 -0800
Subject: [PATCH 8/8] wifi: ath12k: calculate radar bitmap for device bandwidth

Current radar bitmap is calculated for the operating bandwidth.
When device bandwidth parameters are present which are different than
the operating bandwidth, the frequency offset provided by the firmware
is from the device center freqeuncy instead of the operating center
frequency.
Modify the calculation.

Signed-off-by: Shivani Tambatkar <quic_stambatk@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/wmi.c | 13 +++++++++++--
 1 file changed, 11 insertions(+), 2 deletions(-)

--- a/drivers/net/wireless/ath/ath12k/wmi.c
+++ b/drivers/net/wireless/ath/ath12k/wmi.c
@@ -12400,6 +12400,7 @@ static void ath12k_dfs_calculate_subchan
 	int i;
 	struct cfg80211_chan_def *chandef;
 	struct ath12k_mac_any_chandef_arg arg;
+	bool chandef_device_present = false;
 
 	ar = ath12k_mac_get_ar_by_pdev_id(ab, radar->pdev_id);
 
@@ -12409,6 +12410,7 @@ static void ath12k_dfs_calculate_subchan
 		ieee80211_iter_chan_contexts_atomic(ar->ah->hw, ath12k_mac_get_any_chandef_iter,
 					    &arg);
 		chandef = arg.def;
+		chandef_device_present = cfg80211_chandef_device_present(chandef);
 	} else {
 		chandef = &ar->agile_chandef;
 	}
@@ -12421,7 +12423,11 @@ static void ath12k_dfs_calculate_subchan
 	ath12k_dbg(ab, ATH12K_DBG_WMI, " Operating freq:%u center_freq1:%u, center_freq2:%u",
 		   chandef->chan->center_freq, chandef->center_freq1,chandef->center_freq2);
 
-	width = chandef->width;
+	if (chandef_device_present)
+		width = chandef->width_device;
+	else
+		width = chandef->width;
+
 	subchannel_count = ath12k_calculate_subchannel_count(width);
 	if (!subchannel_count) {
 		ath12k_warn(ab, "invalid subchannel count for bandwidth=%d\n", width);
@@ -12434,7 +12440,10 @@ static void ath12k_dfs_calculate_subchan
 	}
 	ath12k_dbg(ab, ATH12K_DBG_WMI, "perform channel submarking\n");
 
-	center_freq = chandef->center_freq1;
+	if (chandef_device_present)
+		center_freq = chandef->center_freq_device;
+	else
+		center_freq = chandef->center_freq1;
 
 	radar_found_freq = center_freq + radar->freq_offset;
 
