From b239fac811f8b1caa3d927d1cd3edae345596b95 Mon Sep 17 00:00:00 2001
From: Sidhanta Sahu <quic_sidhanta@quicinc.com>
Date: Thu, 28 Dec 2023 10:51:13 -0800
Subject: [PATCH] wifi: ath12k: Add vendor cmd handler for DS for creating
mlnetdev

Add support to handle the vendor command notifying the presence
of an MLD before hand, during link addition, which will help
in destroying bond netdev for SLD interfaces

Signed-off-by: Balamurugan Mahalingam <quic_bmahalin@quicinc.com>
Signed-off-by: Ramanathan Choodamani <quic_rchoodam@quicinc.com>
Signed-off-by: Sidhanta Sahu <quic_sidhanta@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/mac.c    |  4 ++-
 drivers/net/wireless/ath/ath12k/vendor.c | 45 ++++++++++++++++++++++++
 drivers/net/wireless/ath/ath12k/vendor.h | 12 +++++++
 3 files changed, 60 insertions(+), 1 deletion(-)

--- a/drivers/net/wireless/ath/ath12k/mac.c
+++ b/drivers/net/wireless/ath/ath12k/mac.c
@@ -10885,7 +10885,7 @@ static void ath12k_update_obss_color_not
 		}
 #ifdef CPTCFG_ATH12K_BONDED_DS_SUPPORT
 		if (arvif->link_id != ATH12K_DEFAULT_SCAN_LINK) {
-			if (hweight16(vif->valid_links) <= 1 && link_ndev) {
+			if (hweight16(vif->valid_links) <= 1 && link_ndev && !wdev->ml_netdev) {
 				ath12k_free_bonddev_for_sfe(wdev, vif, link_id);
 				arvif->ndev_pvt = NULL;
 				arvif->ppe_vp_num = -1;
--- a/drivers/net/wireless/ath/ath12k/vendor.c
+++ b/drivers/net/wireless/ath/ath12k/vendor.c
@@ -9,6 +9,7 @@
 #include "mac.h"
 #include "telemetry.h"
 #include "sawf.h"
+#include "bondif.h"
 
 #ifdef CPTCFG_ATH12K_SAWF
 static const struct nla_policy
@@ -122,6 +123,11 @@ ath12k_vendor_scs_config_policy[QCA_WLAN
 	[QCA_WLAN_VENDOR_ATTR_SCS_RULE_CONFIG_DIRECTION] = {.type = NLA_U8},
 };
 
+static const struct nla_policy
+ath12k_ds_policy[QCA_WLAN_VENDOR_ATTR_DS_MAX + 1] = {
+	[QCA_WLAN_VENDOR_ATTR_CONFIG_EHT_MLO_MODE] = {.type = NLA_U8},
+};
+
 #ifdef CPTCFG_ATH12K_SAWF
 static void ath12k_set_default_values(struct ath12k_sawf_svc_params *param)
 {
@@ -920,6 +926,36 @@ end_stats:
 	return ret;
 }
 
+static int ath12k_vendor_ds_handler(struct wiphy *wihpy,
+			    struct wireless_dev *wdev,
+			    const void *data,
+			    int data_len)
+{
+	struct nlattr *tb[QCA_WLAN_VENDOR_ATTR_DS_MAX + 1];
+	int ret = 0;
+	int ml_netdev = 0;
+
+	if (!g_bonded_interface_model)
+		return 0;
+
+	ret = nla_parse(tb, QCA_WLAN_VENDOR_ATTR_DS_MAX, data, data_len,
+			ath12k_ds_policy, NULL);
+
+	if (ret) {
+		ath12k_err(NULL, "Invalid attribute with ds %d\n", ret);
+		return ret;
+	}
+
+	if (tb[QCA_WLAN_VENDOR_ATTR_CONFIG_EHT_MLO_MODE])
+		ml_netdev = nla_get_u8(tb[QCA_WLAN_VENDOR_ATTR_CONFIG_EHT_MLO_MODE]);
+
+	ath12k_dbg(NULL, ATH12K_DBG_PPE,
+		   "Marking dev [%s] as mlo netdev. %d\n", wdev->netdev->name, ml_netdev);
+	wdev->ml_netdev = ml_netdev;
+
+	return 0;
+}
+
 static int ath12k_vendor_telemetry_sla_reset_stats(struct wiphy *wihpy,
 						   struct wireless_dev *wdev,
 						   const void *data,
@@ -1161,6 +1197,14 @@ static struct wiphy_vendor_command ath12
 		.maxattr = QCA_WLAN_VENDOR_ATTR_SLA_MAX,
 		.flags = WIPHY_VENDOR_CMD_NEED_NETDEV,
 	},
+	{
+		.info.vendor_id = QCA_NL80211_VENDOR_ID,
+		.info.subcmd = QCA_NL80211_VENDOR_SUBCMD_SET_WIFI_CONFIGURATION,
+		.doit = ath12k_vendor_ds_handler,
+		.policy = ath12k_ds_policy,
+		.maxattr = QCA_WLAN_VENDOR_ATTR_DS_MAX,
+		.flags = WIPHY_VENDOR_CMD_NEED_NETDEV,
+	},
 #endif /* CPTCFG_ATH12K_SAWF */
 	{
 		.info.vendor_id = QCA_NL80211_VENDOR_ID,
--- a/drivers/net/wireless/ath/ath12k/vendor.h
+++ b/drivers/net/wireless/ath/ath12k/vendor.h
@@ -489,6 +489,15 @@ enum qca_wlan_vendor_attr_sawf_sla_param
 		QCA_WLAN_VENDOR_ATTR_SLA_AFTER_LAST - 1
 };
 
+enum qca_wlan_vendor_attr_ds {
+	QCA_WLAN_VENDOR_ATTR_DS_INVALID = 0,
+	QCA_WLAN_VENDOR_ATTR_CONFIG_EHT_MLO_MODE = 90,
+	/* Keep last */
+	QCA_WLAN_VENDOR_ATTR_DS_AFTER_LAST,
+	QCA_WLAN_VENDOR_ATTR_DS_MAX =
+		QCA_WLAN_VENDOR_ATTR_DS_AFTER_LAST - 1
+};
+
 void ath12k_vendor_telemetry_notify_breach(struct ieee80211_vif *vif, u8 *mac_addr,
 					   u8 svc_id, u8 param, bool set_clear,
 					   u8 tid, u8 *mld_addr);
