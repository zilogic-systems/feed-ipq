From 8651732bcf97ed0ea7a3700ea80b5326a032a37c Mon Sep 17 00:00:00 2001
From: Rathees Kumar R Chinannan <quic_rrchinan@quicinc.com>
Date: Tue, 9 Jan 2024 10:48:53 +0530
Subject: [PATCH] wifi: ath12k: Add monitor vdev on Multi Vdev Restart WMI
 command

During channel switch, currently on MVR WMI command monitor vdev is not
included since it is not part of assigned_vif list and separate vdev stop and
start WMI commands are sent for monitor vdev without stopping all other VDEVs.
This is setting two parallel home channels on target and causing the issue.

This change is to add monitor vdev on MVR WMI command and handle
monitor vdev on MVR event processing.

Signed-off-by: Rathees Kumar R Chinannan <quic_rrchinan@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/mac.c | 30 ++++++++++++---------------
 drivers/net/wireless/ath/ath12k/wmi.c | 11 ++++++----
 2 files changed, 20 insertions(+), 21 deletions(-)

--- a/drivers/net/wireless/ath/ath12k/mac.c
+++ b/drivers/net/wireless/ath/ath12k/mac.c
@@ -12275,26 +12275,9 @@ ath12k_mac_update_vif_chan_extras(struct
 				  int n_vifs)
 {
 	struct ath12k_base *ab = ar->ab;
-	bool monitor_vif = false;
 	struct cfg80211_chan_def *chandef;
-	int i;
-
 	lockdep_assert_held(&ar->conf_mutex);
 
-	for (i = 0; i < n_vifs; i++) {
-		if (vifs[i].vif->type == NL80211_IFTYPE_MONITOR) {
-			monitor_vif = true;
-			break;
-		}
-	}
-
-	/* Restart the internal monitor vdev on new channel */
-	if (!monitor_vif &&
-	    test_bit(MONITOR_VDEV_CREATED, &ar->monitor_flags)) {
-		if (!ath12k_mac_monitor_stop(ar))
-			ath12k_mac_monitor_start(ar);
-	}
-
 	chandef = &vifs[0].new_ctx->def;
 
 	spin_lock_bh(&ar->data_lock);
@@ -12459,6 +12442,8 @@ ath12k_mac_update_vif_chan_mvr(struct at
 	int ret, i, time_left, trans_vdev_index, vdev_idx, n_vdevs = 0;
 	u32 vdev_ids[TARGET_NUM_VDEVS];
 	struct ieee80211_bss_conf *link;
+	bool monitor_vif = false;
+	int k;
 
 	lockdep_assert_held(&ar->conf_mutex);
 
@@ -12501,6 +12486,17 @@ ath12k_mac_update_vif_chan_mvr(struct at
 		vdev_ids[n_vdevs++] = arvif->vdev_id;
 	}
 
+	for (k = 0; k < n_vifs; k++) {
+		if (vifs[k].vif->type == NL80211_IFTYPE_MONITOR) {
+			monitor_vif = true;
+			break;
+		}
+	}
+	if (!monitor_vif &&
+	    test_bit(MONITOR_VDEV_CREATED, &ar->monitor_flags)) {
+		vdev_ids[n_vdevs++] = ar->monitor_vdev_id;
+	}
+
 	if (!n_vdevs) {
 		ath12k_dbg(ab, ATH12K_DBG_MAC,
 			   "mac 0 vdevs available to switch chan ctx via mvr\n");
--- a/drivers/net/wireless/ath/ath12k/wmi.c
+++ b/drivers/net/wireless/ath/ath12k/wmi.c
@@ -1018,11 +1018,14 @@ static void ath12k_wmi_process_mvr_event
 
 		arvif = ath12k_mac_get_arvif_by_vdev_id(ab, bit_pos);
 		if (!arvif) {
-			ath12k_warn(ab, "wmi mvr resp for unknown vdev %d", bit_pos);
-			continue;
+			ar = ath12k_mac_get_ar_by_vdev_id(ab, bit_pos);
+			if (!(ar && bit_pos == ar->monitor_vdev_id)) {
+				ath12k_warn(ab, "wmi mvr resp for unknown vdev %d", bit_pos);
+				continue;
+			}
+		} else {
+			arvif->mvr_processing = false;
 		}
-
-		arvif->mvr_processing = false;
 		ath12k_dbg(ab, ATH12K_DBG_WMI,
 			   "wmi mvr vdev %d restarted\n", bit_pos);
 	}
