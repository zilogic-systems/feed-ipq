From 1c2fbe7269729e63544eba0a2a7f0e67a54645d7 Mon Sep 17 00:00:00 2001
From: Hari Chandrakanthan <quic_haric@quicinc.com>
Date: Mon, 15 Jan 2024 15:59:36 +0530
Subject: [PATCH] wifi: ath12k: add support to count rx retries

Add support to count station level rx retries.
It denotes the number of data frames(MPDUs) received
with rx retry bit set.

Signed-off-by: Hari Chandrakanthan <quic_haric@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/core.h   |  1 +
 drivers/net/wireless/ath/ath12k/dp_mon.c | 13 ++++++++++---
 drivers/net/wireless/ath/ath12k/hal_rx.h |  6 +++++-
 drivers/net/wireless/ath/ath12k/mac.c    |  3 +++
 4 files changed, 19 insertions(+), 4 deletions(-)

diff --git a/drivers/net/wireless/ath/ath12k/core.h b/drivers/net/wireless/ath/ath12k/core.h
index 29a1b8b..b832f1b 100644
--- a/drivers/net/wireless/ath/ath12k/core.h
+++ b/drivers/net/wireless/ath/ath12k/core.h
@@ -701,6 +701,7 @@ struct ath12k_link_sta {
 	/* will be saved to use during recovery */
 	struct ieee80211_key_conf *keys[WMI_MAX_KEY_INDEX + 1];
 	enum ieee80211_sta_state state;
+	u32 rx_retries;
 };
 
 struct ath12k_sta {
diff --git a/drivers/net/wireless/ath/ath12k/dp_mon.c b/drivers/net/wireless/ath/ath12k/dp_mon.c
index d30d23d..361acb2 100644
--- a/drivers/net/wireless/ath/ath12k/dp_mon.c
+++ b/drivers/net/wireless/ath/ath12k/dp_mon.c
@@ -1651,10 +1651,13 @@ ath12k_dp_mon_rx_parse_status_tlv(struct ath12k_base *ab,
 
 		info[0] = __le32_to_cpu(mpdu_start->info0);
 		info[1] = __le32_to_cpu(mpdu_start->info1);
+		info[2] = __le32_to_cpu(mpdu_start->info3);
 		peer_id = u32_get_bits(info[1], HAL_RX_MPDU_START_INFO1_PEERID);
 		if (peer_id)
 			ppdu_info->peer_id = peer_id;
 
+		ppdu_info->mpdu_retry = info[2] & HAL_RX_MPDU_START_INFO3_MPDU_RETRY;
+
 		ppdu_info->mpdu_len += u32_get_bits(info[1],
 						    HAL_RX_MPDU_START_INFO2_MPDU_LEN);
 		if (userid < HAL_MAX_UL_MU_USERS) {
@@ -1662,6 +1665,7 @@ ath12k_dp_mon_rx_parse_status_tlv(struct ath12k_base *ab,
 			ppdu_info->userid = userid;
 			ppdu_info->userstats[userid].ampdu_id =
 				u32_get_bits(info[0], HAL_RX_MPDU_START_INFO0_PPDU_ID);
+			ppdu_info->userstats[userid].mpdu_retry = info[2] & HAL_RX_MPDU_START_INFO3_MPDU_RETRY;
 		}
 
 		break;
@@ -3428,6 +3432,7 @@ static void ath12k_dp_mon_rx_update_peer_su_stats(struct ath12k *ar,
 	arsta->last_tx_pkt_bw = ppdu_info->bw;
 	bw_offset = arsta->last_tx_pkt_bw * 3;
 	arsta->rssi_comb = ppdu_info->rssi_comb;
+	arsta->rx_retries  += ppdu_info->mpdu_retry;
 	ewma_avg_rssi_add(&arsta->avg_rssi, ppdu_info->rssi_comb + bw_offset);
 
 	if (!ath12k_debugfs_is_extd_rx_stats_enabled(ar) || !rx_stats)
@@ -3607,6 +3612,11 @@ ath12k_dp_mon_rx_update_user_stats(struct ath12k *ar,
 		return;
 	}
 
+	arsta->rx_retries = user_stats->mpdu_retry;
+
+	if (!ath12k_debugfs_is_extd_rx_stats_enabled(ar))
+		return;
+
 	rx_stats = arsta->rx_stats;
 	if (!rx_stats)
 		return;
@@ -3690,9 +3700,6 @@ ath12k_dp_mon_rx_update_peer_mu_stats(struct ath12k *ar,
 {
 	u32 num_users, i;
 
-	if (!ath12k_debugfs_is_extd_rx_stats_enabled(ar))
-		return;
-
 	num_users = ppdu_info->num_users;
 	if (num_users > HAL_MAX_UL_MU_USERS)
 		num_users = HAL_MAX_UL_MU_USERS;
diff --git a/drivers/net/wireless/ath/ath12k/hal_rx.h b/drivers/net/wireless/ath/ath12k/hal_rx.h
index b8f6a93..d0f090f 100644
--- a/drivers/net/wireless/ath/ath12k/hal_rx.h
+++ b/drivers/net/wireless/ath/ath12k/hal_rx.h
@@ -150,6 +150,7 @@ struct hal_rx_user_status {
 	u32 mpdu_err_byte_count;
 	u32 ampdu_id;
 	bool ampdu_present;
+	bool mpdu_retry;
 };
 
 struct msdu_info {
@@ -289,6 +290,7 @@ struct hal_rx_mon_ppdu_info {
 	u32 eht_user_info[EHT_MAX_USER_INFO];
 	struct hal_rx_u_sig_info u_sig_info;
 	struct hal_rx_mon_cmn_mpdu_info cmn_mpdu_info;
+	bool mpdu_retry;
 };
 
 #define HAL_RX_PPDU_START_INFO0_PPDU_ID		GENMASK(15, 0)
@@ -515,11 +517,13 @@ struct hal_rx_phyrx_rssi_legacy_info {
 #define HAL_RX_MPDU_START_INFO1_PEERID		GENMASK(29, 16)
 #define HAL_RX_MPDU_START_INFO1_CHIPID		GENMASK(31, 30)
 #define HAL_RX_MPDU_START_INFO2_MPDU_LEN	GENMASK(13, 0)
+#define HAL_RX_MPDU_START_INFO3_MPDU_RETRY	BIT(19)
 struct hal_rx_mpdu_start {
 	__le32 rsvd0[9];
 	__le32 info0;
 	__le32 info1;
-	__le32 rsvd1[2];
+	__le32 info3;
+	__le32 rsvd1;
 	__le32 info2;
 	__le32 rsvd2[16];
 } __packed;
diff --git a/drivers/net/wireless/ath/ath12k/mac.c b/drivers/net/wireless/ath/ath12k/mac.c
index 86d0e4f..5c0cc3d 100644
--- a/drivers/net/wireless/ath/ath12k/mac.c
+++ b/drivers/net/wireless/ath/ath12k/mac.c
@@ -15137,6 +15137,9 @@ static void ath12k_mac_op_sta_statistics(struct ieee80211_hw *hw,
 			    ar->rssi_offsets.rssi_offset;
 
 	sinfo->filled |= BIT_ULL(NL80211_STA_INFO_SIGNAL_AVG);
+
+	sinfo->rx_retries = arsta->rx_retries;
+	sinfo->filled |= BIT_ULL(NL80211_STA_INFO_RX_RETRIES);
 }
 
 int ath12k_mac_btcoex_config(struct ath12k *ar, struct ath12k_link_vif *arvif,
-- 
2.34.1

