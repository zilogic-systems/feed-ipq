From a7e6c01a8e0de2eebf5a731641645014de9eac33 Mon Sep 17 00:00:00 2001
From: Nandha Kishore Easwaran <quic_nandhaki@quicinc.com>
Date: Fri, 5 Jan 2024 10:23:45 +0530
Subject: [PATCH 05/10] wifi: ath12k: Add DP APIs for FST attach and detach

Add DP APIs for attaching and detaching FST table.

1) ath12k_dp_rx_fst_attach - This API initializes memory for dp_fst table
and also allocates memory for all FSE entries. This API is called during
core init. This API further invokes HAL attach API.

2) ath12k_dp_rx_fst_detach - This API frees all the memory that were
allocated for FST table and FSE entries.

Signed-off-by: Nandha Kishore Easwaran <quic_nandhaki@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/dp_rx.c  | 45 ++++++++++++++++++++++++
 drivers/net/wireless/ath/ath12k/dp_rx.h  |  9 +++++
 drivers/net/wireless/ath/ath12k/hal_rx.h |  3 +-
 drivers/net/wireless/ath/ath12k/hw.c     |  5 +++
 drivers/net/wireless/ath/ath12k/hw.h     |  1 +
 5 files changed, 62 insertions(+), 1 deletion(-)

diff --git a/drivers/net/wireless/ath/ath12k/dp_rx.c b/drivers/net/wireless/ath/ath12k/dp_rx.c
index d4b11d5..ca08d81 100644
--- a/drivers/net/wireless/ath/ath12k/dp_rx.c
+++ b/drivers/net/wireless/ath/ath12k/dp_rx.c
@@ -5814,3 +5814,48 @@ err_free:
 	dev_kfree_skb_any(skb);
 	return ret;
 }
+
+struct dp_rx_fst *ath12k_dp_rx_fst_attach(struct ath12k_base *ab)
+{
+	struct dp_rx_fst *fst;
+
+	if (!ab->hw_params->support_fse)
+		return NULL;
+
+	fst = kzalloc(sizeof(*fst), GFP_KERNEL);
+	if (!fst)
+		return NULL;
+
+	fst->num_entries = 0;
+
+	fst->base = kcalloc(HAL_RX_FLOW_SEARCH_TABLE_SIZE,
+			    sizeof(struct dp_rx_fse), GFP_KERNEL);
+	if (!fst->base) {
+		kfree(fst);
+		return NULL;
+	}
+
+	fst->hal_rx_fst = ath12k_hal_rx_fst_attach(ab);
+	if (!fst->hal_rx_fst) {
+		ath12k_err(ab, "Rx Hal fst allocation failed\n");
+		kfree(fst->base);
+		kfree(fst);
+		return NULL;
+	}
+
+	spin_lock_init(&fst->fst_lock);
+	ath12k_info(ab, "Rx FST attach successful\n");
+
+	return fst;
+}
+
+void ath12k_dp_rx_fst_detach(struct ath12k_base *ab, struct dp_rx_fst *fst)
+{
+	if (fst) {
+		ath12k_hal_rx_fst_detach(ab, fst->hal_rx_fst);
+		kfree(fst->base);
+		kfree(fst);
+	}
+
+	ath12k_info(ab, "Rx FST detach successful");
+}
diff --git a/drivers/net/wireless/ath/ath12k/dp_rx.h b/drivers/net/wireless/ath/ath12k/dp_rx.h
index 609e747..90fb731 100644
--- a/drivers/net/wireless/ath/ath12k/dp_rx.h
+++ b/drivers/net/wireless/ath/ath12k/dp_rx.h
@@ -160,6 +160,15 @@ struct rx_flow_info {
 	u16 fse_metadata;
 };
 
+struct dp_rx_fse {
+	struct hal_rx_fse *hal_fse;
+	u32 flow_hash;
+	u32 flow_id;
+	u32 msdu_count;
+	u8 reo_indication;
+	u8 is_valid;
+};
+
 static inline u32 ath12k_he_gi_to_nl80211_he_gi(u8 sgi)
 {
 	u32 ret = 0;
diff --git a/drivers/net/wireless/ath/ath12k/hal_rx.h b/drivers/net/wireless/ath/ath12k/hal_rx.h
index 98ef8d1..04968b6 100644
--- a/drivers/net/wireless/ath/ath12k/hal_rx.h
+++ b/drivers/net/wireless/ath/ath12k/hal_rx.h
@@ -1347,5 +1347,6 @@ int ath12k_hal_wbm_desc_parse_err(struct ath12k_base *ab, void *desc,
 void ath12k_hal_rx_reo_ent_paddr_get(struct ath12k_base *ab,
 				     struct ath12k_buffer_addr *buff_addr,
 				     dma_addr_t *paddr, u32 *cookie);
-
+struct hal_rx_fst *ath12k_hal_rx_fst_attach(struct ath12k_base *ab);
+void ath12k_hal_rx_fst_detach(struct ath12k_base *ab, struct hal_rx_fst *fst);
 #endif
diff --git a/drivers/net/wireless/ath/ath12k/hw.c b/drivers/net/wireless/ath/ath12k/hw.c
index eae1ee2..ee7e4b5 100644
--- a/drivers/net/wireless/ath/ath12k/hw.c
+++ b/drivers/net/wireless/ath/ath12k/hw.c
@@ -1595,6 +1595,7 @@ static struct ath12k_hw_params ath12k_hw_params[] = {
 		.supports_tx_monitor = false,
 		.fw_mem_mode = ATH12K_QMI_TARGET_MEM_MODE,
 		.is_plink_preferable = true,
+		.support_fse = false,
 	},
 	{
 		.name = "wcn7850 hw2.0",
@@ -1667,6 +1668,7 @@ static struct ath12k_hw_params ath12k_hw_params[] = {
 		.supports_tx_monitor = false,
 		.fw_mem_mode = ATH12K_QMI_TARGET_MEM_MODE,
 		.is_plink_preferable = true,
+		.support_fse = false,
 	},
 	{
 		.name = "qcn9274 hw2.0",
@@ -1752,6 +1754,7 @@ static struct ath12k_hw_params ath12k_hw_params[] = {
 		.supports_tx_monitor = false,
 		.fw_mem_mode = ATH12K_QMI_TARGET_MEM_MODE,
 		.is_plink_preferable = true,
+		.support_fse = false,
 	},
 	{
 		.name = "ipq5332 hw1.0",
@@ -1841,6 +1844,7 @@ static struct ath12k_hw_params ath12k_hw_params[] = {
 		.supports_tx_monitor = false,
 		.fw_mem_mode = ATH12K_QMI_TARGET_MEM_MODE,
 		.is_plink_preferable = false,
+		.support_fse = false,
 	},
 	{
 		.name = "qcn6432 hw1.0",
@@ -1923,6 +1927,7 @@ static struct ath12k_hw_params ath12k_hw_params[] = {
 		.en_qdsslog = true,
 		.fw_mem_mode = ATH12K_QMI_TARGET_MEM_MODE,
 		.is_plink_preferable = true,
+		.support_fse = false,
 	},
 };
 
diff --git a/drivers/net/wireless/ath/ath12k/hw.h b/drivers/net/wireless/ath/ath12k/hw.h
index 5b77692..be9c9f3 100644
--- a/drivers/net/wireless/ath/ath12k/hw.h
+++ b/drivers/net/wireless/ath/ath12k/hw.h
@@ -254,6 +254,7 @@ struct ath12k_hw_params {
 	bool support_umac_reset;
 	int fw_mem_mode;
 	bool is_plink_preferable;
+	bool support_fse;
 };
 
 struct ath12k_hw_ops {
-- 
2.34.1

