From fbb389efe51ec7c2df92c334215f737b4de9d439 Mon Sep 17 00:00:00 2001
From: Nandha Kishore Easwaran <quic_nandhaki@quicinc.com>
Date: Wed, 10 Jan 2024 10:57:22 +0530
Subject: [PATCH 07/10] wifi: ath12k: Add DP changes for FST lookup and dump

Added DP APIs for the following
1) ath12k_dp_rx_flow_dump_flow_entry - Dump the flow tuple information.

2) ath12k_dp_rx_flow_compute_flow_hash - Compule hash for 5 tuple value

3) ath12k_dp_rx_flow_find_entry_by_tuple - Find flow id fiven the 5
tuple values.

4) ath12k_dp_dump_fst_table - Dump all the entries of fst table by
calling HAL api.

Signed-off-by: Nandha Kishore Easwaran <quic_nandhaki@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/core.h   |  1 +
 drivers/net/wireless/ath/ath12k/dp_rx.c  | 83 ++++++++++++++++++++++++
 drivers/net/wireless/ath/ath12k/hal_rx.h | 10 +++
 3 files changed, 94 insertions(+)

diff --git a/drivers/net/wireless/ath/ath12k/core.h b/drivers/net/wireless/ath/ath12k/core.h
index 29a1b8b..49ab208 100644
--- a/drivers/net/wireless/ath/ath12k/core.h
+++ b/drivers/net/wireless/ath/ath12k/core.h
@@ -1397,6 +1397,7 @@ struct ath12k_hw_group {
 	struct ath12k_mlo_dp_umac_reset mlo_umac_reset;
 	struct completion umac_reset_complete;
 	bool trigger_umac_reset;
+	struct dp_rx_fst *fst;
 };
 
 /* Master structure to hold the hw data which may be used in core module */
diff --git a/drivers/net/wireless/ath/ath12k/dp_rx.c b/drivers/net/wireless/ath/ath12k/dp_rx.c
index ca08d81..a23cd77 100644
--- a/drivers/net/wireless/ath/ath12k/dp_rx.c
+++ b/drivers/net/wireless/ath/ath12k/dp_rx.c
@@ -5859,3 +5859,86 @@ void ath12k_dp_rx_fst_detach(struct ath12k_base *ab, struct dp_rx_fst *fst)
 
 	ath12k_info(ab, "Rx FST detach successful");
 }
+
+void ath12k_dp_rx_flow_dump_flow_entry(struct ath12k_base *ab,
+				       struct dp_rx_fst *fst,
+				       struct rx_flow_info *flow_info)
+{
+	ath12k_info(ab, "Dest IP address %x:%x:%x:%x",
+		    flow_info->flow_tuple_info.dest_ip_127_96,
+		    flow_info->flow_tuple_info.dest_ip_95_64,
+		    flow_info->flow_tuple_info.dest_ip_63_32,
+		    flow_info->flow_tuple_info.dest_ip_31_0);
+	ath12k_info(ab, "Source IP address %x:%x:%x:%x",
+		    flow_info->flow_tuple_info.src_ip_127_96,
+		    flow_info->flow_tuple_info.src_ip_95_64,
+		    flow_info->flow_tuple_info.src_ip_63_32,
+		    flow_info->flow_tuple_info.src_ip_31_0);
+	ath12k_info(ab, "Dest port %u, Src Port %u, Protocol %u",
+		    flow_info->flow_tuple_info.dest_port,
+		    flow_info->flow_tuple_info.src_port,
+		    flow_info->flow_tuple_info.l4_protocol);
+}
+
+u32 ath12k_dp_rx_flow_compute_flow_hash(struct ath12k_base *ab,
+					struct dp_rx_fst *fst,
+					struct rx_flow_info *rx_flow_info,
+					struct hal_rx_flow *flow)
+{
+	memcpy(&flow->tuple_info, &rx_flow_info->flow_tuple_info,
+	       sizeof(struct hal_flow_tuple_info));
+
+	return ath12k_hal_flow_toeplitz_hash(ab, fst->hal_rx_fst, &flow->tuple_info);
+}
+
+static inline struct dp_rx_fse *
+ath12k_dp_rx_flow_get_fse(struct dp_rx_fst *fst, u32 flow_hash)
+{
+	struct dp_rx_fse *fse;
+	u32 idx = ath12k_hal_rx_get_trunc_hash(fst->hal_rx_fst, flow_hash);
+
+	fse = fst->base;
+	return &fse[idx];
+}
+
+struct dp_rx_fse *
+ath12k_dp_rx_flow_find_entry_by_tuple(struct ath12k_base *ab,
+				      struct dp_rx_fst *fst,
+				      struct rx_flow_info *flow_info,
+				      struct hal_rx_flow *flow)
+{
+	u32 flow_hash;
+	u32 flow_idx;
+	int status;
+
+	flow_hash = ath12k_dp_rx_flow_compute_flow_hash(ab, fst, flow_info, flow);
+
+	status = ath12k_hal_rx_find_flow_from_tuple(ab, fst->hal_rx_fst,
+						    flow_hash,
+						    &flow_info->flow_tuple_info,
+						    &flow_idx);
+	if (status != 0) {
+		ath12k_err(ab, "Could not find tuple with hash %u", flow_hash);
+		ath12k_dp_rx_flow_dump_flow_entry(ab, fst, flow_info);
+		return NULL;
+	}
+
+	return ath12k_dp_rx_flow_get_fse(fst, flow_idx);
+}
+
+ssize_t ath12k_dp_dump_fst_table(struct ath12k_base *ab, char *buf, int size)
+{
+	struct dp_rx_fst *fst = ab->ag->fst;
+	int len = 0;
+
+	if (!fst) {
+		ath12k_warn(ab, "FST table is NULL\n");
+		return -ENODEV;
+	}
+
+	len += scnprintf(buf + len, size - len,
+			 "Number of entries in FST table: %d\n", fst->num_entries);
+	len += ath12k_hal_rx_dump_fst_table(fst->hal_rx_fst, buf + len, size - len);
+
+	return len;
+}
diff --git a/drivers/net/wireless/ath/ath12k/hal_rx.h b/drivers/net/wireless/ath/ath12k/hal_rx.h
index 04968b6..b0aba6b 100644
--- a/drivers/net/wireless/ath/ath12k/hal_rx.h
+++ b/drivers/net/wireless/ath/ath12k/hal_rx.h
@@ -1349,4 +1349,14 @@ void ath12k_hal_rx_reo_ent_paddr_get(struct ath12k_base *ab,
 				     dma_addr_t *paddr, u32 *cookie);
 struct hal_rx_fst *ath12k_hal_rx_fst_attach(struct ath12k_base *ab);
 void ath12k_hal_rx_fst_detach(struct ath12k_base *ab, struct hal_rx_fst *fst);
+u32 ath12k_hal_rx_get_trunc_hash(struct hal_rx_fst *fst, u32 hash);
+u32 ath12k_hal_flow_toeplitz_hash(struct ath12k_base *ab, struct hal_rx_fst *fst,
+				  struct hal_flow_tuple_info *tuple_info);
+int ath12k_hal_rx_find_flow_from_tuple(struct ath12k_base *ab,
+				       struct hal_rx_fst *fst,
+				       u32 flow_hash,
+				       void *flow_tuple_info,
+				       u32 *flow_idx);
+ssize_t ath12k_hal_rx_dump_fst_table(struct hal_rx_fst *fst, char *buf,
+				     int size);
 #endif
-- 
2.34.1

