From 82dc15d7a9cb04ffe3f70283defe4b48f96ddc8f Mon Sep 17 00:00:00 2001
From: Maharaja Kennadyrajan <quic_mkenna@quicinc.com>
Date: Tue, 23 Jan 2024 11:43:05 +0530
Subject: [PATCH] wifi: ath12k: Handle STA state machine in assign vif chanctx
 for STA mode

The STA state machine is handled for STA mode in the
assign vif chanctx ops in the driver.
This causes the firmware crash due the peer is deleted before
the peer assoc command in the unassign vif chanctx ops.
Hence, fix this issue by handling the STA state machine
for STA mode.

Signed-off-by: Maharaja Kennadyrajan <quic_mkenna@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/core.h |  1 +
 drivers/net/wireless/ath/ath12k/mac.c  | 35 ++++++++++++++++++++++++--
 2 files changed, 34 insertions(+), 2 deletions(-)

Index: backports-6.5-rc3/drivers/net/wireless/ath/ath12k/core.h
===================================================================
--- backports-6.5-rc3.orig/drivers/net/wireless/ath/ath12k/core.h
+++ backports-6.5-rc3/drivers/net/wireless/ath/ath12k/core.h
@@ -502,6 +502,7 @@ struct ath12k_vif {
 	struct dentry *debugfs_primary_link;
 #endif /* CPTCFG_ATH12K_DEBUGFS */
 	bool mcast_to_ucast_en;
+	bool chanctx_peer_del_done;
  };
 
 struct ath12k_vif_iter {
Index: backports-6.5-rc3/drivers/net/wireless/ath/ath12k/mac.c
===================================================================
--- backports-6.5-rc3.orig/drivers/net/wireless/ath/ath12k/mac.c
+++ backports-6.5-rc3/drivers/net/wireless/ath/ath12k/mac.c
@@ -13356,9 +13356,13 @@ ath12k_mac_op_assign_vif_chanctx(struct
 	struct ath12k_base *ab;
 	struct ath12k_vif *ahvif = (void *)vif->drv_priv;
 	struct ath12k_link_vif *arvif;
+	struct ieee80211_sta *sta;
+	struct ath12k_sta *ahsta;
+	struct ath12k_link_sta *arsta;
 	int ret;
 	struct ath12k_wmi_peer_create_arg param;
 	enum ieee80211_ap_reg_power power_type;
+	enum ieee80211_sta_state state, prev_state;
 
 	u8 link_id = link_conf->link_id;
 
@@ -13502,6 +13506,32 @@ ath12k_mac_op_assign_vif_chanctx(struct
 		}
 	}
 
+	if (!ab->hw_params->vdev_start_delay &&
+	    ahvif->vdev_type == WMI_VDEV_TYPE_STA && ahvif->chanctx_peer_del_done) {
+		rcu_read_lock();
+		sta = ieee80211_find_sta(vif, vif->cfg.ap_addr);
+		if (!sta) {
+			ath12k_warn(ar->ab, "failed to find station entry for bss vdev\n");
+			rcu_read_unlock();
+			goto out;
+		}
+
+		ahsta = ath12k_sta_to_ahsta(sta);
+		arsta = &ahsta->deflink;
+		rcu_read_unlock();
+
+		mutex_unlock(&ar->conf_mutex);
+		mutex_unlock(&ah->conf_mutex);
+		prev_state = arsta->state;
+		for (state = IEEE80211_STA_NOTEXIST; state < prev_state;
+		     state++)
+			ath12k_mac_update_sta_state(ar->ah->hw, arvif->ahvif->vif, sta,
+						    state, (state + 1));
+		mutex_lock(&ah->conf_mutex);
+		mutex_lock(&ar->conf_mutex);
+		ahvif->chanctx_peer_del_done = false;
+	}
+
 	if (ahvif->vdev_type == WMI_VDEV_TYPE_MONITOR) {
 		ret = ath12k_mac_monitor_start(ar);
 		if (ret)
@@ -13714,14 +13744,16 @@ stop_primary:
 		if ((ab->hw_params->vdev_start_delay && !sta && !peer->sta) ||
 		     !ab->hw_params->vdev_start_delay) {
 			ret = ath12k_peer_delete(ar, arvif->vdev_id, arvif->bssid);
-			if (ret)
+			if (ret) {
 				ath12k_warn(ar->ab,
 					    "failed to delete peer %pM for vdev %d: %d\n",
 					    arvif->bssid, arvif->vdev_id, ret);
-			else
+			} else {
 				ath12k_dbg(ar->ab, ATH12K_DBG_MAC,
 					   "mac removed peer %pM  vdev %d\n",
 					   arvif->bssid, arvif->vdev_id);
+				ahvif->chanctx_peer_del_done = true;
+			}
 		}
 	}
 
