From 634a9ac8cd1d9ce74f9185bf376d34f2b3cc1a0e Mon Sep 17 00:00:00 2001
From: Hari Chandrakanthan <quic_haric@quicinc.com>
Date: Thu, 8 Feb 2024 16:06:58 +0530
Subject: [PATCH] wifi: mac80211: add limit to tx pending queue

When driver calls ieee80211_stop_queues() to stop the incoming packets,
mac80211 queues the incoming data packets in pending queue.

Since there is no queue length limit, high data traffic can significantly
increase the queue size and it can lead to high memory consumption.

Add a queue length threshold and drop the incoming packets if the queue length
reaches the threshold.

Signed-off-by: Hari Chandrakanthan <quic_haric@quicinc.com>
---
 net/mac80211/tx.c | 12 ++++++++++++
 1 file changed, 12 insertions(+)

--- a/net/mac80211/tx.c
+++ b/net/mac80211/tx.c
@@ -1760,6 +1760,16 @@ static bool ieee80211_tx_frags(struct ie
 				 * later transmission from the tx-pending
 				 * tasklet when the queue is woken again.
 				 */
+				if ((skb_queue_len(&local->pending[q]) +
+				    skb_queue_len(skbs)) >= IEEE80211_PENDING_QUEUE_MAX_LENGTH) {
+					spin_unlock_irqrestore(
+						&local->queue_stop_reason_lock,
+						flags);
+					ieee80211_purge_tx_queue(&local->hw,
+								 skbs);
+					return true;
+				}
+
 				if (txpending)
 					skb_queue_splice_init(skbs,
 							      &local->pending[q]);
@@ -4688,6 +4698,12 @@ static bool __ieee80211_tx_8023(struct i
 
 	if (local->queue_stop_reasons[q] ||
 	    (!txpending && !skb_queue_empty(&local->pending[q]))) {
+		if (skb_queue_len(&local->pending[q]) >=
+		    (IEEE80211_PENDING_QUEUE_MAX_LENGTH -1)) {
+			ieee80211_free_txskb(&local->hw, skb);
+			spin_unlock_irqrestore(&local->queue_stop_reason_lock, flags);
+			return true;
+		}
 		if (txpending)
 			skb_queue_head(&local->pending[q], skb);
 		else
@@ -4902,6 +4918,13 @@ void ieee80211_8023_xmit_ap(struct ieee8
 	spin_lock_irqsave(&local->queue_stop_reason_lock, flags);
 
 	if (local->queue_stop_reasons[q] || !skb_queue_empty(&local->pending[q])) {
+		if (skb_queue_len(&local->pending[q]) >=
+		    (IEEE80211_PENDING_QUEUE_MAX_LENGTH -1)) {
+			ieee80211_free_txskb(&local->hw, skb);
+			spin_unlock_irqrestore(&local->queue_stop_reason_lock, flags);
+			return;
+		}
+
 		skb_queue_tail(&local->pending[q], skb);
 		spin_unlock_irqrestore(&local->queue_stop_reason_lock, flags);
 		return;
--- a/net/mac80211/ieee80211_i.h
+++ b/net/mac80211/ieee80211_i.h
@@ -47,6 +47,8 @@ extern const struct cfg80211_ops mac8021
 struct ieee80211_local;
 struct ieee80211_mesh_fast_tx;
 
+#define IEEE80211_PENDING_QUEUE_MAX_LENGTH 5000
+
 /* Maximum number of broadcast/multicast frames to buffer when some of the
  * associated stations are using power saving. */
 #define AP_MAX_BC_BUFFER 128
--- a/net/mac80211/util.c
+++ b/net/mac80211/util.c
@@ -543,6 +543,10 @@ void ieee80211_add_pending_skb(struct ie
 	}
 
 	spin_lock_irqsave(&local->queue_stop_reason_lock, flags);
+	if (skb_queue_len(&local->pending[queue]) >=
+			(IEEE80211_PENDING_QUEUE_MAX_LENGTH -1))
+		ieee80211_free_txskb(&local->hw, skb_dequeue(&local->pending[queue]));
+
 	__ieee80211_stop_queue(hw, queue, IEEE80211_QUEUE_STOP_REASON_SKB_ADD,
 			       false);
 	__skb_queue_tail(&local->pending[queue], skb);
--- a/net/mac80211/rx.c
+++ b/net/mac80211/rx.c
@@ -288,6 +288,10 @@ static void __ieee80211_queue_skb_to_ifa
 		status->link_valid = 0;
 	}
 
+	if (skb_queue_len(&sdata->skb_queue) >=
+			(IEEE80211_PENDING_QUEUE_MAX_LENGTH -1))
+		dev_kfree_skb(skb_dequeue(&sdata->skb_queue));
+
 	skb_queue_tail(&sdata->skb_queue, skb);
 	wiphy_work_queue(sdata->local->hw.wiphy, &sdata->work);
 	if (sta)
