From ef663d710773f87a74a9c1be6b3665462d927dbf Mon Sep 17 00:00:00 2001
From: Gautham Kumar Senthilkumaran <quic_gauthamk@quicinc.com>
Date: Wed, 6 Mar 2024 23:12:40 +0530
Subject: [PATCH] wifi: cfg80211: Enabling the SLO in non-single wiphy architecture

Bringup support for SLO mode with non-single wiphy architecture.
With non-single wiphy archtecture, all wiphy will hold only one radio interface for each
ath12k radio group.So, existing condition is changed during the ath12k mac hw register.
In non-single wiphy architecture, there is no support for multi-link because each ath12k group will hold
only one radio interface instead of having all three  radio interface in same group.
But still AP needs MLO capable flag to be true for sending the EHT capabilities in the frames.

Signed-off-by: Gautham Kumar Senthilkumaran <quic_gauthamk@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/core.c | 4 ++--
 drivers/net/wireless/ath/ath12k/qmi.c  | 4 ----
 2 files changed, 2 insertions(+), 6 deletions(-)

--- a/drivers/net/wireless/ath/ath12k/core.c
+++ b/drivers/net/wireless/ath/ath12k/core.c
@@ -1476,7 +1476,7 @@ static int ath12k_core_mlo_teardown(stru
 	int ret;
 	int i;
 
-	if (!ag->mlo_capable)
+	if (!(ag->mlo_capable && ag->num_chip > 1))
 		return 0;
 
 	for (i = ag->num_hw - 1; i >= 0; i--) {
@@ -1499,7 +1499,7 @@ static int ath12k_core_mlo_setup(struct
 	int ret;
 	int i;
 
-	if (!ag->mlo_capable)
+	if (!(ag->mlo_capable && ag->num_chip > 1))
 		return 0;
 
 	for (i = 0; i < ag->num_hw; i++) {
--- a/drivers/net/wireless/ath/ath12k/qmi.c
+++ b/drivers/net/wireless/ath/ath12k/qmi.c
@@ -3097,8 +3097,7 @@ static int ath12k_qmi_fill_mlo_host_caps
 		}
 	}
 
-	/* Disable MLO capable if there is no Multi-link in a group */
-	if (link_id <= 1)
+	if (link_id <= 0)
 		ag->mlo_capable = false;
 
 	req->mlo_chip_info_valid = true;
--- a/drivers/net/wireless/ath/ath12k/mac.c
+++ b/drivers/net/wireless/ath/ath12k/mac.c
@@ -16926,7 +16926,7 @@ static int ath12k_mac_hw_register(struct
 		goto err_cleanup;
 	}
 
-        if (ah->num_radio > 1) {
+        if (ah->num_radio >= 1 && ag->mlo_capable) {
                 ret = ath12k_alloc_per_hw_chans(ah);
                 if (ret)
                         goto err_cleanup;
