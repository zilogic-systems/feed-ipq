From 4e7cbfd7cbad45740cd58f13b6c1395c56fbc4ad Mon Sep 17 00:00:00 2001
From: Nandha Kishore Easwaran <quic_nandhaki@quicinc.com>
Date: Thu, 7 Mar 2024 12:32:16 +0530
Subject: [PATCH 3/3] wifi: ath12k: Enable FSE based packet routing

1) Enable FSE based packet routing by setting routing mode.
2) Add ppe_register and unregister as part of fse_attach and detach.

Signed-off-by: Nandha Kishore Easwaran <quic_nandhaki@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/dp_rx.c |  2 ++
 drivers/net/wireless/ath/ath12k/ppe.c   | 11 +++++++++--
 drivers/net/wireless/ath/ath12k/wmi.c   | 12 ++++++++++--
 drivers/net/wireless/ath/ath12k/wmi.h   |  3 ++-
 4 files changed, 23 insertions(+), 5 deletions(-)

diff --git a/drivers/net/wireless/ath/ath12k/dp_rx.c b/drivers/net/wireless/ath/ath12k/dp_rx.c
index 161f331..f04af3d 100644
--- a/drivers/net/wireless/ath/ath12k/dp_rx.c
+++ b/drivers/net/wireless/ath/ath12k/dp_rx.c
@@ -5838,6 +5838,7 @@ struct dp_rx_fst *ath12k_dp_rx_fst_attach(struct ath12k_base *ab)
 	}
 
 	spin_lock_init(&fst->fst_lock);
+	ath12k_dp_rx_ppe_fse_register();
 	ath12k_info(ab, "Rx FST attach successful\n");
 
 	return fst;
@@ -5845,6 +5846,7 @@ struct dp_rx_fst *ath12k_dp_rx_fst_attach(struct ath12k_base *ab)
 
 void ath12k_dp_rx_fst_detach(struct ath12k_base *ab, struct dp_rx_fst *fst)
 {
+	ath12k_dp_rx_ppe_fse_unregister();
 	if (fst) {
 		ath12k_hal_rx_fst_detach(ab, fst->hal_rx_fst);
 		kfree(fst->base);
diff --git a/drivers/net/wireless/ath/ath12k/ppe.c b/drivers/net/wireless/ath/ath12k/ppe.c
index 100393a..d836ad8 100644
--- a/drivers/net/wireless/ath/ath12k/ppe.c
+++ b/drivers/net/wireless/ath/ath12k/ppe.c
@@ -522,7 +522,8 @@ void ath12k_dp_peer_ppeds_route_setup(struct ath12k *ar, struct ath12k_link_vif
 	struct ath12k_link_vif *primary_link_arvif;
 	struct ath12k_vif *ahvif = arvif->ahvif;
 	u32 service_code = PPE_DRV_SC_SPF_BYPASS;
-	int ppe_routing_enable = 1;
+	bool ppe_routing_enable = true;
+	bool use_ppe = true;
 	u32 priority_valid = 0, src_info = arvif->ppe_vp_num;
 	struct ath12k_sta *ahsta = arsta->ahsta;
 	struct ieee80211_sta *sta;
@@ -530,6 +531,12 @@ void ath12k_dp_peer_ppeds_route_setup(struct ath12k *ar, struct ath12k_link_vif
 	if (!g_bonded_interface_model)
 		return;
 
+	/* If FSE is enabled, then let flow rule take decision of routing the
+	 * packet to DS or host.
+	 */
+	if (ab->hw_params->support_fse && ath12k_fse_enable)
+		use_ppe = false;
+
 	sta = container_of((void *)ahsta, struct ieee80211_sta, drv_priv);
 
 	/* In SLO AP, DS is not supported */
@@ -564,7 +571,7 @@ void ath12k_dp_peer_ppeds_route_setup(struct ath12k *ar, struct ath12k_link_vif
 
 	ath12k_wmi_config_peer_ppeds_routing(ar, arsta->addr, arvif->vdev_id,
 			service_code, priority_valid, src_info,
-			ppe_routing_enable);
+			ppe_routing_enable, use_ppe);
 }
 
 static int ath12k_dp_ppeds_alloc_ppe_vp_profile(struct ath12k_base *ab,
diff --git a/drivers/net/wireless/ath/ath12k/wmi.c b/drivers/net/wireless/ath/ath12k/wmi.c
index c8179b4..ffb9985 100644
--- a/drivers/net/wireless/ath/ath12k/wmi.c
+++ b/drivers/net/wireless/ath/ath12k/wmi.c
@@ -2065,7 +2065,8 @@ int ath12k_wmi_send_peer_delete_cmd(struct ath12k *ar,
 int ath12k_wmi_config_peer_ppeds_routing(struct ath12k *ar,
 					 const u8 *peer_addr, u8 vdev_id,
 					 u32 service_code, u32 priority_valid,
-					 u32 src_info, bool ppe_routing_enable)
+					 u32 src_info, bool ppe_routing_enable,
+					 bool use_ppe)
 {
 	struct ath12k_wmi_pdev *wmi = ar->wmi;
 	struct sk_buff *skb;
@@ -2082,7 +2083,14 @@ int ath12k_wmi_config_peer_ppeds_routing(struct ath12k *ar,
 
 	ether_addr_copy(cmd->peer_macaddr.addr, peer_addr);
 	cmd->vdev_id = cpu_to_le32(vdev_id);
-	cmd->ppe_routing_enable = cpu_to_le32(ppe_routing_enable);
+	if (ppe_routing_enable) {
+		if (use_ppe)
+			cmd->ppe_routing_enable = WMI_AST_USE_PPE_ENABLED;
+		else
+			cmd->ppe_routing_enable = WMI_AST_USE_PPE_DISABLED;
+	} else {
+		cmd->ppe_routing_enable = WMI_PPE_ROUTING_DISABLED;
+	}
 	cmd->service_code = cpu_to_le32(service_code);
 	cmd->priority_valid = cpu_to_le32(priority_valid);
 	cmd->src_info = cpu_to_le32(src_info);
diff --git a/drivers/net/wireless/ath/ath12k/wmi.h b/drivers/net/wireless/ath/ath12k/wmi.h
index 893421d..5b840c1 100644
--- a/drivers/net/wireless/ath/ath12k/wmi.h
+++ b/drivers/net/wireless/ath/ath12k/wmi.h
@@ -8542,7 +8542,8 @@ int ath12k_wmi_set_peer_intra_bss_cmd(struct ath12k *ar,  u32 vdev_id, const u8
 int ath12k_wmi_config_peer_ppeds_routing(struct ath12k *ar,
 					 const u8 *peer_addr, u8 vdev_id,
 					 u32 service_code, u32 priority_valid,
-					 u32 src_info, bool ppe_routing_enable);
+					 u32 src_info, bool ppe_routing_enable,
+					 bool use_ppe);
 #endif
 void ath12k_wmi_peer_chan_width_switch_work(struct work_struct *work);
 int ath12k_wmi_set_latency(struct ath12k *ar, struct ath12k_latency_params *params);
-- 
2.34.1

