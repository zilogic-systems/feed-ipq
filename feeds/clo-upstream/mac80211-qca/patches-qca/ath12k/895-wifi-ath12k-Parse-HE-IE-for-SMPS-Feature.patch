From 05bf826eef347b413da984f505b79369421e1ecf Mon Sep 17 00:00:00 2001
From: Thomas Wu <quic_wthomas@quicinc.com>
Date: Mon, 26 Feb 2024 11:33:19 -0800
Subject: [PATCH] wifi: ath12k: Parse HE IE for SMPS Feature

Connected stations switching from static SMPS
to Dynamic SMPS will not see their HT Action
Frames honored.

This is due to the fact that ath12k_setup_peer_smps()
improperly does not take account of the HE IE SMPS field
in ath12k_peer_assoc_h_smps(), disabling Dynamic SMPS.

To address the problem, code to parse the HE IE SMPS
field and act accordingly. This change will turn on
Dynamic SMPS if found.

Signed-off-by: Thomas Wu <quic_wthomas@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/mac.c | 21 +++++++++++++++++++--
 1 file changed, 19 insertions(+), 2 deletions(-)

diff --git a/drivers/net/wireless/ath/ath12k/mac.c b/drivers/net/wireless/ath/ath12k/mac.c
index 1fdc3bb..7e80ef0 100644
--- a/drivers/net/wireless/ath/ath12k/mac.c
+++ b/drivers/net/wireless/ath/ath12k/mac.c
@@ -3435,6 +3435,7 @@ static void ath12k_peer_assoc_h_smps(struct ath12k_link_sta *arsta,
 				     struct ath12k_wmi_peer_assoc_arg *arg)
 {
 	const struct ieee80211_sta_ht_cap *ht_cap;
+	const struct ieee80211_sta_he_cap *he_cap;
 	int smps;
 	struct ath12k_sta *ahsta = arsta->ahsta;
 	struct ieee80211_sta *sta;
@@ -3450,8 +3451,9 @@ static void ath12k_peer_assoc_h_smps(struct ath12k_link_sta *arsta,
 	}
 
 	ht_cap = &link_sta->ht_cap;
+	he_cap = &link_sta->he_cap;
 
-	if (!ht_cap->ht_supported && !link_sta->he_6ghz_capa.capa)
+	if (!ht_cap->ht_supported && !he_cap->has_he && !link_sta->he_6ghz_capa.capa)
 		return;
 
 	if (ht_cap->ht_supported) {
@@ -3462,6 +3464,12 @@ static void ath12k_peer_assoc_h_smps(struct ath12k_link_sta *arsta,
 				 le16_to_cpu(link_sta->he_6ghz_capa.capa));
 	}
 
+	if (he_cap->has_he) {
+		if (he_cap->he_cap_elem.mac_cap_info[5] & IEEE80211_HE_MAC_CAP5_HE_DYNAMIC_SM_PS) {
+			smps = WLAN_HT_CAP_SM_PS_DYNAMIC;
+		}
+	}
+
 	switch (smps) {
 	case WLAN_HT_CAP_SM_PS_STATIC:
 		arg->static_mimops_flag = true;
@@ -3880,11 +3888,12 @@ static void ath12k_peer_assoc_prepare(struct ath12k *ar,
 static int ath12k_setup_peer_smps(struct ath12k *ar, struct ath12k_link_vif *arvif,
 				  const u8 *addr,
 				  const struct ieee80211_sta_ht_cap *ht_cap,
+				  const struct ieee80211_sta_he_cap *he_cap,
 				  u16 he_6ghz_capa)
 {
 	int smps;
 
-	if (!ht_cap->ht_supported && !he_6ghz_capa)
+	if (!ht_cap->ht_supported && !he_6ghz_capa && !he_cap->has_he)
 		return 0;
 
 	if (ht_cap->ht_supported) {
@@ -3894,6 +3903,12 @@ static int ath12k_setup_peer_smps(struct ath12k *ar, struct ath12k_link_vif *arv
 		smps = FIELD_GET(IEEE80211_HE_6GHZ_CAP_SM_PS, he_6ghz_capa);
 	}
 
+	if (he_cap->has_he) {
+		if (he_cap->he_cap_elem.mac_cap_info[5] & IEEE80211_HE_MAC_CAP5_HE_DYNAMIC_SM_PS) {
+			smps = WLAN_HT_CAP_SM_PS_DYNAMIC;
+		}
+	}
+
 	if (smps >= ARRAY_SIZE(ath12k_smps_map))
 		return -EINVAL;
 
@@ -4177,6 +4192,7 @@ void ath12k_bss_assoc(struct ath12k *ar,
 
 	ret = ath12k_setup_peer_smps(ar, arvif, bss_conf->bssid,
 				     &ap_sta->link[link_id]->ht_cap,
+				     &ap_sta->link[link_id]->he_cap,
 				     le16_to_cpu(he_6ghz_capa));
 	if (ret) {
 		ath12k_warn(ar->ab, "failed to setup peer SMPS for vdev %d: %d\n",
@@ -6552,6 +6568,7 @@ static int ath12k_station_assoc(struct ath12k *ar,
 
 	ret = ath12k_setup_peer_smps(ar, arvif, arsta->addr,
 				     &ht_cap,
+				     &link_sta->he_cap,
 				     he_6ghz_capa);
 	if (ret) {
 		ath12k_warn(ar->ab, "failed to setup peer SMPS for vdev %d: %d\n",
-- 
2.25.1

