From a5a8736b9119dff058940ad6230f00810bb96054 Mon Sep 17 00:00:00 2001
From: Pavankumar Nandeshwar <quic_pnandesh@quicinc.com>
Date: Wed, 15 May 2024 11:04:30 +0530
Subject: [PATCH] QSDK: wifi: ath12k: Create ath_dp_accel_cfg.h file for ecm
 module to access

DS feature requires ath_dp_accel_cfg.h to be used by both nss-ecm and ath module.
This file is created by ath module and copy to staging dir to get accessed by
nss-ecm module

Patch-depdendency: None

Signed-off-by: Pavankumar Nandeshwar <quic_pnandesh@quicinc.com>
---
 include/ath/ath_dp_accel_cfg.h | 54 ++++++++++++++++++++++++++++++++++
 1 file changed, 54 insertions(+)
 create mode 100644 include/ath/ath_dp_accel_cfg.h

diff --git a/include/ath/ath_dp_accel_cfg.h b/include/ath/ath_dp_accel_cfg.h
new file mode 100644
index 0000000..e0924d0
--- /dev/null
+++ b/include/ath/ath_dp_accel_cfg.h
@@ -0,0 +1,54 @@
+/* SPDX-License-Identifier: BSD-3-Clause-Clear */
+/*
+ * Copyright (c) 2024 Qualcomm Innovation Center, Inc. All rights reserved.
+ */
+#ifndef ATH_DP_ACCEL_CFG_H
+#define ATH_DP_ACCEL_CFG_H
+#include <linux/netdevice.h>
+
+/**
+ * struct ath_dp_accel_cfg_ops - dp accelerator configuraton ops
+ * @ppeds_get_node_id: fetch ds node id from ath driver for given peer mac
+ *
+ */
+struct ath_dp_accel_cfg_ops {
+	bool (*ppeds_get_node_id)(struct net_device *dst_dev,
+				  const u8 *peer_mac, u8 *node_id);
+};
+
+/**
+ * struct ath_dp_accel_cfg - config retrieval buffer
+ * @in_dest_dev: input parameter netdev handle
+ * @in_dest_mac: input parameter peer mac address
+ * @out_ppe_ds_node_id: output parameter ds node id
+ *
+ */
+struct ath_dp_accel_cfg {
+	struct net_device *in_dest_dev;
+	u8 *in_dest_mac;
+	u32 out_ppe_ds_node_id;
+};
+
+/**
+ * ath_dp_accel_cfg_ops_callback_register() - register accel cfg ops
+ * @ath_cb: accel_cfg_ops to register
+ *
+ * Return: 0 - success, failure otherwise
+ */
+int ath_dp_accel_cfg_ops_callback_register(const struct ath_dp_accel_cfg_ops *ath_cb);
+
+/**
+ * ath_dp_accel_cfg_ops_callback_unregister() - unregister accel cfg ops
+ *
+ * Return: None
+ */
+void ath_dp_accel_cfg_ops_callback_unregister(void);
+
+/**
+ * ath_dp_accel_cfg_fetch_ds_node_id() - Retrieve ds node id
+ * @ds_info: info required to fetch the node id
+ *
+ * Return: true - success, false - failure
+ */
+bool ath_dp_accel_cfg_fetch_ds_node_id(struct ath_dp_accel_cfg *info);
+#endif
-- 
2.34.1

