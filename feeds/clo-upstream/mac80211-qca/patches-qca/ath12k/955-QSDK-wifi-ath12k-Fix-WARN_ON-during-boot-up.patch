From 7ec04ac9b08d7b3c4c1c0be93dcf5f2de5df6fbc Mon Sep 17 00:00:00 2001
From: Aaradhana Sahu <quic_aarasahu@quicinc.com>
Date: Fri, 31 May 2024 16:43:38 +0530
Subject: [PATCH] QSDK: wifi: ath12k: Fix WARN_ON during boot-up

Below WARN_ON is seen during boot-up and leads to crash:

  wiphy_register+0x1f8/0xa90 [cfg80211]
  ieee80211_register_hw+0xb54/0xc94 [mac80211]
  ath12k_mac_register+0xfc8/0x11e0 [ath12k]
  ath12k_core_qmi_firmware_ready+0x7b4/0xdc8 [ath12k]
  ath12k_qmi_qdss_trace_mem_info_send_sync+0x7a4/0x98c [ath12k]
  process_one_work+0x1c4/0x29c
  worker_thread+0x24c/0x2ec
  kthread+0x104/0x114
  ret_from_fork+0x10/0x20

This issue is easily seen in MLO case on non-calibrated and
OTP fused boards. In ath12k_mac_hw_register()
we iterate over ah->num_radio which is more than 1 for MLO.
Here we are overwriting mac_addr with ab_dflt->mac_addr, and
use assign this mac_addr to hw->wiphy->perm_addr.
In ath12k_alloc_per_hw_mac_addr() we assign ar->mac_addr
to hw->wiphy->addresses.

Inside wiphy_register(), we compare ab_dflt->mac_addr
(hw->wiphy->perm_addr) and first ar mac address
(hw->wiphy->addresses[0].addr), if these addresses are
different WARN_ON is triggered and this leads to boot-up
crash. But these addresses may be different when we get
WMI_READY_EVENTID.

To resolve this issue we should not overwrite mac_addr
in ath12k_mac_hw_register().

Patch-dependency: none

Signed-off-by: Aaradhana Sahu <quic_aarasahu@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/mac.c | 5 ++---
 1 file changed, 2 insertions(+), 3 deletions(-)

diff --git a/drivers/net/wireless/ath/ath12k/mac.c b/drivers/net/wireless/ath/ath12k/mac.c
index 572a1a8..56e0d08 100644
--- a/drivers/net/wireless/ath/ath12k/mac.c
+++ b/drivers/net/wireless/ath/ath12k/mac.c
@@ -17152,12 +17152,11 @@ static int ath12k_mac_hw_register(struct ath12k_hw *ah)
 
 		/* In non-MLO/SLO case ah->num_radio is 1, and ar->mac_addr is
 		 * assigned to ieee80211_hw. In MLO with ah->num_radio > 1,
-		 * ab_dflt->mac_addr is assigned to ieee80211_hw.
+		 * in that case we take first ar mac_addr and assign to
+		 * ieee80211_hw.
 		 */
 		if (i == 0)
 			mac_addr = ar->mac_addr;
-		else
-			mac_addr = ab_dflt->mac_addr;
 
 		ar++;
 	}
-- 
2.34.1

