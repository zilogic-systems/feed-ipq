From 83044e1a99521ff6009ff1abbb4c1d1f038b7aba Mon Sep 17 00:00:00 2001
From: Hariharan Basuthkar <quic_hbasuthk@quicinc.com>
Date: Mon, 10 Jun 2024 02:36:05 +0530
Subject: [PATCH] wifi: ath12k: Add global AFC configs

Configure afc_support, afc_disable_timer_check and
afc_disable_req_id_check in the WMI_INIT_CMD with the global variables
ath12k_afc_test_enabled, ath12k_afc_disable_timer_check and
ath12k_afc_disable_request_id_check respectively.

Patch dependency: 333-0020-mac80211-add-support-for-6G-channels-and-regulatory.patch
Tag: 6G_REGULATORY

Signed-off-by: Hariharan Basuthkar <quic_hbasuthk@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/reg.c |  5 +++++
 drivers/net/wireless/ath/ath12k/reg.h |  4 ++++
 drivers/net/wireless/ath/ath12k/wmi.c | 23 +++++++++++++++++++++++
 drivers/net/wireless/ath/ath12k/wmi.h |  7 +++++++
 4 files changed, 39 insertions(+)

diff --git a/drivers/net/wireless/ath/ath12k/reg.c b/drivers/net/wireless/ath/ath12k/reg.c
index 7d74e21..3e43485 100644
--- a/drivers/net/wireless/ath/ath12k/reg.c
+++ b/drivers/net/wireless/ath/ath12k/reg.c
@@ -18,6 +18,11 @@
 #define ETSI_WEATHER_RADAR_BAND_HIGH		5650
 #define ETSI_WEATHER_RADAR_BAND_CAC_TIMEOUT	600000
 
+/* These variables need to assigned to true for enabling Proxy AFC, else 0 */
+bool ath12k_afc_disable_timer_check = true;
+bool ath12k_afc_disable_req_id_check = true;
+bool ath12k_afc_test_enabled = true;
+
 static const struct ieee80211_regdomain ath12k_world_regd = {
 	.n_reg_rules = 3,
 	.alpha2 = "00",
diff --git a/drivers/net/wireless/ath/ath12k/reg.h b/drivers/net/wireless/ath/ath12k/reg.h
index 35f8a37..571163c 100644
--- a/drivers/net/wireless/ath/ath12k/reg.h
+++ b/drivers/net/wireless/ath/ath12k/reg.h
@@ -14,6 +14,10 @@ struct ath12k_base;
 struct ath12k;
 struct ath12k_afc_info;
 
+extern bool ath12k_afc_disable_timer_check;
+extern bool ath12k_afc_disable_req_id_check;
+extern bool ath12k_afc_test_enabled;
+
 /* DFS regdomains supported by Firmware */
 enum ath12k_dfs_region {
 	ATH12K_DFS_REG_UNSET,
diff --git a/drivers/net/wireless/ath/ath12k/wmi.c b/drivers/net/wireless/ath/ath12k/wmi.c
index 9898130..2ee7a9a 100644
--- a/drivers/net/wireless/ath/ath12k/wmi.c
+++ b/drivers/net/wireless/ath/ath12k/wmi.c
@@ -5986,6 +5986,21 @@ ath12k_wmi_copy_resource_config(struct ath12k_wmi_resource_config_params *wmi_cf
 	wmi_cfg->flags2 |= (tg_cfg->sawf & ath12k_sawf_enable) ?
 			   (WMI_RSRC_CFG_FLAGS2_SAWF_CONFIG_ENABLE_SET) : (0);
 #endif /* CPTCFG_ATH12K_SAWF */
+	if (tg_cfg->afc_support) {
+		wmi_cfg->host_service_flags &= ~(1 << WMI_RSRC_CFG_HOST_SUPPORT_LP_SP_MODE_BIT);
+		wmi_cfg->host_service_flags |= 1 << WMI_RSRC_CFG_HOST_SUPPORT_LP_SP_MODE_BIT;
+	}
+
+	if (tg_cfg->afc_disable_timer_check) {
+		wmi_cfg->host_service_flags &= ~(1 << WMI_RSRC_CFG_HOST_AFC_DIS_TIMER_CHECK_BIT);
+		wmi_cfg->host_service_flags |= 1 << WMI_RSRC_CFG_HOST_AFC_DIS_TIMER_CHECK_BIT;
+	}
+
+	if (tg_cfg->afc_disable_req_id_check) {
+		wmi_cfg->host_service_flags &= ~(1 << WMI_RSRC_CFG_HOST_AFC_DIS_REQ_ID_CHECK_BIT);
+		wmi_cfg->host_service_flags |= 1 << WMI_RSRC_CFG_HOST_AFC_DIS_REQ_ID_CHECK_BIT;
+	}
+
 	wmi_cfg->host_service_flags &= ~(1 << WMI_RSRC_CFG_HOST_SVC_FLAG_REG_CC_EXT_SUPPORT_BIT);
 	wmi_cfg->host_service_flags |= 1 << WMI_RSRC_CFG_HOST_SVC_FLAG_REG_CC_EXT_SUPPORT_BIT;
 	wmi_cfg->host_service_flags |= 1 << WMI_RSRC_CFG_HOST_SVC_FLAG_REO_QREF_SUPPORT_BIT;
@@ -5994,6 +6009,13 @@ ath12k_wmi_copy_resource_config(struct ath12k_wmi_resource_config_params *wmi_cf
 	wmi_cfg->ema_max_profile_period = tg_cfg->ema_max_profile_period;
 }
 
+void ath12k_set_afc_config(struct ath12k_wmi_resource_config_arg *config)
+{
+	config->afc_support = ath12k_afc_test_enabled;
+	config->afc_disable_timer_check = ath12k_afc_disable_timer_check;
+	config->afc_disable_req_id_check = ath12k_afc_disable_req_id_check;
+}
+
 static int ath12k_init_cmd_send(struct ath12k_wmi_pdev *wmi,
 				struct ath12k_wmi_init_cmd_arg *arg)
 {
@@ -6211,6 +6233,7 @@ int ath12k_wmi_cmd_init(struct ath12k_base *ab)
 	if (test_bit(WMI_TLV_SERVICE_RADAR_FLAGS_SUPPORT, ab->wmi_ab.svc_map))
 		arg.res_cfg.is_full_bw_nol_feature_supported = true;
 
+	ath12k_set_afc_config(&arg.res_cfg);
 	ab->hw_params->wmi_init(ab, &arg.res_cfg);
 
 	arg.num_mem_chunks = wmi_sc->num_mem_chunks;
diff --git a/drivers/net/wireless/ath/ath12k/wmi.h b/drivers/net/wireless/ath/ath12k/wmi.h
index e6c3b23..bfb3caf 100644
--- a/drivers/net/wireless/ath/ath12k/wmi.h
+++ b/drivers/net/wireless/ath/ath12k/wmi.h
@@ -2454,6 +2454,7 @@ enum wmi_tlv_service {
 	WMI_TLV_SERVICE_REG_CC_EXT_EVENT_SUPPORT = 281,
 	WMI_TLV_SERVICE_DCS_AWGN_INT_SUPPORT = 286,
 	WMI_TLV_SERVICE_BE = 289,
+	WMI_TLV_SERVICE_AFC_SUPPORT = 295,
 	WMI_TLV_SERVICE_SAWF_LEVEL0 = 311,
 	WMI_TLV_SERVICE_PKTLOG_DECODE_INFO_SUPPORT = 320,
 	WMI_TLV_SERVICE_PEER_METADATA_V1A_V1B_SUPPORT = 365,
@@ -2765,6 +2766,9 @@ struct ath12k_wmi_resource_config_arg {
 	u32 twt_ap_pdev_count;
 	u32 twt_ap_sta_count;
 	bool is_reg_cc_ext_event_supported;
+	u32 afc_support;
+	u32 afc_disable_timer_check;
+	u32 afc_disable_req_id_check;
 	u32 ema_max_vap_cnt;
 	u32 ema_max_profile_period;
 	u8  dp_peer_meta_data_ver;
@@ -2866,6 +2870,9 @@ struct wmi_init_cmd {
 #define WMI_RSRC_CFG_FLAG1_THREE_WAY_COEX_CONFIG_OVERRIDE_SUPPORT BIT(25)
 #define WMI_RSRC_CFG_FLAG1_BSS_CHANNEL_INFO_64	BIT(5)
 #define WMI_RSRC_CFG_FLAGS2_SAWF_CONFIG_ENABLE_SET	  BIT(13)
+#define WMI_RSRC_CFG_HOST_SUPPORT_LP_SP_MODE_BIT              7
+#define WMI_RSRC_CFG_HOST_AFC_DIS_TIMER_CHECK_BIT             8
+#define WMI_RSRC_CFG_HOST_AFC_DIS_REQ_ID_CHECK_BIT            9
 
 struct ath12k_wmi_resource_config_params {
 	__le32 tlv_header;
-- 
2.34.1

