From d6448c90a58b6e2f2edbd8ec15fa7a08e9f9263f Mon Sep 17 00:00:00 2001
From: Tamizh Chelvam Raja <quic_tamizhr@quicinc.com>
Date: Tue, 25 Jun 2024 23:52:05 +0530
Subject: [PATCH] wifi: ath12k: DP MSI changes for QCN6432

Previously, only 6 MSI used for all DP Rings. In ring masking, error
and mon rings are muxed with other DP TX/RX rings caused the uneven
CPU distribution. Fix this issue by allocating dedicated MSI for error
and mon rings and distribute the CPU properly.

Signed-off-by: Tamizh Chelvam Raja <quic_tamizhr@quicinc.com>
Signed-off-by: Thiraviyam Mariyappan <quic_tmariyap@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/hw.c   | 48 +++++++++++++++-----------
 drivers/net/wireless/ath/ath12k/pcic.c |  2 ++
 drivers/net/wireless/ath/ath12k/pcic.h |  4 +--
 3 files changed, 32 insertions(+), 22 deletions(-)

--- a/drivers/net/wireless/ath/ath12k/hw.c
+++ b/drivers/net/wireless/ath/ath12k/hw.c
@@ -1149,55 +1149,63 @@ static struct ath12k_hw_ring_mask ath12k
 	.tx  = {
 		ATH12K_TX_RING_MASK_0,
 		ATH12K_TX_RING_MASK_1,
-		ATH12K_TX_RING_MASK_2 | ATH12K_TX_RING_MASK_4,
+		ATH12K_TX_RING_MASK_2,
 		0, 0, 0, 0, 0, 0, 0, 0,
+		ATH12K_TX_RING_MASK_3,
+		0, 0, 0
 	},
 	.rx_mon_dest = {
-		0, 0,
+		0, 0, 0, 0, 0, 0, 0, 0,
 		ATH12K_RX_MON_RING_MASK_0,
 		ATH12K_RX_MON_RING_MASK_1,
 		ATH12K_RX_MON_RING_MASK_2,
-		0, 0, 0, 0, 0, 0, 0,
+		0, 0, 0, 0
 	},
 	.rx = {
-		0, 0, 0,
+		0, 0, 0, 0,
 		ATH12K_RX_RING_MASK_0,
 		ATH12K_RX_RING_MASK_1,
-		ATH12K_RX_RING_MASK_2 | ATH12K_RX_RING_MASK_3,
-		0, 0, 0, 0, 0, 0,
+		ATH12K_RX_RING_MASK_2,
+		ATH12K_RX_RING_MASK_3,
+		0, 0, 0, 0,
+		0, 0, 0
 	},
 	.rx_err = {
-		0, 0,
+		0, 0, 0,
 		ATH12K_RX_ERR_RING_MASK_0,
-		0, 0, 0, 0, 0, 0, 0, 0, 0,
+		0, 0, 0, 0, 0, 0, 0, 0,
+		0, 0, 0
 	},
 	.rx_wbm_rel = {
-		0, 0,
+		0, 0, 0,
 		ATH12K_RX_WBM_REL_RING_MASK_0,
-		0, 0, 0, 0, 0, 0, 0, 0, 0,
+		0, 0, 0, 0, 0, 0, 0, 0,
+		0, 0, 0
 	},
 	.reo_status = {
-		0, 0,
+		0, 0, 0,
 		ATH12K_REO_STATUS_RING_MASK_0,
-		0, 0, 0, 0, 0, 0, 0, 0, 0,
+		0, 0, 0, 0, 0, 0, 0, 0,
+		0, 0, 0
 	},
 	.tx_mon_dest = {
 		ATH12K_TX_MON_RING_MASK_0,
 		ATH12K_TX_MON_RING_MASK_1,
 		0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
+		0, 0, 0
 	},
 #ifdef CPTCFG_ATH12K_PPE_DS_SUPPORT
 	.ppe2tcl = {
-		0, 0, 0, 0,
-		0, 0, ATH12K_PPE2TCL_RING_MASK_0, 0, 0, 0, 0, 0,
+		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
+		ATH12K_PPE2TCL_RING_MASK_0, 0, 0
 	},
 	.reo2ppe = {
-		0, 0, 0, 0,
-		0, 0, 0, ATH12K_REO2PPE_RING_MASK_0, 0, 0, 0, 0,
+		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
+		0, ATH12K_REO2PPE_RING_MASK_0, 0
 	},
 	.wbm2sw6_ppeds_tx_cmpln = {
-		0, 0, 0, 0,
-		0, 0, 0, 0, ATH12K_PPE_WBM2SW_RELEASE_RING_MASK_0, 0, 0, 0,
+		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
+		0, 0, ATH12K_PPE_WBM2SW_RELEASE_RING_MASK_0
 	},
 #endif
 };
@@ -2103,7 +2111,7 @@ static struct ath12k_hw_params ath12k_hw
 
 		.hw_ops = &ipq5332_ops,
 		.regs = &qcn6432_regs,
-		.ext_irq_grp_num_max = 6,
+		.ext_irq_grp_num_max = 12,
 		.ring_mask = &ath12k_hw_ring_mask_qcn6432,
 		.route_wbm_release = 2,
 
--- a/drivers/net/wireless/ath/ath12k/pcic.c
+++ b/drivers/net/wireless/ath/ath12k/pcic.c
@@ -993,6 +993,14 @@ int ath12k_pcic_config_hybrid_irq(struct
 				ce_done = false;
 
 		} else {
+			ret = ath12k_pcic_get_user_msi_assignment(ab, "DP", &num_vectors,
+								   &user_base_data, &base_vector);
+                	if (ret < 0)
+                        	return ret;
+
+			if (k >= num_vectors)
+				break;
+
 			ret = ath12k_pcic_ext_config_gic_msi_irq(ab, pdev, msi_desc, k);
 			if (ret) {
 				ath12k_warn(ab, "failed to config ext msi irq %d\n", ret);
--- a/drivers/net/wireless/ath/ath12k/pcic.h
+++ b/drivers/net/wireless/ath/ath12k/pcic.h
@@ -39,12 +39,12 @@ static const struct ath12k_msi_config at
 		/* In DP, we use num_vectors as 9 (6 REGULAR DP INTERRUPTS + 3 PPEDS
 		 * INTERRUPTS)
 		 */
-		.total_vectors = 15,
+		.total_vectors = 32,
 		.total_users = 3,
 		.users = (struct ath12k_msi_user[]) {
 			{ .name = "QDSS", .num_vectors = 1, .base_vector = 0 },
 			{ .name = "CE", .num_vectors = 5, .base_vector = 1 },
-			{ .name = "DP", .num_vectors = 9, .base_vector = 6 },
+			{ .name = "DP", .num_vectors = 15, .base_vector = 6 },
 		},
 	},
 	{
--- a/drivers/net/wireless/ath/ath12k/ce.h
+++ b/drivers/net/wireless/ath/ath12k/ce.h
@@ -9,7 +9,7 @@
 
 #define CE_COUNT_MAX 16
 #define ATH12K_QCN6432_CE_COUNT 12
-#define ATH12K_QCN6432_EXT_IRQ_GRP_NUM_MAX 12
+#define ATH12K_QCN6432_EXT_IRQ_GRP_NUM_MAX 15
 
 /* Byte swap data words */
 #define CE_ATTR_BYTE_SWAP_DATA 2
