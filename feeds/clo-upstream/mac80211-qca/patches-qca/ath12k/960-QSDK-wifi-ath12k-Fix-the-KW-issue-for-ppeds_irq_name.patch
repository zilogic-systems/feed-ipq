From a10ef2a4ba763cc75fc79310f932a1ef8737a95c Mon Sep 17 00:00:00 2001
From: Vinith Kumar R <quic_vinithku@quicinc.com>
Date: Mon, 8 Jul 2024 12:02:34 +0530
Subject: [PATCH] QSDK: wifi: ath12k: Fix the KW issue for ppeds_irq_name
 out-of-bound access

Currently, in the ppeds_irq_name two-dimensional array, we are
copying more than the array size in the row index.

This will cause an array out-of-bounds issue.

To fix this, use the row index along with ppeds_irq_name
(for example: ppeds_irq_name[PPEDS_IRQ_PPE2TCL]) in the sizeof
operator.

Patch-dependency: 763-b-wifi-ath12k-add-framework-to-support-PPE-DS.patch
		  840-a-ath12k-PPEDS-DS-bring-up-for-QCN6432.patch

Fixes: I00e38f68a (wifi: ath12k: add framework to support PPE DS)
Fixes: I50bd0c085 (wifi: ath12k: PPEDS - Enable DS for QCN6432 on kernel v6.1)

Signed-off-by: Vinith Kumar R <quic_vinithku@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/pci.c  | 6 +++---
 drivers/net/wireless/ath/ath12k/pcic.c | 6 +++---
 2 files changed, 6 insertions(+), 6 deletions(-)

diff --git a/drivers/net/wireless/ath/ath12k/pci.c b/drivers/net/wireless/ath/ath12k/pci.c
index d119892..09e5288 100644
--- a/drivers/net/wireless/ath/ath12k/pci.c
+++ b/drivers/net/wireless/ath/ath12k/pci.c
@@ -259,7 +259,7 @@ int ath12k_pci_ppeds_register_interrupts(struct ath12k_base *ab, int type, int v
 
 	irq_set_status_flags(irq, IRQ_DISABLE_UNLAZY);
 	if (type == HAL_PPE2TCL) {
-		snprintf(&ab->dp.ppeds_irq_name[PPEDS_IRQ_PPE2TCL], sizeof(ab->dp.ppeds_irq_name),
+		snprintf(&ab->dp.ppeds_irq_name[PPEDS_IRQ_PPE2TCL], sizeof(ab->dp.ppeds_irq_name[PPEDS_IRQ_PPE2TCL]),
 			 "pci%d_ppe2tcl_%d", bus_id, ab->ppe.ppeds_soc_idx);
 		ret = request_irq(irq,  ath12k_ds_ppe2tcl_irq_handler,
 				  IRQF_NO_AUTOEN | IRQF_NO_SUSPEND,
@@ -268,7 +268,7 @@ int ath12k_pci_ppeds_register_interrupts(struct ath12k_base *ab, int type, int v
 			goto irq_fail;
 		ab->dp.ppeds_irq[PPEDS_IRQ_PPE2TCL] = irq;
 	} else if (type == HAL_REO2PPE) {
-		snprintf(&ab->dp.ppeds_irq_name[PPEDS_IRQ_REO2PPE], sizeof(ab->dp.ppeds_irq_name),
+		snprintf(&ab->dp.ppeds_irq_name[PPEDS_IRQ_REO2PPE], sizeof(ab->dp.ppeds_irq_name[PPEDS_IRQ_REO2PPE]),
 			 "pci%d_reo2ppe_%d", bus_id, ab->ppe.ppeds_soc_idx);
 		ret = request_irq(irq,  ath12k_ds_reo2ppe_irq_handler,
 				  IRQF_SHARED | IRQF_NO_SUSPEND,
@@ -279,7 +279,7 @@ int ath12k_pci_ppeds_register_interrupts(struct ath12k_base *ab, int type, int v
 
 		disable_irq_nosync(irq);
 	} else if (type == HAL_WBM2SW_RELEASE && ring_num == HAL_WBM2SW_PPEDS_TX_CMPLN_RING_NUM) {
-		snprintf(&ab->dp.ppeds_irq_name[PPEDS_IRQ_PPE_WBM2SW_REL], sizeof(ab->dp.ppeds_irq_name),
+		snprintf(&ab->dp.ppeds_irq_name[PPEDS_IRQ_PPE_WBM2SW_REL], sizeof(ab->dp.ppeds_irq_name[PPEDS_IRQ_PPE_WBM2SW_REL]),
 			 "pci%d_ppe_wbm_rel_%d", bus_id, ab->ppe.ppeds_soc_idx);
 		ret = request_irq(irq,  ath12k_dp_ppeds_handle_tx_comp,
 				  IRQF_NO_AUTOEN | IRQF_NO_SUSPEND,
diff --git a/drivers/net/wireless/ath/ath12k/pcic.c b/drivers/net/wireless/ath/ath12k/pcic.c
index 434c221..974f83e 100644
--- a/drivers/net/wireless/ath/ath12k/pcic.c
+++ b/drivers/net/wireless/ath/ath12k/pcic.c
@@ -616,7 +616,7 @@ int ath12k_pcic_ppeds_register_interrupts(struct ath12k_base *ab, int type, int
 		if (!irq)
 			goto irq_fail;
 		irq_set_status_flags(irq, IRQ_DISABLE_UNLAZY);
-		snprintf(&ab->dp.ppeds_irq_name[PPEDS_IRQ_PPE2TCL], sizeof(ab->dp.ppeds_irq_name),
+		snprintf(&ab->dp.ppeds_irq_name[PPEDS_IRQ_PPE2TCL], sizeof(ab->dp.ppeds_irq_name[PPEDS_IRQ_PPE2TCL]),
 			 "pcic%d_ppe2tcl_%d", bus_id, ab->ppe.ppeds_soc_idx);
 		ret = devm_request_irq(&pdev->dev, irq,  ath12k_ds_ppe2tcl_irq_handler,
 				  IRQF_NO_AUTOEN | IRQF_NO_SUSPEND,
@@ -629,7 +629,7 @@ int ath12k_pcic_ppeds_register_interrupts(struct ath12k_base *ab, int type, int
 		if (!irq)
 			goto irq_fail;
 		irq_set_status_flags(irq, IRQ_DISABLE_UNLAZY);
-		snprintf(&ab->dp.ppeds_irq_name[PPEDS_IRQ_REO2PPE], sizeof(ab->dp.ppeds_irq_name),
+		snprintf(&ab->dp.ppeds_irq_name[PPEDS_IRQ_REO2PPE], sizeof(ab->dp.ppeds_irq_name[PPEDS_IRQ_REO2PPE]),
 			 "pcic%d_reo2ppe_%d", bus_id, ab->ppe.ppeds_soc_idx);
 		ret = devm_request_irq(&pdev->dev, irq,  ath12k_ds_reo2ppe_irq_handler,
 				  IRQF_SHARED | IRQF_NO_SUSPEND,
@@ -644,7 +644,7 @@ int ath12k_pcic_ppeds_register_interrupts(struct ath12k_base *ab, int type, int
 		if (!irq)
 			goto irq_fail;
 		irq_set_status_flags(irq, IRQ_DISABLE_UNLAZY);
-		snprintf(&ab->dp.ppeds_irq_name[PPEDS_IRQ_PPE_WBM2SW_REL], sizeof(ab->dp.ppeds_irq_name),
+		snprintf(&ab->dp.ppeds_irq_name[PPEDS_IRQ_PPE_WBM2SW_REL], sizeof(ab->dp.ppeds_irq_name[PPEDS_IRQ_PPE_WBM2SW_REL]),
 			 "pcic%d_ppe_wbm_rel_%d", bus_id, ab->ppe.ppeds_soc_idx);
 		ret = devm_request_irq(&pdev->dev, irq,  ath12k_dp_ppeds_handle_tx_comp,
 				  IRQF_NO_AUTOEN | IRQF_NO_SUSPEND,
-- 
2.34.1

