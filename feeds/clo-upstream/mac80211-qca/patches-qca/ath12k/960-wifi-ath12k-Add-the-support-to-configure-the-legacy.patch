From 3b0cb7b8ae0d42a2702a2c8521a4b6f562251c10 Mon Sep 17 00:00:00 2001
From: Arulanbu Balusamy <quic_abalusam@quicinc.com>
Date: Thu, 29 Aug 2024 12:32:19 +0530
Subject: [PATCH 1/2] wifi: ath12k: Add the support to configure the legacy 
 beacon tx rate.

Add the support to configure the beacon tx rate as legacy bit rate
This involves receiving the beacon rate mask from the mac80211
layer and calculating the corresponding hardware rate code.

Patch-dependency: 920-002-wifi-nl80211-Used-the-chandef-from-the-configured-parameters-during.patch
Patch-work: [None]

Signed-off-by: Arulanbu Balusamy <quic_abalusam@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/mac.c | 17 +++++++++++++++++
 1 file changed, 17 insertions(+)

diff --git a/drivers/net/wireless/ath/ath12k/mac.c b/drivers/net/wireless/ath/ath12k/mac.c
index 00feca9..baba7b6 100644
--- a/drivers/net/wireless/ath/ath12k/mac.c
+++ b/drivers/net/wireless/ath/ath12k/mac.c
@@ -4516,14 +4516,17 @@ static void ath12k_recalculate_mgmt_rate(struct ath12k *ar,
 {
 	const struct ieee80211_supported_band *sband;
 	u8 basic_rate_idx;
+	u8 beacon_rate_idx;
 	int hw_rate_code;
 	u32 vdev_param;
 	u16 bitrate;
 	int ret;
+	enum nl80211_band band;
 
 	lockdep_assert_held(&ar->conf_mutex);
 
 	sband = ar->ah->hw->wiphy->bands[def->chan->band];
+	band = def->chan->band;
 	basic_rate_idx = ffs(link_conf->basic_rates);
 	if (basic_rate_idx)
 		basic_rate_idx -= 1;
@@ -4540,6 +4543,18 @@ static void ath12k_recalculate_mgmt_rate(struct ath12k *ar,
 					    hw_rate_code);
 	if (ret)
 		ath12k_warn(ar->ab, "failed to set mgmt tx rate %d\n", ret);
+	if (link_conf->beacon_tx_rate.control[band].legacy) {
+		beacon_rate_idx = ffs(link_conf->beacon_tx_rate.control[band].legacy);
+		beacon_rate_idx -=1;
+
+		if (band == NL80211_BAND_5GHZ || band == NL80211_BAND_6GHZ)
+			beacon_rate_idx += ATH12K_MAC_FIRST_OFDM_RATE_IDX;
+		if (beacon_rate_idx < ARRAY_SIZE(ath12k_legacy_rates)) {
+			bitrate = ath12k_legacy_rates[beacon_rate_idx].bitrate;
+			hw_rate_code = ath12k_mac_get_rate_hw_value(bitrate);
+
+		}
+	}
 
 	vdev_param = WMI_VDEV_PARAM_BEACON_RATE;
 	ret = ath12k_wmi_vdev_set_param_cmd(ar, arvif->vdev_id, vdev_param,
@@ -18633,6 +18648,8 @@ static int __ath12k_mac_register(struct ath12k *ar)
 
 	wiphy_ext_feature_set(hw->wiphy,
 			      NL80211_EXT_FEATURE_SET_SCAN_DWELL);
+	wiphy_ext_feature_set(hw->wiphy,
+			      NL80211_EXT_FEATURE_BEACON_RATE_LEGACY);
 
 	if (ar->pdev->cap.supported_bands & WMI_HOST_WLAN_5G_CAP) {
 		if (test_bit(ar->cfg_rx_chainmask, &cap->adfs_chain_mask)) {
-- 
2.34.1

