From 3f91b52a03aa723a814b08c7b93ebe39cfb9b422 Mon Sep 17 00:00:00 2001
From: P Praneesh <quic_ppranees@quicinc.com>
Date: Tue, 2 Jul 2024 22:11:30 +0530
Subject: [PATCH] wifi: ath12k: remove skb alignment logic during allocation

skb alloc returns skb->data with 64 bytes aligned address for IPQ5322 and
IPQ9574. skb->head to skb->data width is assigned based on cache size.
To align this address to 128 bytes, skb_put operation is performed for
each skb which is consuming CPU cycles. This operation is performed
inorder to align with the AXI bus size which is also 128 bytes for most
of the hardware platforms. If unaligned address is provided for AXI
transaction, AXI takes one more cycle to complete the transaction from
target to host. But CPU cycles spend for skb_put is more when compared
to that additional AXI transaction. So removing the skb_put operation in
the host to improve CPU.

Patch-dependency : None

Signed-off-by: P Praneesh <quic_ppranees@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/dp_rx.c | 7 -------
 1 file changed, 7 deletions(-)

diff --git a/drivers/net/wireless/ath/ath12k/dp_rx.c b/drivers/net/wireless/ath/ath12k/dp_rx.c
index dc19439..c3e31e1 100644
--- a/drivers/net/wireless/ath/ath12k/dp_rx.c
+++ b/drivers/net/wireless/ath/ath12k/dp_rx.c
@@ -304,13 +304,6 @@ void ath12k_dp_rx_bufs_replenish(struct ath12k_base *ab,
 		if (unlikely(!skb))
 			break;
 
-		if (!IS_ALIGNED((unsigned long)skb->data,
-				DP_RX_BUFFER_ALIGN_SIZE)) {
-			skb_pull(skb,
-				 PTR_ALIGN(skb->data, DP_RX_BUFFER_ALIGN_SIZE) -
-				 skb->data);
-		}
-
 		paddr = dma_map_single_attrs(ab->dev, skb->data,
 					     skb->len + skb_tailroom(skb),
 					     DMA_FROM_DEVICE, DMA_ATTR_SKIP_CPU_SYNC);
-- 
2.34.1

