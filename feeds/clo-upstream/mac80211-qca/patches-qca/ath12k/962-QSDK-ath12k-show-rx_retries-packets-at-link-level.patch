From 9929fac1dbfd270c5dd290a665b5e42199a6fe99 Mon Sep 17 00:00:00 2001
From: Sarika Sharma <quic_sarishar@quicinc.com>
Date: Thu, 4 Jul 2024 10:36:40 +0530
Subject: [PATCH] QSDK: ath12k: show rx_retries packets at link level

Add rx_retries packets count per station per link.

root@OpenWrt:/# cat /sys/kernel/debug/ieee80211/phy00/netdev:wlan1/
stations/00:03:7f:41:10:10/link-0/rx_mpdu_retries
59

Patch-dependency: ath12k/869-a-wifi-cfg80211-add-support-to-count-rx-retries.patch
		  ath12k/869-b-wifi-ath12k-add-support-to-count-rx-retries.patch

Signed-off-by: Sarika Sharma <quic_sarishar@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/debugfs_sta.c | 43 +++++++++++++++++++
 1 file changed, 43 insertions(+)

--- a/drivers/net/wireless/ath/ath12k/debugfs_sta.c
+++ b/drivers/net/wireless/ath/ath12k/debugfs_sta.c
@@ -709,6 +709,46 @@ static const struct file_operations fops
 	.llseek = default_llseek,
 };
 
+static ssize_t
+ath12k_dbg_sta_read_rx_retries(struct file *file, char __user *user_buf,
+			       size_t count, loff_t *ppos)
+{
+	struct ieee80211_link_sta *link_sta = file->private_data;
+	struct ieee80211_sta *sta = link_sta->sta;
+	u8 link_id = link_sta->link_id;
+	struct ath12k_sta *ahsta = ath12k_sta_to_ahsta(sta);
+	struct ath12k_hw *ah = ahsta->ahvif->ah;
+	struct ath12k_link_sta *arsta;
+	char buf[32];
+	size_t len;
+
+	mutex_lock(&ah->conf_mutex);
+
+	if (!(BIT(link_id) & ahsta->links_map)) {
+		mutex_unlock(&ah->conf_mutex);
+		return -ENOENT;
+	}
+
+	arsta = ahsta->link[link_id];
+	if (!arsta) {
+		mutex_unlock(&ah->conf_mutex);
+		return -ENOENT;
+	}
+
+	len = scnprintf(buf, sizeof(buf), "%u\n", arsta->rx_retries);
+
+	mutex_unlock(&ah->conf_mutex);
+
+	return simple_read_from_buffer(user_buf, count, ppos, buf, len);
+}
+
+static const struct file_operations fops_rx_retries = {
+	.read = ath12k_dbg_sta_read_rx_retries,
+	.open = simple_open,
+	.owner = THIS_MODULE,
+	.llseek = default_llseek,
+};
+
 static int
 ath12k_dbg_sta_open_htt_peer_stats(struct inode *inode, struct file *file)
 {
@@ -2132,6 +2172,9 @@ void ath12k_debugfs_link_sta_op_add(stru
 				    &fops_driver_rx_pkts_flow);
 	}
 
+	debugfs_create_file("rx_mpdu_retries", 0400, dir, link_sta,
+			    &fops_rx_retries);
+
 	debugfs_create_file("htt_peer_stats", 0400, dir, link_sta,
 			    &fops_htt_peer_stats);
 
--- a/drivers/net/wireless/ath/ath12k/dp_mon.c
+++ b/drivers/net/wireless/ath/ath12k/dp_mon.c
@@ -1668,7 +1668,7 @@ ath12k_dp_mon_rx_parse_status_tlv(struct
 		if (peer_id)
 			ppdu_info->peer_id = peer_id;
 
-		ppdu_info->mpdu_retry = info[2] & HAL_RX_MPDU_START_INFO3_MPDU_RETRY;
+		ppdu_info->mpdu_retry += info[2] & HAL_RX_MPDU_START_INFO3_MPDU_RETRY;
 
 		ppdu_info->mpdu_len += u32_get_bits(info[1],
 						    HAL_RX_MPDU_START_INFO2_MPDU_LEN);
@@ -1677,7 +1677,7 @@ ath12k_dp_mon_rx_parse_status_tlv(struct
 			ppdu_info->userid = userid;
 			ppdu_info->userstats[userid].ampdu_id =
 				u32_get_bits(info[0], HAL_RX_MPDU_START_INFO0_PPDU_ID);
-			ppdu_info->userstats[userid].mpdu_retry = info[2] & HAL_RX_MPDU_START_INFO3_MPDU_RETRY;
+			ppdu_info->userstats[userid].mpdu_retry += info[2] & HAL_RX_MPDU_START_INFO3_MPDU_RETRY;
 		}
 
 		break;
