From 3e2b9160c9303d8f61812b4ab7e47a78a1d0c5ce Mon Sep 17 00:00:00 2001
From: Manish Dharanenthiran <quic_mdharane@quicinc.com>
Date: Fri, 9 Aug 2024 15:38:43 +0530
Subject: [PATCH 3/4] wifi: ath12k: Add support to handle link reconfig event
 params from firmware

Once the link removal request is received from the driver, firmware will
process the request and start the link reconfigure procedure. To intimate
driver about the ongoing link removal progress, firmware will send the TBTT
count and TSF value in new WMI event named - WMI_MLO_LINK_REMOVAL_EVENTID.

Add driver handler to receive this event, parse the event to fetch TBTT
count and TSF value and inform kernel about the progress.

Signed-off-by: Manish Dharanenthiran <quic_mdharane@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/wmi.c | 76 +++++++++++++++++++++++++++
 drivers/net/wireless/ath/ath12k/wmi.h | 38 ++++++++++++++
 2 files changed, 114 insertions(+)

diff --git a/drivers/net/wireless/ath/ath12k/wmi.c b/drivers/net/wireless/ath/ath12k/wmi.c
index 6f5541a..b15c2c6 100644
--- a/drivers/net/wireless/ath/ath12k/wmi.c
+++ b/drivers/net/wireless/ath/ath12k/wmi.c
@@ -15619,6 +15619,79 @@ void ath12k_wmi_event_tbttoffset_update(struct ath12k_base *ab, struct sk_buff *
 		ath12k_warn(ab, "failed to parse tbtt offset event: %d\n", ret);
 }
 
+static int ath12k_wmi_tlv_mlo_reconfig_link_removal_parse(struct ath12k_base *ab,
+							  u16 tag, u16 len,
+							  const void *ptr, void *data)
+{
+	struct ath12k_wmi_mlo_link_removal_event_params *param = data, *tmp;
+	struct ath12k_wmi_mlo_link_removal_tbtt_update *tbtt;
+	int ret = 0;
+
+	switch(tag) {
+	case WMI_TAG_MLO_LINK_REMOVAL_EVENT_FIXED_PARAM:
+		tmp = (struct ath12k_wmi_mlo_link_removal_event_params *)ptr;
+		param->vdev_id = tmp->vdev_id;
+		break;
+	case WMI_TAG_MLO_LINK_REMOVAL_TBTT_UPDATE:
+		tbtt = (struct ath12k_wmi_mlo_link_removal_tbtt_update *)ptr;
+		param->tbtt_info.tbtt_count = le32_to_cpu(tbtt->tbtt_count);
+		param->tbtt_info.tsf = (u64)(le32_to_cpu(tbtt->tsf_high)) << 32 |
+					le32_to_cpu(tbtt->tsf_low);
+		param->tbtt_info.qtimer_reading = (u64)(le32_to_cpu(tbtt->qtimer_reading_high)) << 32 |
+						   le32_to_cpu(tbtt->qtimer_reading_low);
+		break;
+	default:
+		ath12k_warn(ab, "Received invalid tag:%u\n", tag);
+		ret = -EINVAL;
+		break;
+	}
+
+	return ret;
+}
+
+static void ath12k_wmi_event_mlo_reconfig_link_removal(struct ath12k_base *ab,
+						       struct sk_buff *skb)
+{
+	struct ath12k_link_vif *arvif;
+	struct ath12k_wmi_mlo_link_removal_event_params ev = { };
+	int ret;
+
+	ret = ath12k_wmi_tlv_iter(ab, skb->data, skb->len,
+				  ath12k_wmi_tlv_mlo_reconfig_link_removal_parse,
+				  &ev);
+
+	if (ret) {
+		ath12k_warn(ab, "failed to parse TLV for event:%x ret:%d\n",
+			    WMI_MLO_LINK_REMOVAL_EVENTID, ret);
+		return;
+	}
+
+	rcu_read_lock();
+	arvif = ath12k_mac_get_arvif_by_vdev_id(ab, le32_to_cpu(ev.vdev_id));
+	if (!arvif) {
+		rcu_read_unlock();
+		ath12k_warn(ab, "Link removal event received in invalid BSS %d\n",
+			    le32_to_cpu(ev.vdev_id));
+		return;
+	}
+
+	ath12k_dbg(ab, ATH12K_DBG_WMI, "Link removal event received in vdev :%d\n",
+		   ev.vdev_id);
+
+	ret = ieee80211_update_link_reconfig_remove_update(arvif->ahvif->vif, arvif->link_id,
+							   ev.tbtt_info.tbtt_count,
+							   ev.tbtt_info.tsf,
+							   ev.tbtt_info.tbtt_count ?
+							   NL80211_CMD_LINK_REMOVAL_STARTED :
+							   NL80211_CMD_LINK_REMOVAL_COMPLETED);
+
+	if (ret)
+		ath12k_warn(ab, "sending link removal event FAILED:%d link_id:%d\n",
+			    ret, arvif->link_id);
+
+	rcu_read_unlock();
+}
+
 static void ath12k_wmi_op_rx(struct ath12k_base *ab, struct sk_buff *skb)
 {
 	struct wmi_cmd_hdr *cmd_hdr;
@@ -15802,6 +15875,9 @@ static void ath12k_wmi_op_rx(struct ath12k_base *ab, struct sk_buff *skb)
 	case WMI_AFC_EVENTID:
 		ath12k_wmi_afc_event(ab, skb);
 		break;
+	case WMI_MLO_LINK_REMOVAL_EVENTID:
+		ath12k_wmi_event_mlo_reconfig_link_removal(ab, skb);
+		break;
 	/* TODO: Add remaining events */
 	default:
 		ath12k_dbg(ab, ATH12K_DBG_WMI, "Unknown eventid: 0x%x\n", id);
diff --git a/drivers/net/wireless/ath/ath12k/wmi.h b/drivers/net/wireless/ath/ath12k/wmi.h
index 2345e13..07c9d37 100644
--- a/drivers/net/wireless/ath/ath12k/wmi.h
+++ b/drivers/net/wireless/ath/ath12k/wmi.h
@@ -1097,6 +1097,8 @@ enum wmi_tlv_event_id {
 	WMI_MLO_LINK_SET_ACTIVE_RESP_EVENTID = WMI_EVT_GRP_START_ID(WMI_GRP_MLO),
 	WMI_MLO_SETUP_COMPLETE_EVENTID,
 	WMI_MLO_TEARDOWN_COMPLETE_EVENTID,
+	/* Response event for Link Removal Cmd */
+	WMI_MLO_LINK_REMOVAL_EVENTID,
 };
 
 enum wmi_tlv_pdev_param {
@@ -2242,6 +2244,9 @@ enum wmi_tlv_tag {
 	WMI_TAG_CTRL_PATH_CMD_FIXED_PARAM = 0x442,
 	WMI_TAG_CTRL_PATH_EVENT_FIXED_PARAM,
 	WMI_TAG_PRB_RESP_TMPL_ML_INFO_CMD = 0x460,
+	WMI_TAG_MLO_LINK_REMOVAL_TBTT_COUNT = 0x461,
+	WMI_TAG_MLO_LINK_REMOVAL_TBTT_UPDATE,
+	WMI_TAG_MLO_LINK_REMOVAL_EVENT_FIXED_PARAM,
 	WMI_TAG_MLO_LINK_REMOVAL_CMD_FIXED_PARAM = 0x464,
 	WMI_TAG_PDEV_DFS_RADAR_FLAGS = 0x4b4,
 	WMI_TAG_MAX
@@ -6672,6 +6677,39 @@ struct ath12k_mgmt_rx_cu_arg {
 	u8 *bpcc_bufp;
 };
 
+/**
+ * struct ath12k_mlo_link_removal_tbtt_update - MLO link removal TBTT info.
+ * This information will be in correspondence with an outgoing beacon instance.
+ * @tbtt_count: AP removal timer TBTT count in the reported beacon
+ * @tsf: TSF of the reported beacon
+ * @qtimer_reading: Q-timer reading when the reported beacon is sent out
+ */
+struct ath12k_mlo_link_removal_tbtt_update {
+	__le32 tbtt_count;
+	__le64 tsf;
+	__le64 qtimer_reading;
+}__packed;
+
+struct ath12k_wmi_mlo_link_removal_tbtt_update {
+	__le32 tbtt_count;
+
+	__le32 qtimer_reading_low; /* lower 32 bits */
+	__le32 qtimer_reading_high; /* higher 32 bits */
+
+	__le32 tsf_low; /* lower 32 bits */
+	__le32 tsf_high; /* higher 32 bits */
+} __packed;
+
+/**
+ * struct ath12k_mlo_link_removal_event_params - MLO link removal event parameters
+ * @vdev_id: vdev ID of the link undergoing removal
+ * @tbtt_info: TBTT information of the link undergoing removal
+ */
+struct ath12k_wmi_mlo_link_removal_event_params {
+	__le32 vdev_id;
+	struct ath12k_mlo_link_removal_tbtt_update tbtt_info;
+}__packed;
+
 struct ath12k_wmi_mgmt_rx_arg {
 	u32 chan_freq;
 	u32 channel;
-- 
2.34.1

