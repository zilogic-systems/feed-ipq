From 25e5f8b397361a594cb45e0c39826c44bee2f666 Mon Sep 17 00:00:00 2001
From: Maharaja Kennadyrajan <quic_mkenna@quicinc.com>
Date: Mon, 29 Jul 2024 15:00:24 +0530
Subject: [PATCH] wifi: ath12k: Add 6GHz Low and 6GHz High support

Currently, we don't have support to bring up 6GHz radio with 6GHz
low band or high band frequencies when the regulatory has 6GHz low
and high band information.

Hence, add 6GHz low or 6GHz high band support when the regulatory
has 6GHz low or high band frequency list.

Patch-dependency: 675-03-ath12k-Advertise-interface-combination.patch
Patch-work: None

Signed-off-by: Maharaja Kennadyrajan <quic_mkenna@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/core.h |  5 +++++
 drivers/net/wireless/ath/ath12k/wmi.c  | 17 +++++++++++------
 2 files changed, 16 insertions(+), 6 deletions(-)

--- a/drivers/net/wireless/ath/ath12k/core.h
+++ b/drivers/net/wireless/ath/ath12k/core.h
@@ -64,6 +64,8 @@ extern unsigned int ath12k_rfs_core_mask
 #define ATH12K_PHY_5GHZ_LOW "phy01"
 #define ATH12K_PHY_5GHZ_HIGH "phy02"
 #define ATH12K_PHY_6GHZ "phy03"
+#define ATH12K_PHY_6GHZ_LOW "phy03"
+#define ATH12K_PHY_6GHZ_HIGH "phy04"
 
 extern bool ath12k_debug_critical;
 #define ATH12K_MON_TIMER_INTERVAL  10
@@ -795,6 +797,9 @@ struct ath12k_sta {
 #define ATH12K_MAX_5G_LOW_BAND_FREQ  5330
 #define ATH12K_MIN_5G_HIGH_BAND_FREQ 5490
 
+#define ATH12K_MAX_6G_LOW_BAND_FREQ  6425
+#define ATH12K_MIN_6G_HIGH_BAND_FREQ 6585
+
 #define ATH12K_NUM_CHANS 102
 #define ATH12K_MIN_5G_CHAN 36
 #define ATH12K_MAX_5G_CHAN 177
--- a/drivers/net/wireless/ath/ath12k/wmi.c
+++ b/drivers/net/wireless/ath/ath12k/wmi.c
@@ -5986,16 +5986,22 @@ ath12k_fill_band_to_mac_param(struct ath
 		case WMI_HOST_WLAN_5G_CAP:
 			arg[i].start_freq = hal_reg_cap->low_5ghz_chan;
 			arg[i].end_freq = hal_reg_cap->high_5ghz_chan;
-			if (hal_reg_cap->high_5ghz_chan <= ATH12K_MIN_5G_HIGH_BAND_FREQ)
+			if (hal_reg_cap->high_5ghz_chan <= ATH12K_MIN_5G_HIGH_BAND_FREQ) {
 				pdev->phy_name = ATH12K_PHY_5GHZ_LOW;
-			else if (hal_reg_cap->low_5ghz_chan >= ATH12K_MAX_5G_LOW_BAND_FREQ &&
-				 hal_reg_cap->high_5ghz_chan <= ATH12K_MIN_6G_FREQ)
+			} else if (hal_reg_cap->low_5ghz_chan >= ATH12K_MAX_5G_LOW_BAND_FREQ &&
+				 hal_reg_cap->high_5ghz_chan <= ATH12K_MIN_6G_FREQ) {
 				pdev->phy_name = ATH12K_PHY_5GHZ_HIGH;
-			else if (hal_reg_cap->low_5ghz_chan >= ATH12K_MIN_6G_FREQ &&
-				 hal_reg_cap->high_5ghz_chan <= ATH12K_MAX_6G_FREQ)
-				pdev->phy_name = ATH12K_PHY_6GHZ;
-			else
+			} else if (hal_reg_cap->low_5ghz_chan >= ATH12K_MIN_6G_FREQ &&
+				 hal_reg_cap->high_5ghz_chan <= ATH12K_MAX_6G_FREQ) {
+				if (hal_reg_cap->high_5ghz_chan <= ATH12K_MIN_6G_HIGH_BAND_FREQ)
+					pdev->phy_name = ATH12K_PHY_6GHZ_LOW;
+				else if (hal_reg_cap->low_5ghz_chan >= ATH12K_MAX_6G_LOW_BAND_FREQ)
+					pdev->phy_name = ATH12K_PHY_6GHZ_HIGH;
+				else
+					pdev->phy_name = ATH12K_PHY_6GHZ;
+			} else {
 				pdev->phy_name = ATH12K_PHY_5GHZ;
+			}
 			break;
 		default:
 			break;
--- a/drivers/net/wireless/ath/ath12k/mac.c
+++ b/drivers/net/wireless/ath/ath12k/mac.c
@@ -18777,8 +18777,18 @@ ath12k_setup_per_hw_chan(struct ath12k *
 		}
 	} else if (pdev->cap.supported_bands & WMI_HOST_WLAN_5G_CAP && ar->supports_6ghz) {
 		band = &ar->mac.sbands[NL80211_BAND_6GHZ];
-		freq_low = ATH12K_MIN_6G_FREQ;
-		freq_high = ATH12K_MAX_6G_FREQ;
+		if (ar->chan_info.high_freq <= ATH12K_MIN_6G_HIGH_BAND_FREQ) {
+			/* 6 GHz low */
+			freq_low = ATH12K_MIN_6G_FREQ;
+			freq_high = ATH12K_MAX_6G_LOW_BAND_FREQ;
+		} else if (ar->chan_info.low_freq >= ATH12K_MAX_6G_LOW_BAND_FREQ) {
+			/* 6 GHz High */
+			freq_low = ATH12K_MIN_6G_HIGH_BAND_FREQ;
+			freq_high = ATH12K_MAX_6G_FREQ;
+		} else {
+			freq_low = ATH12K_MIN_6G_FREQ;
+			freq_high = ATH12K_MAX_6G_FREQ;
+		}
 	}
 
 	n_channels = ath12k_reg_get_num_chans_in_band(ar, band, freq_low, freq_high);
