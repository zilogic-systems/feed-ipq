From efebbe548fdbd467508bda8e51cc05941ad43030 Mon Sep 17 00:00:00 2001
From: Sidhanta Sahu <quic_sidhanta@quicinc.com>
Date: Mon, 12 Aug 2024 18:54:37 -0700
Subject: [PATCH] wifi: ath12k: Refactor link assignment and removal

Replace direct assignment and removal of ahvif->link[link_id] with calls
to ath12k_mac_add_update_link_vif_rcu() and
ath12k_mac_remove_link_vif_rcu().

Improves the safety and readability of the code by encapsulating the
assignment and removal logic with dedicated functions.

Patch-Dependency: 972-01-wifi-ath12k-Introduce-RCU-Protection-to-safeguard-ar.patch
Patch-Work: None

Signed-off-by: Sidhanta Sahu <quic_sidhanta@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/mac.c | 40 +++++++++++++--------------
 1 file changed, 20 insertions(+), 20 deletions(-)

--- a/drivers/net/wireless/ath/ath12k/mac.c
+++ b/drivers/net/wireless/ath/ath12k/mac.c
@@ -5668,22 +5668,6 @@ ath12k_mac_find_link_id_by_freq(struct i
 	return ATH12K_DEFAULT_SCAN_LINK;
 }
 
-void ath12k_mac_unassign_link_vif(struct ath12k_link_vif *arvif)
-{
-	struct ath12k_vif *ahvif = arvif->ahvif;
-	struct ath12k_hw *ah = ahvif->ah;
-
-	lockdep_assert_held(&ah->conf_mutex);
-
-	ahvif->link[arvif->link_id] = NULL;
-	ahvif->links_map &= ~BIT(arvif->link_id);
-
-	if (arvif != &ahvif->deflink)
-		kfree(arvif);
-	else
-		memset(arvif->addr, 0, ETH_ALEN);
-}
-
 int ath12k_mac_add_update_link_vif_rcu(struct ath12k_vif *ahvif,
 				       int link_id,
 				       struct ath12k_link_vif *new_arvif)
@@ -5733,6 +5717,15 @@ int ath12k_mac_remove_link_vif_rcu(struc
 	return 0;
 }
 
+void ath12k_mac_unassign_link_vif(struct ath12k_link_vif *arvif)
+{
+	struct ath12k_vif *ahvif = arvif->ahvif;
+	struct ath12k_hw *ah = ahvif->ah;
+
+	lockdep_assert_held(&ah->conf_mutex);
+
+	ath12k_mac_remove_link_vif_rcu(ahvif, arvif->link_id);
+}
 
 struct ath12k_link_vif *
 ath12k_mac_assign_link_vif(struct ath12k_hw *ah, struct ieee80211_vif *vif,
@@ -5744,12 +5737,13 @@ ath12k_mac_assign_link_vif(struct ath12k
 
 	lockdep_assert_held(&ah->conf_mutex);
 
-	if (ahvif->link[link_id]) {
-		ahvif->link[link_id]->link_id = link_id;
+	arvif = ath12k_get_arvif_from_link_id(ahvif, link_id);
+	if (arvif) {
+		arvif->link_id = link_id;
 		ath12k_dbg(NULL, ATH12K_DBG_MAC | ATH12K_DBG_BOOT,
 			   "mac assign link vif: arvif found, link_id:%d\n",
 			   link_id);
-		return ahvif->link[link_id];
+		return arvif;
 	}
 
 	/* Not a ML vif */
@@ -5783,10 +5777,9 @@ ath12k_mac_assign_link_vif(struct ath12k
 		}
 	}
 
-	ahvif->link[link_id] = arvif;
 	arvif->ahvif = ahvif;
 	arvif->link_id = link_id;
-	ahvif->links_map |= BIT(link_id);
+	ath12k_mac_add_update_link_vif_rcu(ahvif, link_id, arvif);
 
 	for (i = 0; i < ARRAY_SIZE(arvif->bitrate_mask.control); i++) {
 		arvif->bitrate_mask.control[i].legacy = 0xffffffff;
