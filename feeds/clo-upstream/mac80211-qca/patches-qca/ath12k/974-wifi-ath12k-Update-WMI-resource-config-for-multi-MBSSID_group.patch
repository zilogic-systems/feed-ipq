From 8d25fccaaea7081e7ae42e91eb3937066d892e12 Mon Sep 17 00:00:00 2001
From: Rathees Kumar R Chinannan <quic_rrchinan@quicinc.com>
Date: Mon, 9 Sep 2024 12:51:41 +0530
Subject: [PATCH] wifi: ath12k: Update WMI resource config for multi MBSSID
 group feature

Update fields in target_resource_config and wmi_resource_config
structures to configure maximum vdev count and maximum beacon
size for multi MBSSID group feature.
During any change in the BSS info, bringup only the VDEVs that
are part of MBSSID group.
Currently ath12k driver isn't overriding default target beacon
size explicitly, hence advertising the same to mac80211 via
max_beacon_size.
Configure mbssid_max_ngroups and max_beacon_size fields in
wiphy structure to advertise maximum number of supported groups
and maximum beacon size supported by the driver.

Patch-dependency: 612-01-ath12k-add-WMI-resource-config-for-EMA.patch

Signed-off-by: Rathees Kumar R Chinannan <quic_rrchinan@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/hw.h  |  7 ++++++-
 drivers/net/wireless/ath/ath12k/mac.c | 10 +++++++++-
 drivers/net/wireless/ath/ath12k/wmi.c |  9 +++++++--
 drivers/net/wireless/ath/ath12k/wmi.h |  7 +++++++
 4 files changed, 29 insertions(+), 4 deletions(-)

diff --git a/drivers/net/wireless/ath/ath12k/hw.h b/drivers/net/wireless/ath/ath12k/hw.h
index 1607e2d..7aa99b9 100644
--- a/drivers/net/wireless/ath/ath12k/hw.h
+++ b/drivers/net/wireless/ath/ath12k/hw.h
@@ -85,10 +85,15 @@ struct ath12k_cfr_peer_tx_param;
 #define TARGET_NUM_WDS_ENTRIES		32
 #define TARGET_DMA_BURST_SIZE		1
 #define TARGET_RX_BATCHMODE		1
-#define TARGET_EMA_MAX_PROFILE_PERIOD	8
 #define TARGET_RX_PEER_METADATA_VER_V1A 2
 #define TARGET_RX_PEER_METADATA_VER_V1B 3
 
+#define TARGET_EMA_MAX_PROFILE_PERIOD	8
+#define TARGET_MIN_MBSSID_GROUP_SIZE	2
+#define TARGET_MAX_MBSSID_GROUPS	(TARGET_MAX_BCN_OFFLD / \
+					 TARGET_MIN_MBSSID_GROUP_SIZE)
+#define TARGET_MAX_BEACON_SIZE		1500
+
 #define ATH12K_HW_DEFAULT_QUEUE		0
 
 #define ATH12K_HW_MAX_QUEUES		4
diff --git a/drivers/net/wireless/ath/ath12k/mac.c b/drivers/net/wireless/ath/ath12k/mac.c
index 00feca9..adb94a5 100644
--- a/drivers/net/wireless/ath/ath12k/mac.c
+++ b/drivers/net/wireless/ath/ath12k/mac.c
@@ -5113,7 +5113,8 @@ void ath12k_mac_bss_info_changed(struct ath12k *ar,
 				list_for_each_entry(arvif_itr, &ar->arvifs, list) {
 					if (!arvif_itr->pending_csa_up)
 						continue;
-
+					if (arvif_itr->tx_vdev_id != tx_arvif->vdev_id)
+						continue;
 					memset(&params, 0, sizeof(params));
 					params.vdev_id = arvif_itr->vdev_id;
 					params.aid = ahvif->aid;
@@ -18990,6 +18991,13 @@ static int ath12k_mac_hw_register(struct ath12k_hw *ah)
 
 	hw->wiphy->mbssid_max_interfaces = ah->num_radio * TARGET_NUM_VDEVS;
 	hw->wiphy->ema_max_profile_periodicity = TARGET_EMA_MAX_PROFILE_PERIOD;
+	hw->wiphy->mbssid_max_ngroups = TARGET_MAX_MBSSID_GROUPS;
+
+	/* Currently ath12k isn't overriding default target beacon size
+	 * explicitly, hence advertising the same to mac80211 using
+	 * max_beacon_size.
+	 */
+	hw->wiphy->max_beacon_size = TARGET_MAX_BEACON_SIZE;
 
 	ah->hw->wiphy->regulatory_flags = REGULATORY_WIPHY_SELF_MANAGED;
 	ah->hw->wiphy->reg_notifier = ath12k_reg_notifier;
diff --git a/drivers/net/wireless/ath/ath12k/wmi.c b/drivers/net/wireless/ath/ath12k/wmi.c
index ff5c493..e06a0f1 100644
--- a/drivers/net/wireless/ath/ath12k/wmi.c
+++ b/drivers/net/wireless/ath/ath12k/wmi.c
@@ -294,7 +294,7 @@ void ath12k_wmi_init_qcn9274(struct ath12k_base *ab,
 	config->peer_map_unmap_version = 0x32;
 	config->twt_ap_pdev_count = ab->num_radios;
 	config->twt_ap_sta_count = 1000;
-	config->ema_max_vap_cnt = ab->num_radios;
+	config->ema_max_vap_cnt = ab->num_radios * TARGET_MAX_MBSSID_GROUPS;
 	config->ema_max_profile_period = TARGET_EMA_MAX_PROFILE_PERIOD;
 	config->beacon_tx_offload_max_vdev += config->ema_max_vap_cnt;
 
@@ -302,6 +302,7 @@ void ath12k_wmi_init_qcn9274(struct ath12k_base *ab,
 		config->sawf = true;
 	if (test_bit(WMI_TLV_SERVICE_PEER_METADATA_V1A_V1B_SUPPORT, ab->wmi_ab.svc_map))
 		config->dp_peer_meta_data_ver = TARGET_RX_PEER_METADATA_VER_V1B;
+	config->max_beacon_size = TARGET_MAX_BEACON_SIZE;
 
 }
 
@@ -362,7 +363,7 @@ void ath12k_wmi_init_ipq5332(struct ath12k_base *ab,
 	config->peer_map_unmap_version = 0x32;
 	config->twt_ap_pdev_count = ab->num_radios;
 	config->twt_ap_sta_count = 1000;
-	config->ema_max_vap_cnt = ab->num_radios;
+	config->ema_max_vap_cnt = ab->num_radios * TARGET_MAX_MBSSID_GROUPS;
 	config->ema_max_profile_period = TARGET_EMA_MAX_PROFILE_PERIOD;
 	config->beacon_tx_offload_max_vdev += config->ema_max_vap_cnt;
 
@@ -371,6 +372,7 @@ void ath12k_wmi_init_ipq5332(struct ath12k_base *ab,
 
 	if (test_bit(WMI_TLV_SERVICE_SAWF_LEVEL0, ab->wmi_ab.svc_map))
 		config->sawf = true;
+	config->max_beacon_size = TARGET_MAX_BEACON_SIZE;
 }
 
 
@@ -6010,6 +6012,9 @@ ath12k_wmi_copy_resource_config(struct ath12k_wmi_resource_config_params *wmi_cf
 	wmi_cfg->host_service_flags |= 1 << WMI_RSRC_CFG_HOST_SVC_FLAG_FULL_BW_NOL_SUPPORT_BIT;
 	wmi_cfg->ema_max_vap_cnt = tg_cfg->ema_max_vap_cnt;
 	wmi_cfg->ema_max_profile_period = tg_cfg->ema_max_profile_period;
+	wmi_cfg->ema_init_config =
+		cpu_to_le32(u32_encode_bits(tg_cfg->max_beacon_size,
+					    WMI_RSRC_CFG_EMA_INIT_CONFIG_BEACON_SIZE));
 }
 
 void ath12k_set_afc_config(struct ath12k_wmi_resource_config_arg *config)
diff --git a/drivers/net/wireless/ath/ath12k/wmi.h b/drivers/net/wireless/ath/ath12k/wmi.h
index a2bfacc..b1508a4 100644
--- a/drivers/net/wireless/ath/ath12k/wmi.h
+++ b/drivers/net/wireless/ath/ath12k/wmi.h
@@ -2764,6 +2764,7 @@ struct ath12k_wmi_resource_config_arg {
 	bool sawf;
 	bool is_full_bw_nol_feature_supported;
 	bool is_wds_null_frame_supported;
+	u32 max_beacon_size;
 };
 
 struct ath12k_wmi_init_cmd_arg {
@@ -2864,6 +2865,7 @@ struct wmi_init_cmd {
 #define WMI_RSRC_CFG_HOST_SUPPORT_LP_SP_MODE_BIT              7
 #define WMI_RSRC_CFG_HOST_AFC_DIS_TIMER_CHECK_BIT             8
 #define WMI_RSRC_CFG_HOST_AFC_DIS_REQ_ID_CHECK_BIT            9
+#define WMI_RSRC_CFG_EMA_INIT_CONFIG_BEACON_SIZE		GENMASK(15, 0)
 
 #define WMI_PDEV_MEC_AGING_TIMER_THRESHOLD_VALUE 5000
 
@@ -2938,6 +2940,11 @@ struct ath12k_wmi_resource_config_params {
 	__le32 max_rnr_neighbours;
 	__le32 ema_max_vap_cnt;
 	__le32 ema_max_profile_period;
+	__le32 max_ndp_sessions;
+	__le32 max_ndi_interfaces;
+	__le32 max_ap_vaps;
+	__le32 cbc_flow_ena;
+	__le32 ema_init_config;
 } __packed;
 
 struct wmi_service_ready_event {
-- 
2.34.1

