From 719494e5cad8490826dc60d9bf25960923799e45 Mon Sep 17 00:00:00 2001
From: Harish Rachakonda <quic_rachakon@quicinc.com>
Date: Wed, 4 Sep 2024 10:27:06 +0530
Subject: [PATCH] QSDK: ath12k: Add support to enable/disable Green tx

Add support to enable/disable Green Tx feature,Green Tx feature
reduces the TX power of PPDUs based on the current channel
conditions (packet errors, SNR at receiver, etc.,). It helps
to save power in active mode. Currently, PPDUs are transmitted
with the max power setting allowed for that rate which consumes
more power.

Usage:
Legacy: echo X > /sys/kernel/debug/ieee80211/phy00/netdev:wlanX/link0/power_save_gtx
SLO: echo X > /sys/kernel/debug/ieee80211/phy00/netdev:wlanX/link0/power_save_gtx
MLO: echo X > /sys/kernel/debug/ieee80211/phy00/netdev:wlanX/linkX/power_save_gtx

X=0 to disble
X=1 to enable

Patch-dependency: none
Patch-work: none

Signed-off-by: Harish Rachakonda <quic_rachakon@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/core.h        |  2 +
 drivers/net/wireless/ath/ath12k/debugfs.c     | 44 +++++++++++++++++++
 drivers/net/wireless/ath/ath12k/wmi.h         |  1 +
 3 files changed, 52 insertions(+), 5 deletions(-)

--- a/drivers/net/wireless/ath/ath12k/core.h
+++ b/drivers/net/wireless/ath/ath12k/core.h
@@ -454,6 +454,8 @@ struct ath12k_link_vif {
 	struct dentry *debugfs_twt;
 	struct dentry *debugfs_rtsthreshold;
 #endif /* CPTCFG_ATH12K_DEBUGFS */
+	struct dentry *debugfs_power_save_gtx;
+	bool power_save_gtx;
 	struct work_struct update_bcn_template_work;
 	u64 obss_color_bitmap;
 	struct work_struct update_obss_color_notify_work;
--- a/drivers/net/wireless/ath/ath12k/debugfs.c
+++ b/drivers/net/wireless/ath/ath12k/debugfs.c
@@ -6166,6 +6166,43 @@ static const struct file_operations ath1
 	.llseek = default_llseek,
 };
 
+static ssize_t ath12k_write_power_save_gtx(struct file *file,
+					   char __user *user_buf,
+					   size_t count, loff_t *ppos)
+{
+	struct ath12k_link_vif *arvif = file->private_data;
+	bool value;
+
+	if (kstrtobool_from_user(user_buf, count, &value))
+		return -EINVAL;
+
+	arvif->power_save_gtx = value;
+
+	ath12k_wmi_vdev_set_param_cmd(arvif->ar, arvif->vdev_id,
+				      WMI_VDEV_PARAM_GTX_ENABLE, value);
+
+	return count;
+}
+
+static ssize_t ath12k_read_power_save_gtx(struct file *file,
+					  char __user *user_buf,
+					  size_t count, loff_t *ppos)
+{
+	struct ath12k_link_vif *arvif = file->private_data;
+	char buf[ATH12K_BUF_SIZE_32];
+	size_t len;
+
+	len = scnprintf(buf, sizeof(buf), "%u\n", arvif->power_save_gtx);
+
+	return simple_read_from_buffer(user_buf, count, ppos, buf, len);
+}
+
+static const struct file_operations ath12k_power_save_gtx = {
+	.open = simple_open,
+	.write = ath12k_write_power_save_gtx,
+	.read = ath12k_read_power_save_gtx,
+};
+
 static ssize_t ath12k_write_ppe_rfs_core_mask(struct file *file,
 					      const char __user *user_buf,
 					      size_t count, loff_t *ppos)
@@ -6275,6 +6312,11 @@ void ath12k_debugfs_add_interface(struct
 	debugfs_create_file("resume_dialog", 0200, arvif->debugfs_twt,
 			    arvif, &ath12k_fops_twt_resume_dialog);
 
+	arvif->debugfs_power_save_gtx = debugfs_create_file("power_save_gtx", 0644,
+							    vif->link_debugfs[link_id],
+							    arvif,
+							    &ath12k_power_save_gtx);
+
 	if (hw->wiphy->num_hw) {
 		if (!arvif->debugfs_rtsthreshold || IS_ERR(arvif->debugfs_rtsthreshold)) {
 			ath12k_warn(arvif->ar->ab,
@@ -6354,6 +6396,7 @@ void ath12k_debugfs_remove_interface(str
 		arvif->debugfs_twt = NULL;
 		arvif->debugfs_rtsthreshold = NULL;
 		ahvif->debugfs_linkstats = NULL;
+		arvif->debugfs_power_save_gtx = NULL;
 		return;
 	}
 
@@ -6376,6 +6419,9 @@ void ath12k_debugfs_remove_interface(str
 	if (!arvif->debugfs_twt)
 		return;
 
+	debugfs_remove(arvif->debugfs_power_save_gtx);
+	arvif->debugfs_power_save_gtx = NULL;
+	
 	debugfs_remove_recursive(arvif->debugfs_twt);
 	arvif->debugfs_twt = NULL;
 
--- a/drivers/net/wireless/ath/ath12k/wmi.h
+++ b/drivers/net/wireless/ath/ath12k/wmi.h
@@ -1379,6 +1379,7 @@ enum wmi_tlv_vdev_param {
 	WMI_VDEV_PARAM_HE_LTF = 0x74,
 	WMI_VDEV_PARAM_BA_MODE = 0x7e,
 	WMI_VDEV_PARAM_AUTORATE_MISC_CFG = 0x80,
+	WMI_VDEV_PARAM_GTX_ENABLE = 0x85,
 	WMI_VDEV_PARAM_SET_HE_SOUNDING_MODE = 0x87,
 	WMI_VDEV_PARAM_UL_FIXED_RATE,
 	WMI_VDEV_PARAM_6GHZ_PARAMS = 0x99,
