From 759bae7ee57d9b5ce010011818758e9b3d588c01 Mon Sep 17 00:00:00 2001
From: Girish Kumar M P <quic_gmp@quicinc.com>
Date: Sat, 28 Sep 2024 22:18:57 +0530
Subject: [PATCH] wifi: ath12k: Remapping Tx-completion-ring4 and
 rx-error-ring.

Currently,wbm2sw3, wbm2sw4, wbm2sw5 have fixed interrupt number and
fixed interrupt names are assigned to each interrupt in the dts file.

In our current configuration wbm2sw3 mapped to rx-error but it is
assigned to wbm2host-tx-completion-ring4 in the dts.

Due to this rx-error packets are received under wbm2host-tx-completion
-ring4 and tx-completion-ring4 interrupt are not received.

Fix by remapping Tx-completion-ring4 to wbm2sw3 and rx-error-ring to
wbm2sw5 with respect to the dts file and interrupt number.

Patch-dependency:710-004-ath12k-Add-and-initialize-hw-params-for
-IPQ5332.patch

Signed-off-by: Girish Kumar M P <quic_gmp@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/dp_rx.c  |  4 ++--
 drivers/net/wireless/ath/ath12k/hal.c    |  4 ++--
 drivers/net/wireless/ath/ath12k/hal.h    |  3 ++-
 drivers/net/wireless/ath/ath12k/hal_rx.c |  4 ++--
 drivers/net/wireless/ath/ath12k/hw.c     | 14 ++++++++------
 5 files changed, 16 insertions(+), 13 deletions(-)

diff --git a/drivers/net/wireless/ath/ath12k/dp_rx.c b/drivers/net/wireless/ath/ath12k/dp_rx.c
index df1966b..4bc8e75 100644
--- a/drivers/net/wireless/ath/ath12k/dp_rx.c
+++ b/drivers/net/wireless/ath/ath12k/dp_rx.c
@@ -4095,7 +4095,7 @@ static int ath12k_dp_rx_h_defrag_reo_reinject(struct ath12k *ar,
 
 	ath12k_hal_rx_buf_addr_info_set(&msdu0->buf_addr_info, buf_paddr,
 					desc_info->cookie,
-					HAL_RX_BUF_RBM_SW3_BM);
+					HAL_RX_BUF_RBM_SW5_BM);
 
 	/* Fill mpdu details into reo entrance ring */
 	srng = &ab->hal.srng_list[dp->reo_reinject_ring.ring_id];
@@ -4576,7 +4576,7 @@ int ath12k_dp_rx_process_err(struct ath12k_base *ab, struct napi_struct *napi,
 		ath12k_hal_rx_msdu_link_info_get(link_desc_va, &num_msdus, msdu_cookies,
 						 &rbm);
 		if (rbm != dp->idle_link_rbm_id &&
-		    rbm != HAL_RX_BUF_RBM_SW3_BM &&
+		    rbm != HAL_RX_BUF_RBM_SW5_BM &&
 		    rbm != src_ab->hw_params->hal_params->rx_buf_rbm) {
 			ab->soc_stats.invalid_rbm++;
 			ath12k_warn(ab, "invalid return buffer manager %d\n", rbm);
diff --git a/drivers/net/wireless/ath/ath12k/hal.c b/drivers/net/wireless/ath/ath12k/hal.c
index a781ff3..01e8119 100644
--- a/drivers/net/wireless/ath/ath12k/hal.c
+++ b/drivers/net/wireless/ath/ath12k/hal.c
@@ -235,8 +235,8 @@ ath12k_hal_qcn9274_tcl_to_wbm_rbm_map[DP_TCL_NUM_RING_MAX] = {
 		.rbm_id = HAL_RX_BUF_RBM_SW2_BM,
 	},
 	{
-		.wbm_ring_num = 4,
-		.rbm_id = HAL_RX_BUF_RBM_SW4_BM,
+		.wbm_ring_num = 3,
+		.rbm_id = HAL_RX_BUF_RBM_SW3_BM,
 	}
 };
 
diff --git a/drivers/net/wireless/ath/ath12k/hal.h b/drivers/net/wireless/ath/ath12k/hal.h
index f3dbd31..d0636fd 100644
--- a/drivers/net/wireless/ath/ath12k/hal.h
+++ b/drivers/net/wireless/ath/ath12k/hal.h
@@ -328,6 +328,7 @@ struct ath12k_hw_group;
 #define HAL_WBM_SW_COOKIE_CONV_CFG_WBM2SW2_EN		BIT(3)
 #define HAL_WBM_SW_COOKIE_CONV_CFG_WBM2SW3_EN		BIT(4)
 #define HAL_WBM_SW_COOKIE_CONV_CFG_WBM2SW4_EN		BIT(5)
+#define HAL_WBM_SW_COOKIE_CONV_CFG_WBM2SW5_EN           BIT(6)
 #define HAL_WBM_SW_COOKIE_CONV_CFG_WBM2SW6_EN		BIT(7)
 #define HAL_WBM_SW_COOKIE_CONV_CFG_GLOBAL_EN		BIT(8)
 
@@ -425,7 +426,7 @@ struct ath12k_hw_group;
 #define HAL_RXDMA_RING_MAX_SIZE_BE			0x000fffff
 #define HAL_WBM2PPE_RELEASE_RING_BASE_MSB_RING_SIZE	0x0000ffff
 
-#define HAL_WBM2SW_REL_ERR_RING_NUM 3
+#define HAL_WBM2SW_REL_ERR_RING_NUM 5
 #define HAL_WBM2SW_PPEDS_TX_CMPLN_MAP_ID 11
 #define HAL_WBM2SW_PPEDS_TX_CMPLN_RING_NUM 6
 /* Add any other errors here and return them in
diff --git a/drivers/net/wireless/ath/ath12k/hal_rx.c b/drivers/net/wireless/ath/ath12k/hal_rx.c
index 17992d2..3da1884 100644
--- a/drivers/net/wireless/ath/ath12k/hal_rx.c
+++ b/drivers/net/wireless/ath/ath12k/hal_rx.c
@@ -377,7 +377,7 @@ int ath12k_hal_wbm_desc_parse_err(struct ath12k_base *ab, void *desc,
 	if (!hw_cc_done) {
 		val = le32_get_bits(wbm_desc->buf_addr_info.info1,
 				    BUFFER_ADDR_INFO1_RET_BUF_MGR);
-		if (val != HAL_RX_BUF_RBM_SW3_BM) {
+		if (val != HAL_RX_BUF_RBM_SW5_BM) {
 			ab->soc_stats.invalid_rbm++;
 			return -EINVAL;
 		}
@@ -389,7 +389,7 @@ int ath12k_hal_wbm_desc_parse_err(struct ath12k_base *ab, void *desc,
 	} else {
 		val = le32_get_bits(wbm_cc_desc->info0,
 				    HAL_WBM_RELEASE_RX_CC_INFO0_RBM);
-		if (val != HAL_RX_BUF_RBM_SW3_BM) {
+		if (val != HAL_RX_BUF_RBM_SW5_BM) {
 			ab->soc_stats.invalid_rbm++;
 			return -EINVAL;
 		}
diff --git a/drivers/net/wireless/ath/ath12k/hw.c b/drivers/net/wireless/ath/ath12k/hw.c
index 84f0857..e5849d9 100644
--- a/drivers/net/wireless/ath/ath12k/hw.c
+++ b/drivers/net/wireless/ath/ath12k/hw.c
@@ -945,7 +945,7 @@ static struct ath12k_hw_ring_mask ath12k_hw_ring_mask_qcn9274_msi8 = {
         .tx  = {
                 ATH12K_TX_RING_MASK_0,
                 ATH12K_TX_RING_MASK_1,
-                ATH12K_TX_RING_MASK_2 | ATH12K_TX_RING_MASK_4,
+                ATH12K_TX_RING_MASK_2 | ATH12K_TX_RING_MASK_3,
                 0, 0, 0, 0, 0
         },
         .rx_mon_dest = {
@@ -1011,7 +1011,7 @@ static struct ath12k_hw_ring_mask ath12k_hw_ring_mask_qcn9274 = {
 		ATH12K_TX_RING_MASK_1,
 		ATH12K_TX_RING_MASK_2,
 		0, 0, 0, 0, 0, 0, 0, 0,
-		ATH12K_TX_RING_MASK_4,
+		ATH12K_TX_RING_MASK_3,
 		0, 0, 0
 	},
 	.rx_mon_dest = {
@@ -1079,7 +1079,7 @@ static struct ath12k_hw_ring_mask ath12k_hw_ring_mask_ipq5332 = {
 		ATH12K_TX_RING_MASK_0,
 		ATH12K_TX_RING_MASK_1,
 		ATH12K_TX_RING_MASK_2,
-		ATH12K_TX_RING_MASK_4,
+		ATH12K_TX_RING_MASK_3,
 		0, 0, 0, 0, 0, 0, 0, 0,
 	},
 	.rx_mon_dest = {
@@ -1747,12 +1747,13 @@ const struct ath12k_hw_regs qcn6432_regs = {
 };
 
 static const struct ath12k_hw_hal_params ath12k_hw_hal_params_qcn9274 = {
-	.rx_buf_rbm = HAL_RX_BUF_RBM_SW3_BM,
+	.rx_buf_rbm = HAL_RX_BUF_RBM_SW5_BM,
 	.wbm2sw_cc_enable = HAL_WBM_SW_COOKIE_CONV_CFG_WBM2SW0_EN |
 			    HAL_WBM_SW_COOKIE_CONV_CFG_WBM2SW1_EN |
 			    HAL_WBM_SW_COOKIE_CONV_CFG_WBM2SW2_EN |
 			    HAL_WBM_SW_COOKIE_CONV_CFG_WBM2SW3_EN |
 			    HAL_WBM_SW_COOKIE_CONV_CFG_WBM2SW4_EN |
+			    HAL_WBM_SW_COOKIE_CONV_CFG_WBM2SW5_EN |
 			    HAL_WBM_SW_COOKIE_CONV_CFG_WBM2SW6_EN,
 };
 
@@ -1810,12 +1811,13 @@ struct pmm_remap ath12k_external_pmm[ATH12K_MAX_HW_INDEX] = {
 };
 
 static const struct ath12k_hw_hal_params ath12k_hw_hal_params_ipq5332 = {
-	.rx_buf_rbm = HAL_RX_BUF_RBM_SW3_BM,
+	.rx_buf_rbm = HAL_RX_BUF_RBM_SW5_BM,
 	.wbm2sw_cc_enable = HAL_WBM_SW_COOKIE_CONV_CFG_WBM2SW0_EN |
 			    HAL_WBM_SW_COOKIE_CONV_CFG_WBM2SW1_EN |
 			    HAL_WBM_SW_COOKIE_CONV_CFG_WBM2SW2_EN |
 			    HAL_WBM_SW_COOKIE_CONV_CFG_WBM2SW3_EN |
-			    HAL_WBM_SW_COOKIE_CONV_CFG_WBM2SW4_EN,
+			    HAL_WBM_SW_COOKIE_CONV_CFG_WBM2SW4_EN |
+			    HAL_WBM_SW_COOKIE_CONV_CFG_WBM2SW5_EN,
 };
 
 static struct ath12k_hw_params ath12k_hw_params[] = {
-- 
2.34.1

