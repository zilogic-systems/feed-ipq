From cde6831827523898f037010c671fac0e1997fb1b Mon Sep 17 00:00:00 2001
From: Rajat Soni <quic_rajson@quicinc.com>
Date: Thu, 26 Sep 2024 15:23:44 +0530
Subject: [PATCH] KW: wifi: ath12k: Add check to validate ce count

In struct ath12k_ce, ce_pipe array has size CE_COUNT_MAX that is 16.
Function ath12k_ce_rx_post_buf is accessing
ab->ce.ce_pipe[ab->hw_params->ce_count-1] and if ab->hw_params->ce_count
value is greater than CE_COUNT_MAX then buffer overflow can happen.

In struct ath12k_internal_pci, ce_msi_data array has size
ATH12K_QCN6432_CE_COUNT that is 12. In functions
ath12k_ce_srng_msi_ring_params_setup and ath12k_pcic_config_gic_msi_irq,
there is a possibility that we access beyond ATH12K_QCN6432_CE_COUNT.
Due to this buffer overflow can happen.

To resolve this issue we should have a check for index value.

Patch-dependency: none

Patch-work: none

Signed-off-by: Rajat Soni <quic_rajson@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/ce.c   | 5 +++++
 drivers/net/wireless/ath/ath12k/core.c | 4 ++++
 drivers/net/wireless/ath/ath12k/pcic.c | 5 +++++
 3 files changed, 14 insertions(+)

diff --git a/drivers/net/wireless/ath/ath12k/ce.c b/drivers/net/wireless/ath/ath12k/ce.c
index 829555d..42afa90 100644
--- a/drivers/net/wireless/ath/ath12k/ce.c
+++ b/drivers/net/wireless/ath/ath12k/ce.c
@@ -587,6 +587,11 @@ static void ath12k_ce_srng_msi_ring_params_setup(struct ath12k_base *ab, u32 ce_
 	u32 addr_hi;
 	int ret;
 
+	if ((ab->hif.bus == ATH12K_BUS_HYBRID) &&
+	    (ce_id >= ATH12K_QCN6432_CE_COUNT)) {
+		ath12k_warn(ab, "Failed to setup ring params ce_id %d", ce_id);
+		return;
+	}
 	ret = ath12k_hif_get_user_msi_vector(ab, "CE",
 					     &msi_data_count, &msi_data_start,
 					     &msi_irq_start);
diff --git a/drivers/net/wireless/ath/ath12k/core.c b/drivers/net/wireless/ath/ath12k/core.c
index 99237ee..de1ddc0 100644
--- a/drivers/net/wireless/ath/ath12k/core.c
+++ b/drivers/net/wireless/ath/ath12k/core.c
@@ -1826,6 +1826,10 @@ int ath12k_core_qmi_firmware_ready(struct ath12k_base *ab)
 	struct ath12k_hw_group *ag;
 	int ret;
 
+	if (ab->hw_params->ce_count > CE_COUNT_MAX) {
+		ath12k_warn(ab, "Invalid ce count value %d", ab->hw_params->ce_count);
+		return -EINVAL;
+	}
 	ret = ath12k_core_start_firmware(ab, ab->fw_mode);
 	if (ret) {
 		ath12k_err(ab, "failed to start firmware: %d\n", ret);
diff --git a/drivers/net/wireless/ath/ath12k/pcic.c b/drivers/net/wireless/ath/ath12k/pcic.c
index 272c292..4f79725 100644
--- a/drivers/net/wireless/ath/ath12k/pcic.c
+++ b/drivers/net/wireless/ath/ath12k/pcic.c
@@ -459,6 +459,11 @@ static int ath12k_pcic_config_gic_msi_irq(struct ath12k_base *ab,
 	int irq_idx, ret;
 	u8 userpd_id = ab->userpd_id;
 
+	if (i >= ATH12K_QCN6432_CE_COUNT) {
+		ath12k_warn(ab, "Invalid ce count value %d", i);
+		return -EINVAL;
+	}
+
 	tasklet_setup(&ce_pipe->intr_tq, ath12k_pcic_ce_tasklet);
 	irq_idx = ATH12K_PCI_IRQ_CE0_OFFSET + i;
 
-- 
2.34.1

