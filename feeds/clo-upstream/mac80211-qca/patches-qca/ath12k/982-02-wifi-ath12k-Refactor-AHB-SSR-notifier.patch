From 8427b654734cefc3e932fd3857e9683ae1c61747 Mon Sep 17 00:00:00 2001
From: Sowmiya Sree Elavalagan <quic_ssreeela@quicinc.com>
Date: Sat, 12 Oct 2024 15:55:03 +0530
Subject: [PATCH 2/5] wifi: ath12k: Refactor AHB SSR notifier

Remove notifier registration for UserPD. 
Move RootPD notifier registration to ahb as it is bus specific.

Signed-off-by: Sowmiya Sree Elavalagan <quic_ssreeela@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/ahb.c  |  14 ---
 drivers/net/wireless/ath/ath12k/ahb.h  |  62 ----------
 drivers/net/wireless/ath/ath12k/core.c | 160 -------------------------
 drivers/net/wireless/ath/ath12k/hif.h  |  18 ---
 4 files changed, 254 deletions(-)

--- a/drivers/net/wireless/ath/ath12k/ahb.c
+++ b/drivers/net/wireless/ath/ath12k/ahb.c
@@ -938,16 +938,6 @@ static int ath12k_ahb_map_service_to_pip
 	return 0;
 }
 
-static int ath12k_ahb_ssr_notifier_reg(struct ath12k_base *ab)
-{
-	return ath12k_rproc_register_subsys_notifier(ab);
-}
-
-static int ath12k_ahb_ssr_notifier_unreg(struct ath12k_base *ab)
-{
-	return ath12k_rproc_unregister_subsys_notifier(ab);
-}
-
 #ifdef CPTCFG_ATH12K_PPE_DS_SUPPORT
 int ath12k_ahb_ppeds_register_interrupts(struct ath12k_base *ab, int type, int vector,
 					int ring_num)
@@ -1072,8 +1062,6 @@ static struct ath12k_hif_ops ath12k_ahb_
 	.map_service_to_pipe = ath12k_ahb_map_service_to_pipe,
 	.power_down = ath12k_ahb_power_down,
 	.power_up = ath12k_ahb_power_up,
-	.ssr_notifier_reg = ath12k_ahb_ssr_notifier_reg,
-	.ssr_notifier_unreg = ath12k_ahb_ssr_notifier_unreg,
 	.dp_umac_reset_irq_config = ath12k_ahb_dp_umac_config_irq,
 	.dp_umac_reset_enable_irq = ath12k_ahb_dp_umac_reset_enable_irq,
 	.dp_umac_reset_free_irq = ath12k_ahb_dp_umac_reset_free_irq,
@@ -1101,8 +1089,6 @@ static const struct ath12k_hif_ops ath12
 	.config_static_window = ath12k_pcic_config_static_window,
 	.get_msi_irq = ath12k_pcic_get_msi_irq,
 	.map_service_to_pipe = ath12k_pcic_map_service_to_pipe,
-	.ssr_notifier_reg = ath12k_ahb_ssr_notifier_reg,
-	.ssr_notifier_unreg = ath12k_ahb_ssr_notifier_unreg,
 #ifdef CPTCFG_ATH12K_PPE_DS_SUPPORT
 	.ppeds_register_interrupts = ath12k_pcic_ppeds_register_interrupts,
 	.ppeds_free_interrupts = ath12k_pcic_ppeds_free_interrupts,
--- a/drivers/net/wireless/ath/ath12k/ahb.h
+++ b/drivers/net/wireless/ath/ath12k/ahb.h
@@ -98,68 +98,6 @@ static inline struct ath12k_ahb *ath12k_
 {
 	return (struct ath12k_ahb *)ab->drv_priv;
 }
-static inline int ath12k_rproc_register_subsys_notifier(struct ath12k_base *ab)
-{
-	struct ath12k_ahb *ab_ahb = ath12k_ahb_priv(ab);
-#ifdef CONFIG_REMOTEPROC
-#if (LINUX_VERSION_CODE < KERNEL_VERSION(6, 1, 0))
-	return rproc_register_subsys_notifier(ab_ahb->tgt_rrproc->name,
-					      &ab->rpd_ssr_nb,
-					      &ab->rpd_atomic_ssr_nb);
-#else
-	ab->ssr_atomic_upd_handle = qcom_register_ssr_atomic_notifier(ab_ahb->tgt_rproc->name,
-								      &ab->atomic_ssr_nb);
-	if (!ab->ssr_atomic_upd_handle) {
-		ath12k_err(ab, "failed to register user_pd atomic handle\n");
-		return -EINVAL;
-	}
-
-	ab->ssr_upd_handle = qcom_register_ssr_notifier(ab_ahb->tgt_rproc->name, &ab->ssr_nb);
-	if (!ab->ssr_upd_handle)
-		return -EINVAL;
-
-	if (ab->userpd_id == USERPD_0 && ab->multi_pd_arch) {
-		ab->ssr_atomic_rpd_handle = qcom_register_ssr_atomic_notifier(ab_ahb->tgt_rrproc->name,
-									      &ab->rpd_atomic_ssr_nb);
-		if (!ab->ssr_atomic_rpd_handle) {
-			ath12k_err(ab, "failed to register root_pd atomic handle\n");
-			return -EINVAL;
-		}
-		ab->ssr_rpd_handle = qcom_register_ssr_notifier(ab_ahb->tgt_rrproc->name,
-								&ab->rpd_ssr_nb);
-		if (!ab->ssr_rpd_handle)
-			return -EINVAL;
-	}
-	return 0;
-#endif
-#else
-	return -ENODEV;
-#endif
-}
-static inline int ath12k_rproc_unregister_subsys_notifier(struct ath12k_base *ab)
-{
-#ifdef CONFIG_REMOTEPROC
-#if (LINUX_VERSION_CODE < KERNEL_VERSION(6, 1, 0))
-	struct ath12k_ahb *ab_ahb = ath12k_ahb_priv(ab);
-	return rproc_unregister_subsys_notifier(ab_ahb->tgt_rrproc->name, &ab->ssr_nb,
-			&ab->atomic_ssr_nb);
-#else
-	if (ab->ssr_upd_handle)
-		qcom_unregister_ssr_notifier(ab->ssr_upd_handle, &ab->ssr_nb);
-	if (ab->ssr_atomic_upd_handle)
-		qcom_unregister_ssr_atomic_notifier(ab->ssr_atomic_upd_handle,
-						    &ab->atomic_ssr_nb);
-	if (ab->ssr_atomic_rpd_handle)
-		qcom_unregister_ssr_atomic_notifier(ab->ssr_atomic_rpd_handle,
-						    &ab->rpd_atomic_ssr_nb);
-	if (ab->ssr_rpd_handle)
-		qcom_unregister_ssr_notifier(ab->ssr_rpd_handle, &ab->rpd_ssr_nb);
-	return 0;
-#endif
-#else
-	return -ENODEV;
-#endif
-}
 
 static const struct ath12k_bus_params ath12k_ahb_bus_params = {
 	.fixed_bdf_addr = false,
--- a/drivers/net/wireless/ath/ath12k/core.c
+++ b/drivers/net/wireless/ath/ath12k/core.c
@@ -2017,152 +2017,6 @@ static void ath12k_coredump_download_ahb
 	ath12k_core_issue_bug_on(ab);
 }
 
-/* Print the driver stats and crash the system on receiving this notification */
-static int ath12k_core_ssr_notifier_cb(struct notifier_block *nb,
-				       const unsigned long event,
-				       void *data)
-{
-	struct ath12k_base *ab = container_of(nb, struct ath12k_base, ssr_nb);
-	struct ath12k_ahb *ab_ahb = ath12k_ahb_priv(ab);
-
-	if (ab_ahb->collect_dump && event == ATH12K_SSR_POWERUP) {
-		ab_ahb->collect_dump = false;
-		wake_up(&ab->ssr_dump_wq);
-		return NOTIFY_OK;
-	}
-
-	return NOTIFY_DONE;
-}
-
-static int ath12k_core_rpd_ssr_notifier_cb(struct notifier_block *nb,
-					   const unsigned long event,
-					   void *data)
-{
-	struct ath12k_base *ab = container_of(nb, struct ath12k_base, rpd_ssr_nb);
-	struct ath12k_ahb *ab_ahb = ath12k_ahb_priv(ab);
-
-	if (ab_ahb->collect_dump && event == ATH12K_SSR_POWERUP) {
-		ab_ahb->collect_dump = false;
-		wake_up(&ab->ssr_dump_wq);
-		return NOTIFY_OK;
-	}
-
-	return NOTIFY_DONE;
-}
-
-static int ath12k_core_check_ssr_notifier_as_expected(struct ath12k_base *ab,
-						      void *data,
-						      const char *node)
-{
-	phandle rproc_phandle;
-	struct device *dev = ab->dev;
-	struct platform_device *pdev;
-	struct device_node *rproc_node;
-	struct platform_device *ssr_pdev = data;
-
-	if (of_property_read_u32(dev->of_node, node, &rproc_phandle))
-		return -EINVAL;
-
-	rproc_node = of_find_node_by_phandle(rproc_phandle);
-	if (!rproc_node) {
-		ath12k_warn(ab, "ssr notification failed to get rproc_node\n");
-		return -EINVAL;
-	}
-
-	pdev = of_find_device_by_node(rproc_node);
-	if (!pdev) {
-		ath12k_warn(ab, "Failed to get pdev from device node\n");
-		return -EINVAL;
-	}
-
-	if (!ab->in_panic && (strcmp(ssr_pdev->name, pdev->name) != 0)) {
-		ath12k_warn(ab, "SSR notification mismatch %s  pdev name:%s\n",
-			    ssr_pdev->name, pdev->name);
-		return -EINVAL;
-	}
-
-	return 0;
-}
-
-static int ath12k_core_atomic_ssr_notifier_cb(struct notifier_block *nb,
-					      const unsigned long event,
-					      void *data)
-{
-	struct ath12k_base *ab = container_of(nb, struct ath12k_base, atomic_ssr_nb);
-	struct ath12k_ahb *ab_ahb = ath12k_ahb_priv(ab);
-	struct platform_device *ssr_pdev = data;
-	int ret;
-
-	if (event != ATH12K_SSR_PREPARE_SHUTDOWN)
-		return NOTIFY_DONE;
-
-	if (!test_bit(ATH12K_FLAG_REGISTERED, &ab->dev_flags))
-		return NOTIFY_DONE;
-
-	ab_ahb->collect_dump = true;
-
-	ret = ath12k_core_check_ssr_notifier_as_expected(ab, data, "qcom,rproc");
-	if (ret)
-		return NOTIFY_DONE;
-
-	if (strcmp(ssr_pdev->name, ab_ahb->tgt_rproc->name) == 0) {
-		ab_ahb->tgt_rproc->state = RPROC_CRASHED;
-	}
-
-	if (!(test_bit(ATH12K_FLAG_UNREGISTERING, &ab->ag->dev_flags))) {
-		set_bit(ATH12K_FLAG_RECOVERY, &ab->dev_flags);
-		set_bit(ATH12K_FLAG_RECOVERY, &ab->ag->dev_flags);
-		set_bit(ATH12K_FLAG_CRASH_FLUSH, &ab->dev_flags);
-		ab_ahb->crash_type = ATH12K_RPROC_USERPD_CRASH;
-		queue_work(ab->workqueue_aux, &ab->reset_work);
-	}
-
-	ath12k_hal_dump_srng_stats(ab);
-
-	return NOTIFY_OK;
-}
-
-/* Print the driver stats and crash the system on receiving this notification */
-static int ath12k_core_rpd_atomic_ssr_notifier_cb(struct notifier_block *nb,
-						  const unsigned long event,
-						  void *data)
-{
-	struct ath12k_base *ab = container_of(nb, struct ath12k_base, rpd_atomic_ssr_nb);
-	struct ath12k_hw_group *ag = ab->ag;
-	struct platform_device *ssr_pdev = data;
-	struct ath12k_ahb *ab_ahb = ath12k_ahb_priv(ab);
-	int ret;
-
-	if (event != ATH12K_SSR_PREPARE_SHUTDOWN)
-		return NOTIFY_DONE;
-
-	if (!test_bit(ATH12K_FLAG_REGISTERED, &ag->dev_flags))
-		return NOTIFY_DONE;
-
-	ab_ahb->collect_dump = true;
-	ret = ath12k_core_check_ssr_notifier_as_expected(ab, data, "qcom,rproc_rpd");
-	if (ret)
-		return NOTIFY_DONE;
-
-	/* Changing the rrpoc->state to crashed disabled the
-	 * remoteproc module to do the recovery process.
-	 * This module will take care of the rrproc recovery process.
-	 */
-	if (strcmp(ssr_pdev->name, ab_ahb->tgt_rrproc->name) == 0) {
-		ab_ahb->tgt_rrproc->state = RPROC_CRASHED;
-	}
-
-	if (!(test_bit(ATH12K_FLAG_UNREGISTERING, &ag->dev_flags))) {
-		set_bit(ATH12K_FLAG_RECOVERY, &ag->dev_flags);
-		set_bit(ATH12K_FLAG_CRASH_FLUSH, &ag->dev_flags);
-		queue_work(ab->workqueue_aux, &ag->reset_work);
-	}
-
-	/* TODO Add more driver stats */
-
-	return NOTIFY_OK;
-}
-
 u8 ath12k_core_get_total_num_vdevs(struct ath12k_base *ab)
 {
 	if (ab->ag && ab->ag->num_chip >= ATH12K_MIN_NUM_DEVICES_NLINK)
@@ -3960,16 +3814,6 @@ int ath12k_core_init(struct ath12k_base
 	 * to be called on fw crash
 	 */
 	init_waitqueue_head(&ab->ipci.gic_msi_waitq);
-	ab->ssr_nb.notifier_call = ath12k_core_ssr_notifier_cb;
-	ab->atomic_ssr_nb.notifier_call = ath12k_core_atomic_ssr_notifier_cb;
-	ab->rpd_ssr_nb.notifier_call = ath12k_core_rpd_ssr_notifier_cb;
-	ab->rpd_atomic_ssr_nb.notifier_call = ath12k_core_rpd_atomic_ssr_notifier_cb;
-
-	ret = ath12k_hif_ssr_notifier_reg(ab);
-	if (ret) {
-		ath12k_err(ab, "failed to register ssr notifier callback\n");
-		return ret;
-	}
 
 	if (of_property_read_u32(ab->dev->of_node, "qcom,wide_band", &wide_band))
 		ath12k_dbg(ab, ATH12K_DBG_BOOT, "Wide band property not present");
@@ -4128,7 +3972,6 @@ static void ath12k_core_hw_group_stop(st
 void ath12k_core_deinit(struct ath12k_base *ab)
 {
 	struct ath12k_hw_group *ag = ab->ag;
-	int ret;
 
 	mutex_lock(&ag->mutex_lock);
 
@@ -4155,10 +3998,6 @@ void ath12k_core_deinit(struct ath12k_ba
 	/* Unregister the ssr notifier as we are not intersted
 	 * in receving these notifications after mac is unregistered.
 	 */
-	ret = ath12k_hif_ssr_notifier_unreg(ab);
-	if (ret)
-		ath12k_err(ab, "failed to un-register ssr notifier callback\n");
-
 	mutex_unlock(&ag->mutex_lock);
 
 	ath12k_core_put_hw_group(ab);
--- a/drivers/net/wireless/ath/ath12k/hif.h
+++ b/drivers/net/wireless/ath/ath12k/hif.h
@@ -34,8 +34,6 @@ struct ath12k_hif_ops {
 	void (*ce_irq_enable)(struct ath12k_base *ab);
 	void (*ce_irq_disable)(struct ath12k_base *ab);
 	void (*get_ce_msi_idx)(struct ath12k_base *ab, u32 ce_id, u32 *msi_idx);
-	int (*ssr_notifier_reg)(struct ath12k_base *ab);
-	int (*ssr_notifier_unreg)(struct ath12k_base *ab);
 	void (*config_static_window)(struct ath12k_base *ab);
 	int (*get_msi_irq)(struct ath12k_base *ab, unsigned int vector);
 
@@ -154,22 +152,6 @@ static inline void ath12k_hif_get_ce_msi
 		*msi_data_idx = ce_id;
 }
 
-static inline int ath12k_hif_ssr_notifier_reg(struct ath12k_base *ab)
-{
-	if (!ab->hif.ops->ssr_notifier_reg)
-		return 0;
-
-	return ab->hif.ops->ssr_notifier_reg(ab);
-}
-
-static inline int ath12k_hif_ssr_notifier_unreg(struct ath12k_base *ab)
-{
-	if (!ab->hif.ops->ssr_notifier_unreg)
-		return 0;
-
-	return ab->hif.ops->ssr_notifier_unreg(ab);
-}
-
 static inline void ath12k_hif_ce_irq_enable(struct ath12k_base *ab)
 {
 	if (ab->hif.ops->ce_irq_enable)
