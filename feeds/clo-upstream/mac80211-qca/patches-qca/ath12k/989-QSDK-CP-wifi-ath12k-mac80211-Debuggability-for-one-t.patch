From cb25d431a344534da1ff4f609e052cf12b7c25d9 Mon Sep 17 00:00:00 2001
From: Ramya Gnanasekar <quic_rgnanase@quicinc.com>
Date: Wed, 27 Nov 2024 19:45:29 +0530
Subject: [PATCH] QSDK:CP:wifi:ath12k/mac80211 Debuggability for one time 
 occurence

Q6 crash happens when host sends vdev create with same MLD address in
same radio. MLD address is copied from ahvif->addr which in turn is
copied from ieee80211_vif structure.

Add debugs to check the address assigned to ieee80211_vif structure and
to print the address for each vdev create since the issue is
inconsistent and due to lack of debugs in the path, it is difficult to
debug.

Note: One RCA is done, the changes will be reverted.

Patch-work: None
Patch-dependency: None

Signed-off-by: Ramya Gnanasekar <quic_rgnanase@quicinc.com>
---
 drivers/net/wireless/ath/ath12k/mac.c | 4 ++++
 net/mac80211/iface.c                  | 2 ++
 2 files changed, 6 insertions(+)

diff --git a/drivers/net/wireless/ath/ath12k/mac.c b/drivers/net/wireless/ath/ath12k/mac.c
index 12bb430..7e89db2 100644
--- a/drivers/net/wireless/ath/ath12k/mac.c
+++ b/drivers/net/wireless/ath/ath12k/mac.c
@@ -12321,6 +12321,8 @@ static int ath12k_mac_setup_vdev_create_args(struct ath12k_link_vif *arvif,
 			return -EINVAL;
 		}
 		ether_addr_copy(arg->mld_addr, ahvif->vif->addr);
+		ath12k_dbg(ar->ab, ATH12K_DBG_MAC, "MLD address:%pM for vdev:%d arvif addr :%pM",
+			   arg->mld_addr, arvif->vdev_id, arvif->addr);
 	}
 
 	return 0;
@@ -13001,6 +13003,8 @@ static int ath12k_mac_op_add_interface(struct ieee80211_hw *hw,
 	ahvif->vif = vif;
 	ahvif->ah = ah;
 
+	ath12k_dbg(NULL, ATH12K_DBG_MAC, "Add interface vif address:%pM netdev:%s", vif->addr, wdev->netdev->name);
+
 	ahvif->deflink.ahvif = ahvif;
 	ahvif->mcbc_gsn = 0;
 
diff --git a/net/mac80211/iface.c b/net/mac80211/iface.c
index 3744f32..f5eeb27 100644
--- a/net/mac80211/iface.c
+++ b/net/mac80211/iface.c
@@ -310,6 +310,7 @@ static int ieee80211_change_mac(struct net_device *dev, void *addr)
 	if (ret == 0) {
 		memcpy(sdata->vif.addr, sa->sa_data, ETH_ALEN);
 		ether_addr_copy(sdata->vif.bss_conf.addr, sdata->vif.addr);
+		sdata_info(sdata,"Address changed addr:%pM name:%s\n", sdata->vif.addr, sdata->name);
 	}
 
 	/* Regardless of eth_mac_addr() return we still want to add the
@@ -2421,6 +2422,7 @@ int ieee80211_if_add(struct ieee80211_local *local, const char *name,
 		memcpy(sdata->vif.addr, ndev->dev_addr, ETH_ALEN);
 		ether_addr_copy(sdata->vif.bss_conf.addr, sdata->vif.addr);
 		memcpy(sdata->name, ndev->name, IFNAMSIZ);
+		sdata_info(sdata, "Address assigned:%pM name:%s\n", sdata->vif.addr, sdata->name);
 
 		if (txq_size) {
 			txqi = netdev_priv(ndev) + size;
-- 
2.34.1

