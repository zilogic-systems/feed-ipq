From dc3996d9c777357fd22e20b15ee165ce416a6097 Mon Sep 17 00:00:00 2001
From: Pradeep Kumar Chitrapu <quic_pradeepc@quicinc.com>
Date: Fri, 10 Dec 2021 10:53:05 -0800
Subject: [PATCH 24/27] mac80211: copy MU-MIMO and OFDMA EHT capability flags
 to driver

Pass MU-MIMO and OFDMA configurations set in EHT IEs from user
space to driver.

Signed-off-by: Pradeep Kumar Chitrapu <quic_pradeepc@quicinc.com>
---
 include/net/mac80211.h | 10 ++++++++++
 net/mac80211/cfg.c     | 12 ++++++++++++
 2 files changed, 22 insertions(+)

--- a/include/net/mac80211.h
+++ b/include/net/mac80211.h
@@ -659,6 +659,12 @@ struct ieee80211_fils_discovery {
  * @he_full_ul_mumimo: does this BSS support the reception (AP) or transmission
  *     (non-AP STA) of an HE TB PPDU on an RU that spans the entire PPDU
  *     bandwidth
+ * @eht_su_beamformer: does this BSS support operation as an EHT SU beamformer
+ * @eht_su_beamformee: does this BSS support operation as an EHT SU beamformee
+ * @eht_mu_beamformer: does this BSS support operation as an EHT MU beamformer
+ * @eht_80mhz_full_ul_mumimo: does this BSS support the reception (AP) or transmission
+ *	(non-AP STA) of an EHT TB PPDU on an RU that spans the entire PPDU
+ *	bandwidth
  * @he_obss_pd: OBSS Packet Detection parameters.
  * @he_bss_color: BSS coloring settings, if BSS supports HE
  * @fils_discovery: FILS discovery configuration
@@ -697,12 +703,6 @@ struct ieee80211_fils_discovery {
  *	beamformer
  * @vht_mu_beamformee: in AP mode, does this BSS support operation as an VHT MU
  *	beamformee
- * @eht_su_beamformer: in AP-mode, does this BSS enable operation as an EHT SU
- *	beamformer
- * @eht_su_beamformee: in AP-mode, does this BSS enable operation as an EHT SU
- *	beamformee
- * @eht_mu_beamformer: in AP-mode, does this BSS enable operation as an EHT MU
- *	beamformer
  * @nss_ap_isolate: Used for notifying the NSS host about AP isolate feature
  * @beacon_tx_mode: Beacon Tx Mode setting.
  */
@@ -779,6 +779,10 @@ struct ieee80211_bss_conf {
 	u8 pwr_reduction;
 	bool eht_support;
 	u16 eht_puncturing;
+	bool eht_su_beamformer;
+	bool eht_su_beamformee;
+	bool eht_mu_beamformer;
+	bool eht_80mhz_full_bw_ul_mumimo;
 
 	bool csa_active;
 	u16 csa_punct_bitmap;
@@ -797,9 +801,6 @@ struct ieee80211_bss_conf {
 	bool vht_su_beamformee;
 	bool vht_mu_beamformer;
 	bool vht_mu_beamformee;
-	bool eht_su_beamformer;
-	bool eht_su_beamformee;
-	bool eht_mu_beamformer;
 	bool nss_ap_isolate;
 	enum nl80211_beacon_tx_mode beacon_tx_mode;
 
--- a/net/mac80211/cfg.c
+++ b/net/mac80211/cfg.c
@@ -1373,6 +1373,9 @@ static int ieee80211_start_ap(struct wip
 				(IEEE80211_EHT_PHY_CAP7_MU_BEAMFORMER_80MHZ |
 				 IEEE80211_EHT_PHY_CAP7_MU_BEAMFORMER_160MHZ |
 				 IEEE80211_EHT_PHY_CAP7_MU_BEAMFORMER_320MHZ);
+		link_conf->eht_80mhz_full_bw_ul_mumimo =
+			params->eht_cap->fixed.phy_cap_info[7] &
+				IEEE80211_EHT_PHY_CAP7_NON_OFDMA_UL_MU_MIMO_80MHZ;
 	} else {
 		link_conf->eht_su_beamformer = false;
 		link_conf->eht_su_beamformee = false;
