From 8ee049fcd08c9e98e374f63f1a003a334d128867 Mon Sep 17 00:00:00 2001
From: Pradeep Kumar Chitrapu <quic_pradeepc@quicinc.com>
Date: Thu, 12 Jan 2023 09:46:29 -0800
Subject: [PATCH 1/3] mac80211: framework to support MLO recovery

Extend current ieee80211_reconfig to account for multiple links
BSS reconfig. Currently supports only AP mode.

Co-Developed-by: Ramanathan Choodamani <quic_rchoodam@quicinc.com>
Signed-off-by: Ramanathan Choodamani <quic_rchoodam@quicinc.com>
Signed-off-by: Pradeep Kumar Chitrapu <quic_pradeepc@quicinc.com>
---
 net/mac80211/util.c | 230 ++++++++++++++++++++++++--------------------
 1 file changed, 128 insertions(+), 102 deletions(-)

--- a/net/mac80211/util.c
+++ b/net/mac80211/util.c
@@ -2474,33 +2474,122 @@ static int ieee80211_reconfig_nan(struct
 	return 0;
 }
 
-static void ieee80211_reconfig_ap_links(struct ieee80211_local *local,
-					struct ieee80211_sub_if_data *sdata,
-					u64 changed)
+static int ieee80211_reconfig_link_bss(struct ieee80211_sub_if_data *sdata,
+				       struct ieee80211_link_data *link,
+				       struct ieee80211_bss_conf *link_conf)
 {
-	int link_id;
+	struct ieee80211_local *local = sdata->local;
+	int i, res, changed = 0;
 
-	for (link_id = 0; link_id < ARRAY_SIZE(sdata->link); link_id++) {
-		struct ieee80211_link_data *link;
-
-		if (!(sdata->vif.active_links & BIT(link_id)))
-			continue;
-
-		link = sdata_dereference(sdata->link[link_id], sdata);
-		if (!link)
-			continue;
-
-		if (rcu_access_pointer(link->u.ap.beacon))
-			drv_start_ap(local, sdata, link->conf);
-
-		if (!link->conf->enable_beacon)
-			continue;
+	switch (sdata->vif.type) {
+	case NL80211_IFTYPE_AP_VLAN:
+	case NL80211_IFTYPE_MONITOR:
+		break;
+	case NL80211_IFTYPE_ADHOC:
+		if (sdata->vif.cfg.ibss_joined)
+			WARN_ON(drv_join_ibss(local, sdata));
+		fallthrough;
+	default:
+		ieee80211_reconfig_stations(sdata);
+		fallthrough;
+	case NL80211_IFTYPE_AP: /* AP stations are handled later */
+		for (i = 0; i < IEEE80211_NUM_ACS; i++)
+			drv_conf_tx(local, link, i,
+					&link->tx_conf[i]);
+		break;
+	}
 
-		changed |= BSS_CHANGED_BEACON |
-			   BSS_CHANGED_BEACON_ENABLED;
+	/* common change flags for all interface types */
+	changed = BSS_CHANGED_ERP_CTS_PROT |
+		  BSS_CHANGED_ERP_PREAMBLE |
+		  BSS_CHANGED_ERP_SLOT |
+		  BSS_CHANGED_HT |
+		  BSS_CHANGED_BASIC_RATES |
+		  BSS_CHANGED_BEACON_INT |
+		  BSS_CHANGED_BSSID |
+		  BSS_CHANGED_CQM |
+		  BSS_CHANGED_QOS |
+		  BSS_CHANGED_IDLE |
+		  BSS_CHANGED_TXPOWER |
+		  BSS_CHANGED_MCAST_RATE;
+
+	if (link_conf->mu_mimo_owner)
+		changed |= BSS_CHANGED_MU_GROUPS;
+
+	switch (sdata->vif.type) {
+	case NL80211_IFTYPE_STATION:
+		changed |= BSS_CHANGED_PS;
+		changed &= ~BSS_CHANGED_IDLE;
+		ieee80211_link_info_change_notify(sdata, link, changed);
 
+		changed = BSS_CHANGED_ASSOC |
+			  BSS_CHANGED_ARP_FILTER |
+			  BSS_CHANGED_IDLE;
+
+		/* Re-send beacon info report to the driver */
+		if (link->u.mgd.have_beacon)
+			changed |= BSS_CHANGED_BEACON_INFO;
+
+		if (link_conf->max_idle_period ||
+			link_conf->protected_keep_alive)
+			changed |= BSS_CHANGED_KEEP_ALIVE;
+
+		ieee80211_vif_cfg_change_notify(sdata, changed);
+		break;
+	case NL80211_IFTYPE_OCB:
+		changed |= BSS_CHANGED_OCB;
 		ieee80211_link_info_change_notify(sdata, link, changed);
+		break;
+	case NL80211_IFTYPE_ADHOC:
+		changed |= BSS_CHANGED_IBSS;
+		fallthrough;
+	case NL80211_IFTYPE_AP:
+		changed |= BSS_CHANGED_P2P_PS;
+
+		if (link_conf->ftm_responder == 1 &&
+			wiphy_ext_feature_isset(sdata->local->hw.wiphy,
+				NL80211_EXT_FEATURE_ENABLE_FTM_RESPONDER))
+			changed |= BSS_CHANGED_FTM_RESPONDER;
+
+		if (sdata->vif.type == NL80211_IFTYPE_AP) {
+			changed |= BSS_CHANGED_AP_PROBE_RESP;
+
+			if (rcu_access_pointer(link->u.ap.beacon))
+				drv_start_ap(local, sdata,
+						 link->conf);
+
+			ieee80211_vif_cfg_change_notify(sdata, BSS_CHANGED_SSID);
+		}
+		fallthrough;
+	case NL80211_IFTYPE_MESH_POINT:
+		if (link_conf->enable_beacon) {
+			changed |= BSS_CHANGED_BEACON |
+				   BSS_CHANGED_BEACON_ENABLED;
+			ieee80211_link_info_change_notify(sdata, link, changed &~ BSS_CHANGED_IDLE);
+		}
+		break;
+	case NL80211_IFTYPE_NAN:
+		res = ieee80211_reconfig_nan(sdata);
+		if (res < 0) {
+			ieee80211_handle_reconfig_failure(local);
+			return res;
+		}
+		break;
+	case NL80211_IFTYPE_AP_VLAN:
+	case NL80211_IFTYPE_MONITOR:
+	case NL80211_IFTYPE_P2P_DEVICE:
+		/* nothing to do */
+		break;
+	case NL80211_IFTYPE_UNSPECIFIED:
+	case NUM_NL80211_IFTYPES:
+	case NL80211_IFTYPE_P2P_CLIENT:
+	case NL80211_IFTYPE_P2P_GO:
+	case NL80211_IFTYPE_WDS:
+		WARN_ON(1);
+		break;
 	}
+
+	return 0;
 }
 
 int ieee80211_reconfig(struct ieee80211_local *local)
@@ -2509,7 +2598,7 @@ int ieee80211_reconfig(struct ieee80211_
 	struct ieee80211_sub_if_data *sdata;
 	struct ieee80211_chanctx *ctx;
 	struct sta_info *sta;
-	int res, i;
+	int res;
 	bool reconfig_due_to_wowlan = false;
 	struct ieee80211_sub_if_data *sched_scan_sdata;
 	struct cfg80211_sched_scan_request *sched_scan_req;
@@ -2643,6 +2732,7 @@ int ieee80211_reconfig(struct ieee80211_
 
 		sdata = wiphy_dereference(local->hw.wiphy,
 					  local->monitor_sdata);
+
 		if (sdata && ieee80211_sdata_running(sdata))
 			ieee80211_assign_chanctx(local, sdata, &sdata->deflink);
 	}
@@ -2654,18 +2744,6 @@ int ieee80211_reconfig(struct ieee80211_
 
 	/* Finally also reconfigure all the BSS information */
 	list_for_each_entry(sdata, &local->interfaces, list) {
-		/* common change flags for all interface types - link only */
-		u64 changed = BSS_CHANGED_ERP_CTS_PROT |
-			      BSS_CHANGED_ERP_PREAMBLE |
-			      BSS_CHANGED_ERP_SLOT |
-			      BSS_CHANGED_HT |
-			      BSS_CHANGED_BASIC_RATES |
-			      BSS_CHANGED_BEACON_INT |
-			      BSS_CHANGED_BSSID |
-			      BSS_CHANGED_CQM |
-			      BSS_CHANGED_QOS |
-			      BSS_CHANGED_TXPOWER |
-			      BSS_CHANGED_MCAST_RATE;
 		struct ieee80211_link_data *link = NULL;
 		unsigned int link_id;
 		u32 active_links = 0;
@@ -2686,9 +2764,11 @@ int ieee80211_reconfig(struct ieee80211_
 				sdata->vif.active_links = BIT(link_id);
 			}
 
-			drv_change_vif_links(local, sdata, 0,
-					     sdata->vif.active_links,
-					     old);
+			if (sdata->vif.type != NL80211_IFTYPE_AP_VLAN ||
+			    ieee80211_hw_check(&local->hw, SUPPORTS_NSS_OFFLOAD))
+				drv_change_vif_links(local, sdata, 0,
+						     sdata->vif.active_links,
+						     old);
 		}
 
 		for (link_id = 0;
@@ -2705,124 +2785,21 @@ int ieee80211_reconfig(struct ieee80211_
 			ieee80211_assign_chanctx(local, sdata, link);
 		}
 
-		switch (sdata->vif.type) {
-		case NL80211_IFTYPE_AP_VLAN:
-		case NL80211_IFTYPE_MONITOR:
-			break;
-		case NL80211_IFTYPE_ADHOC:
-			if (sdata->vif.cfg.ibss_joined)
-				WARN_ON(drv_join_ibss(local, sdata));
-			fallthrough;
-		default:
-			ieee80211_reconfig_stations(sdata);
-			fallthrough;
-		case NL80211_IFTYPE_AP: /* AP stations are handled later */
-			for (i = 0; i < IEEE80211_NUM_ACS; i++)
-				drv_conf_tx(local, &sdata->deflink, i,
-					    &sdata->deflink.tx_conf[i]);
-			break;
-		}
-
-		if (sdata->vif.bss_conf.mu_mimo_owner)
-			changed |= BSS_CHANGED_MU_GROUPS;
+                for (link_id = 0;
+                     link_id < ARRAY_SIZE(sdata->vif.link_conf);
+                     link_id++) {
+                        struct ieee80211_bss_conf *link_conf;
+
+                        link = sdata_dereference(sdata->link[link_id], sdata);
+                        if (!link)
+                                continue;
+
+                        link_conf = link->conf;
+                        res = ieee80211_reconfig_link_bss(sdata, link, link_conf);
+                        if (res < 0)
+                                return res;
+                }
 
-		if (!ieee80211_vif_is_mld(&sdata->vif))
-			changed |= BSS_CHANGED_IDLE;
-
-		switch (sdata->vif.type) {
-		case NL80211_IFTYPE_STATION:
-			if (!ieee80211_vif_is_mld(&sdata->vif)) {
-				changed |= BSS_CHANGED_ASSOC |
-					   BSS_CHANGED_ARP_FILTER |
-					   BSS_CHANGED_PS;
-
-				/* Re-send beacon info report to the driver */
-				if (sdata->deflink.u.mgd.have_beacon)
-					changed |= BSS_CHANGED_BEACON_INFO;
-
-				if (sdata->vif.bss_conf.max_idle_period ||
-				    sdata->vif.bss_conf.protected_keep_alive)
-					changed |= BSS_CHANGED_KEEP_ALIVE;
-
-				if (sdata->vif.bss_conf.eht_puncturing)
-					changed |= BSS_CHANGED_EHT_PUNCTURING;
-
-				ieee80211_bss_info_change_notify(sdata,
-								 changed);
-			} else if (!WARN_ON(!link)) {
-				ieee80211_link_info_change_notify(sdata, link,
-								  changed);
-				changed = BSS_CHANGED_ASSOC |
-					  BSS_CHANGED_IDLE |
-					  BSS_CHANGED_PS |
-					  BSS_CHANGED_ARP_FILTER;
-				ieee80211_vif_cfg_change_notify(sdata, changed);
-			}
-			break;
-		case NL80211_IFTYPE_OCB:
-			changed |= BSS_CHANGED_OCB;
-			ieee80211_bss_info_change_notify(sdata, changed);
-			break;
-		case NL80211_IFTYPE_ADHOC:
-			changed |= BSS_CHANGED_IBSS;
-			fallthrough;
-		case NL80211_IFTYPE_AP:
-			changed |= BSS_CHANGED_P2P_PS;
-
-			if (ieee80211_vif_is_mld(&sdata->vif))
-				ieee80211_vif_cfg_change_notify(sdata,
-								BSS_CHANGED_SSID);
-			else
-				changed |= BSS_CHANGED_SSID;
-
-			if (sdata->vif.bss_conf.ftm_responder == 1 &&
-			    wiphy_ext_feature_isset(sdata->local->hw.wiphy,
-					NL80211_EXT_FEATURE_ENABLE_FTM_RESPONDER))
-				changed |= BSS_CHANGED_FTM_RESPONDER;
-
-			if (sdata->vif.type == NL80211_IFTYPE_AP) {
-				changed |= BSS_CHANGED_AP_PROBE_RESP;
-
-				if (ieee80211_vif_is_mld(&sdata->vif)) {
-					ieee80211_reconfig_ap_links(local,
-								    sdata,
-								    changed);
-					break;
-				}
-
-				if (rcu_access_pointer(sdata->deflink.u.ap.beacon))
-					drv_start_ap(local, sdata,
-						     sdata->deflink.conf);
-			}
-			fallthrough;
-		case NL80211_IFTYPE_MESH_POINT:
-			if (sdata->vif.bss_conf.enable_beacon) {
-				changed |= BSS_CHANGED_BEACON |
-					   BSS_CHANGED_BEACON_ENABLED;
-				ieee80211_bss_info_change_notify(sdata, changed);
-			}
-			break;
-		case NL80211_IFTYPE_NAN:
-			res = ieee80211_reconfig_nan(sdata);
-			if (res < 0) {
-				sdata_unlock(sdata);
-				ieee80211_handle_reconfig_failure(local);
-				return res;
-			}
-			break;
-		case NL80211_IFTYPE_AP_VLAN:
-		case NL80211_IFTYPE_MONITOR:
-		case NL80211_IFTYPE_P2P_DEVICE:
-			/* nothing to do */
-			break;
-		case NL80211_IFTYPE_UNSPECIFIED:
-		case NUM_NL80211_IFTYPES:
-		case NL80211_IFTYPE_P2P_CLIENT:
-		case NL80211_IFTYPE_P2P_GO:
-		case NL80211_IFTYPE_WDS:
-			WARN_ON(1);
-			break;
-		}
 		sdata_unlock(sdata);
 
 		if (active_links)
