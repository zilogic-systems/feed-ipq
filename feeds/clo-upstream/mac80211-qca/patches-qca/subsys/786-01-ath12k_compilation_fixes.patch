From dc3d0124fe7bea10eb39318d5bcd1bd10e9c9fff Mon Sep 17 00:00:00 2001
From: Arulanbu Balusamy <quic_abalusam@quicinc.com>
Date: Thu, 8 Jun 2023 23:36:57 +0530
Subject: [PATCH] Overflow header changes


This changes has ath12k integration with OpenWRT-ginger branch, Also
fixed the various compilation issues due to kernel upgradation from 5.x to 6.x,
some API names are changed and some unsupported API are disable in the kernel 6.x
this patch support for both the kernel versions

Signed-off-by: Arulanbu Balusamy <quic_abalusam@quicinc.com>
---
 include/linux/overflow.h | 2 ++
 1 file changed, 2 insertions(+)

--- a/net/wireless/nl80211.c
+++ b/net/wireless/nl80211.c
@@ -396,10 +396,15 @@ static const struct nla_policy nl80211_t
 	[NL80211_TXRATE_HE_LTF] = NLA_POLICY_RANGE(NLA_U8,
 						   NL80211_RATE_INFO_HE_1XLTF,
 						   NL80211_RATE_INFO_HE_4XLTF),
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(6, 1, 0))
+
 	[NL80211_TXRATE_HE_UL] = {
 		.type = NLA_EXACT_LEN_WARN,
 		.len = sizeof(struct nl80211_txrate_he),
 	},
+#else
+	[NL80211_TXRATE_HE_UL] = NLA_POLICY_EXACT_LEN(sizeof(struct nl80211_txrate_he)),
+#endif
 	[NL80211_TXRATE_EHT] =
 		NLA_POLICY_EXACT_LEN(sizeof(struct nl80211_txrate_eht)),
 	[NL80211_TXRATE_EHT_GI] =  NLA_POLICY_RANGE(NLA_U8,
@@ -18387,7 +18392,7 @@ static struct genl_family nl80211_fam __
 	.small_ops = nl80211_small_ops,
 	.n_small_ops = ARRAY_SIZE(nl80211_small_ops),
 #if LINUX_VERSION_IS_GEQ(6,1,0)
-	.resv_start_op = NL80211_CMD_REMOVE_LINK_STA + 1,
+	.resv_start_op = NL80211_CMD_REMOVE_LINK_STA + 5,
 #endif
 	.mcgrps = nl80211_mcgrps,
 	.n_mcgrps = ARRAY_SIZE(nl80211_mcgrps),
--- a/net/mac80211/rx.c
+++ b/net/mac80211/rx.c
@@ -38,8 +38,10 @@ static inline void ieee80211_rx_stats(st
 	struct pcpu_sw_netstats *tstats = this_cpu_ptr(netdev_tstats(dev));
 
 	u64_stats_update_begin(&tstats->syncp);
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(6, 1, 0))
 	tstats->rx_packets++;
 	tstats->rx_bytes += len;
+#endif
 	u64_stats_update_end(&tstats->syncp);
 }
 
@@ -60,7 +62,11 @@ static struct sk_buff *ieee80211_clean_s
 
 	if (present_fcs_len)
 		__pskb_trim(skb, skb->len - present_fcs_len);
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(6, 1, 0))
+	__pskb_pull(skb, rtap_space);
+#else
 	pskb_pull(skb, rtap_space);
+#endif
 
 	/* After pulling radiotap header, clear all flags that indicate
 	 * info in skb->data.
@@ -93,7 +99,11 @@ static struct sk_buff *ieee80211_clean_s
 
 	memmove(skb->data + IEEE80211_HT_CTL_LEN, skb->data,
 		hdrlen - IEEE80211_HT_CTL_LEN);
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(6, 1, 0))
+	__pskb_pull(skb, IEEE80211_HT_CTL_LEN);
+#else
 	pskb_pull(skb, IEEE80211_HT_CTL_LEN);
+#endif
 
 	return skb;
 }
--- a/net/mac80211/tx.c
+++ b/net/mac80211/tx.c
@@ -49,8 +49,10 @@ static inline void ieee80211_tx_stats(st
 	struct pcpu_sw_netstats *tstats = this_cpu_ptr(netdev_tstats(dev));
 
 	u64_stats_update_begin(&tstats->syncp);
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(6, 1, 0))
 	tstats->tx_packets++;
 	tstats->tx_bytes += len;
+#endif
 	u64_stats_update_end(&tstats->syncp);
 }
 /* misc utils */
@@ -4603,7 +4605,9 @@ netdev_tx_t ieee80211_subif_start_xmit(s
 #ifdef CPTCFG_MAC80211_NSS_SUPPORT
 	ieee80211_xmit_nss_fixup(skb, dev);
 #endif
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(6, 1, 0))
 	skb->fast_xmit = 0;
+#endif
 
 	if (likely(!is_multicast_ether_addr(eth->h_dest)))
 		goto normal;
--- a/net/mac80211/debugfs_netdev.c
+++ b/net/mac80211/debugfs_netdev.c
@@ -325,7 +325,7 @@ static ssize_t ieee80211_if_parse_smps(s
 }
 IEEE80211_IF_LINK_FILE_RW(smps);
 
-int ieee80211_if_fmt_bmiss_threshold(const struct ieee80211_sub_if_data *sdata,
+static ssize_t ieee80211_if_fmt_bmiss_threshold(const struct ieee80211_sub_if_data *sdata,
 				     char *buf, int buflen)
 {
 	return snprintf(buf, buflen, "%u\n", sdata->vif.bss_conf.bmiss_threshold);
--- a/backport-include/linux/slab.h
+++ b/backport-include/linux/slab.h
@@ -4,7 +4,7 @@
 #include <linux/version.h>
 
 #if LINUX_VERSION_IS_LESS(5,9,0)
-#define kfree_sensitive(x)	kzfree(x)
+#define kfree_sensitive(x)	kzfree(x) /* For backward compatibility */
 #endif
 
 #endif /* __BACKPORT_SLAB_H */
--- a/net/mac80211/rc80211_minstrel_ht.c
+++ b/net/mac80211/rc80211_minstrel_ht.c
@@ -1986,7 +1986,11 @@ static void __init init_sample_table(voi
 
 	memset(sample_table, 0xff, sizeof(sample_table));
 	for (col = 0; col < SAMPLE_COLUMNS; col++) {
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(6, 1, 0))
+		prandom_bytes(rnd, sizeof(rnd));
+#else
 		get_random_bytes(rnd, sizeof(rnd));
+#endif
 		for (i = 0; i < MCS_GROUP_RATES; i++) {
 			new_idx = (i + rnd[i]) % MCS_GROUP_RATES;
 			while (sample_table[col][new_idx] != 0xff)
