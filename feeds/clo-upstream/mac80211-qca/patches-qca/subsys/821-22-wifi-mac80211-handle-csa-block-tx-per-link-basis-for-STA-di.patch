From 4e35865a758a7e7e6386a0d303276cf5bca6e165 Mon Sep 17 00:00:00 2001
From: Harshitha Prem <quic_hprem@quicinc.com>
Date: Fri, 8 Sep 2023 12:42:27 +0530
Subject: [PATCH] wifi: mac80211: handle csa block tx per link basis for STA disconnect

In case of ML STA + AP interfaces (repeater scenario), when we do
channel change from root AP, STA interfaces are not able to join back
with root AP and fails in authentication phase.

This is seen because, when channel switch is initiated with blocktx flag,
STA interface parses this and stops the interface queue with CSA reason.
But, since it is a repeater scenario, it was not able to finalize the
CSA because AP was in different channel context and STA was trying to move
to different channel context. When STA is not able to finalize the CSA, it
sends disassoc and brings down the STA interface, and then STA tries to start
fresh association but the authentication packets were not sent to driver.

Because of which STA was not able to connect back. STA interface should have reset
the queue when the interface was brought down but it was only done for deflink and
not for all valid links.

Hence, add changes to handle the reset of queue per link basis during STA disconnect

Signed-off-by: Harshitha Prem <quic_hprem@quicinc.com>
---
 net/mac80211/mlme.c | 8 ++++++++
 1 file changed, 8 insertions(+)

diff --git a/net/mac80211/mlme.c b/net/mac80211/mlme.c
index a6fc331..480b516 100644
--- a/net/mac80211/mlme.c
+++ b/net/mac80211/mlme.c
@@ -2996,6 +2996,14 @@ static void ieee80211_set_disassoc(struct ieee80211_sub_if_data *sdata,
 		link = sdata_dereference(sdata->link[link_id], sdata);
 		if (!link)
 			continue;
+
+		link->conf->csa_active = false;
+		if (link->csa_block_tx) {
+			ieee80211_wake_vif_queues(local, sdata,
+						  IEEE80211_QUEUE_STOP_REASON_CSA);
+			link->csa_block_tx = false;
+		}
+
 		ieee80211_link_release_channel(link);
 	}
 
-- 
2.17.1

