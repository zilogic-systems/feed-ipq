From 380f54ce12a7af468b8efef95df6ecffe660231e Mon Sep 17 00:00:00 2001
From: Arunpandi Kannan <quic_arunpand@quicinc.com>
Date: Wed, 18 Oct 2023 10:42:09 +0530
Subject: [PATCH] wifi: mac80211:  Allow off-channel rx frames during AP mode
 ROC

mac80211 currently does not allow any rx frame, if it is
received in any other channel than configured channel. But
during ROC AP will be in different channel. But need to
allow these rx packets when ROC is enabled. So add the
support to check whether AP is in ROC or not while
checking channel and allow the rx packets even if it in
non-configured channel.

Signed-off-by: Arunpandi Kannan <quic_arunpand@quicinc.com>
---
 include/net/mac80211.h    |  1 +
 net/mac80211/offchannel.c |  3 +++
 net/mac80211/rx.c         | 12 ++++++++----
 3 files changed, 12 insertions(+), 4 deletions(-)

diff --git a/include/net/mac80211.h b/include/net/mac80211.h
index 0e40424..fb63053 100644
--- a/include/net/mac80211.h
+++ b/include/net/mac80211.h
@@ -1978,6 +1978,7 @@ struct ieee80211_vif {
 	int ppe_vp_num;
 	unsigned long ppe_vp_type;
 #endif
+	bool is_roc;
 	/* must be last */
 	u8 drv_priv[] __aligned(sizeof(void *));
 };
diff --git a/net/mac80211/offchannel.c b/net/mac80211/offchannel.c
index 777b71d..d867353 100644
--- a/net/mac80211/offchannel.c
+++ b/net/mac80211/offchannel.c
@@ -172,6 +172,8 @@ static void ieee80211_roc_notify_destroy(struct ieee80211_roc_work *roc)
 {
 	struct ieee80211_sub_if_data *sdata = roc->sdata;
 	/* was never transmitted */
+
+	sdata->vif.is_roc = false;
 	if (roc->frame) {
 		cfg80211_mgmt_tx_status(&roc->sdata->wdev, roc->mgmt_tx_cookie,
 					roc->frame->data, roc->frame->len,
@@ -274,6 +276,7 @@ static void ieee80211_hw_roc_start(struct work_struct *work)
 			break;
 
 		roc->hw_begun = true;
+		roc->sdata->vif.is_roc = true;
 		ieee80211_handle_roc_started(roc, local->hw_roc_start_time);
 	}
 
diff --git a/net/mac80211/rx.c b/net/mac80211/rx.c
index 63deae7..81ab8af 100644
--- a/net/mac80211/rx.c
+++ b/net/mac80211/rx.c
@@ -5497,7 +5497,8 @@ static void __ieee80211_rx_handle_packet(struct ieee80211_hw *hw,
 
 					if (conf && conf->chandef.chan)
 						if (cfg80211_get_hw_idx_by_freq(hw->wiphy, conf->chandef.chan->center_freq) ==
-								cfg80211_get_hw_idx_by_freq(hw->wiphy, status->freq)) {
+						    cfg80211_get_hw_idx_by_freq(hw->wiphy, status->freq) ||
+						    sdata->vif.is_roc) {
 							flag = true;
 							break;
 						}
@@ -5507,7 +5508,8 @@ static void __ieee80211_rx_handle_packet(struct ieee80211_hw *hw,
 
 				if (conf && conf->chandef.chan)
 					if (cfg80211_get_hw_idx_by_freq(hw->wiphy, conf->chandef.chan->center_freq) ==
-							cfg80211_get_hw_idx_by_freq(hw->wiphy, status->freq))
+					    cfg80211_get_hw_idx_by_freq(hw->wiphy, status->freq) ||
+					    sdata->vif.is_roc)
 						flag = true;
 			}
 		}
@@ -5554,7 +5556,8 @@ static void __ieee80211_rx_handle_packet(struct ieee80211_hw *hw,
 
 					if (conf && conf->chandef.chan) {
 						if (cfg80211_get_hw_idx_by_freq(hw->wiphy, conf->chandef.chan->center_freq) ==
-								cfg80211_get_hw_idx_by_freq(hw->wiphy, status->freq)) {
+						    cfg80211_get_hw_idx_by_freq(hw->wiphy, status->freq) ||
+						    prev->vif.is_roc) {
 							flag = true;
 							break;
 						}
@@ -5565,7 +5568,8 @@ static void __ieee80211_rx_handle_packet(struct ieee80211_hw *hw,
 
 				if (conf && conf->chandef.chan)
 					if (cfg80211_get_hw_idx_by_freq(hw->wiphy, conf->chandef.chan->center_freq) ==
-							cfg80211_get_hw_idx_by_freq(hw->wiphy, status->freq))
+					    cfg80211_get_hw_idx_by_freq(hw->wiphy, status->freq) ||
+					    prev->vif.is_roc)
 						flag = true;
 			}
 
-- 
2.17.1

