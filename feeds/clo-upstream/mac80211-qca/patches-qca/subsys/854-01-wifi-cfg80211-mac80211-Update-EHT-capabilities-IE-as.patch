From 5a4d6128635a380518a9437b4559e2da23688567 Mon Sep 17 00:00:00 2001
From: Yuvarani V <quic_yuvarani@quicinc.com>
Date: Fri, 24 Nov 2023 16:51:53 +0530
Subject: [PATCH] wifi: cfg80211/mac80211: Update EHT capabilities IE as per
 draft 3.0

Update EHT capabilities IE definitions as per 11be draft 3.0
specification.

Add the below EHT capabilities IE definitions,
EHT MAC Capabilities(Draft 3.1 - 9.4.2.313.2):
Two BQRs Support - B11(1 Bit)
EHT Link Adaptation Support - B12,B13(2 Bits)

EHT PHY Capabilities(Draft 3.1 - 9.4.2.313.3):
20 MHz-Only Limited Capabilities Support - B66(1 Bit)
20 MHz-Only Triggered MU Beamforming Full BW Feedback And DL MU-MIMO - B67(1 Bit)
20 MHz-Only M-RU Support - B68(1 Bit)

Signed-off-by: Yuvarani V <quic_yuvarani@quicinc.com>
---
 drivers/net/wireless/virtual/mac80211_hwsim.c | 42 +++++++++++++++++++
 include/linux/ieee80211.h                     |  5 +++
 net/mac80211/debugfs_sta.c                    |  8 ++++
 3 files changed, 55 insertions(+)

diff --git a/drivers/net/wireless/virtual/mac80211_hwsim.c b/drivers/net/wireless/virtual/mac80211_hwsim.c
index 12bb438..23373f4 100644
--- a/drivers/net/wireless/virtual/mac80211_hwsim.c
+++ b/drivers/net/wireless/virtual/mac80211_hwsim.c
@@ -4070,6 +4070,9 @@ static const struct ieee80211_sband_iftype_data sband_capa_2ghz[] = {
 					IEEE80211_EHT_MAC_CAP0_EPCS_PRIO_ACCESS |
 					IEEE80211_EHT_MAC_CAP0_OM_CONTROL |
 					IEEE80211_EHT_MAC_CAP0_TRIG_TXOP_SHARING_MODE1,
+				.mac_cap_info[1] =
+					IEEE80211_EHT_MAC_CAP1_TWO_BQRS_SUPP |
+					IEEE80211_EHT_MAC_CAP1_EHT_LINK_ADAPTATION_SUPP,
 				.phy_cap_info[0] =
 					IEEE80211_EHT_PHY_CAP0_242_TONE_RU_GT20MHZ |
 					IEEE80211_EHT_PHY_CAP0_NDP_4_EHT_LFT_32_GI |
@@ -4102,6 +4105,10 @@ static const struct ieee80211_sband_iftype_data sband_capa_2ghz[] = {
 					IEEE80211_EHT_PHY_CAP6_MCS15_SUPP_MASK,
 				.phy_cap_info[7] =
 					IEEE80211_EHT_PHY_CAP7_20MHZ_STA_RX_NDP_WIDER_BW,
+				.phy_cap_info[8] =
+					IEEE80211_EHT_PHY_CAP8_20MHZ_ONLY_CAPS |
+					IEEE80211_EHT_PHY_CAP8_20MHZ_ONLY_TRIGGER_MUBF_FL_BW_FB_DLMUMIMO |
+					IEEE80211_EHT_PHY_CAP8_20MHZ_ONLY_MRU_SUPP,
 			},
 
 			/* For all MCS and bandwidth, set 8 NSS for both Tx and
@@ -4175,6 +4182,9 @@ static const struct ieee80211_sband_iftype_data sband_capa_2ghz[] = {
 					IEEE80211_EHT_MAC_CAP0_EPCS_PRIO_ACCESS |
 					IEEE80211_EHT_MAC_CAP0_OM_CONTROL |
 					IEEE80211_EHT_MAC_CAP0_TRIG_TXOP_SHARING_MODE1,
+				.mac_cap_info[1] =
+					IEEE80211_EHT_MAC_CAP1_TWO_BQRS_SUPP |
+					IEEE80211_EHT_MAC_CAP1_EHT_LINK_ADAPTATION_SUPP,
 				.phy_cap_info[0] =
 					IEEE80211_EHT_PHY_CAP0_242_TONE_RU_GT20MHZ |
 					IEEE80211_EHT_PHY_CAP0_NDP_4_EHT_LFT_32_GI |
@@ -4207,6 +4217,10 @@ static const struct ieee80211_sband_iftype_data sband_capa_2ghz[] = {
 					IEEE80211_EHT_PHY_CAP6_MCS15_SUPP_MASK,
 				.phy_cap_info[7] =
 					IEEE80211_EHT_PHY_CAP7_20MHZ_STA_RX_NDP_WIDER_BW,
+				.phy_cap_info[8] =
+					IEEE80211_EHT_PHY_CAP8_20MHZ_ONLY_CAPS |
+					IEEE80211_EHT_PHY_CAP8_20MHZ_ONLY_TRIGGER_MUBF_FL_BW_FB_DLMUMIMO |
+					IEEE80211_EHT_PHY_CAP8_20MHZ_ONLY_MRU_SUPP,
 			},
 
 			/* For all MCS and bandwidth, set 8 NSS for both Tx and
@@ -4327,6 +4341,9 @@ static const struct ieee80211_sband_iftype_data sband_capa_5ghz[] = {
 					IEEE80211_EHT_MAC_CAP0_EPCS_PRIO_ACCESS |
 					IEEE80211_EHT_MAC_CAP0_OM_CONTROL |
 					IEEE80211_EHT_MAC_CAP0_TRIG_TXOP_SHARING_MODE1,
+				.mac_cap_info[1] =
+					IEEE80211_EHT_MAC_CAP1_TWO_BQRS_SUPP |
+					IEEE80211_EHT_MAC_CAP1_EHT_LINK_ADAPTATION_SUPP,
 				.phy_cap_info[0] =
 					IEEE80211_EHT_PHY_CAP0_242_TONE_RU_GT20MHZ |
 					IEEE80211_EHT_PHY_CAP0_NDP_4_EHT_LFT_32_GI |
@@ -4370,6 +4387,10 @@ static const struct ieee80211_sband_iftype_data sband_capa_5ghz[] = {
 					IEEE80211_EHT_PHY_CAP7_NON_OFDMA_UL_MU_MIMO_160MHZ |
 					IEEE80211_EHT_PHY_CAP7_MU_BEAMFORMER_80MHZ |
 					IEEE80211_EHT_PHY_CAP7_MU_BEAMFORMER_160MHZ,
+				.phy_cap_info[8] =
+					IEEE80211_EHT_PHY_CAP8_20MHZ_ONLY_CAPS |
+					IEEE80211_EHT_PHY_CAP8_20MHZ_ONLY_TRIGGER_MUBF_FL_BW_FB_DLMUMIMO |
+					IEEE80211_EHT_PHY_CAP8_20MHZ_ONLY_MRU_SUPP,
 			},
 
 			/* For all MCS and bandwidth, set 8 NSS for both Tx and
@@ -4451,6 +4472,9 @@ static const struct ieee80211_sband_iftype_data sband_capa_5ghz[] = {
 					IEEE80211_EHT_MAC_CAP0_EPCS_PRIO_ACCESS |
 					IEEE80211_EHT_MAC_CAP0_OM_CONTROL |
 					IEEE80211_EHT_MAC_CAP0_TRIG_TXOP_SHARING_MODE1,
+				.mac_cap_info[1] =
+					IEEE80211_EHT_MAC_CAP1_TWO_BQRS_SUPP |
+					IEEE80211_EHT_MAC_CAP1_EHT_LINK_ADAPTATION_SUPP,
 				.phy_cap_info[0] =
 					IEEE80211_EHT_PHY_CAP0_242_TONE_RU_GT20MHZ |
 					IEEE80211_EHT_PHY_CAP0_NDP_4_EHT_LFT_32_GI |
@@ -4494,6 +4518,10 @@ static const struct ieee80211_sband_iftype_data sband_capa_5ghz[] = {
 					IEEE80211_EHT_PHY_CAP7_NON_OFDMA_UL_MU_MIMO_160MHZ |
 					IEEE80211_EHT_PHY_CAP7_MU_BEAMFORMER_80MHZ |
 					IEEE80211_EHT_PHY_CAP7_MU_BEAMFORMER_160MHZ,
+				.phy_cap_info[8] =
+					IEEE80211_EHT_PHY_CAP8_20MHZ_ONLY_CAPS |
+					IEEE80211_EHT_PHY_CAP8_20MHZ_ONLY_TRIGGER_MUBF_FL_BW_FB_DLMUMIMO |
+					IEEE80211_EHT_PHY_CAP8_20MHZ_ONLY_MRU_SUPP,
 			},
 
 			/* For all MCS and bandwidth, set 8 NSS for both Tx and
@@ -4632,6 +4660,9 @@ static const struct ieee80211_sband_iftype_data sband_capa_6ghz[] = {
 					IEEE80211_EHT_MAC_CAP0_EPCS_PRIO_ACCESS |
 					IEEE80211_EHT_MAC_CAP0_OM_CONTROL |
 					IEEE80211_EHT_MAC_CAP0_TRIG_TXOP_SHARING_MODE1,
+				.mac_cap_info[1] =
+					IEEE80211_EHT_MAC_CAP1_TWO_BQRS_SUPP |
+					IEEE80211_EHT_MAC_CAP1_EHT_LINK_ADAPTATION_SUPP,
 				.phy_cap_info[0] =
 					IEEE80211_EHT_PHY_CAP0_320MHZ_IN_6GHZ |
 					IEEE80211_EHT_PHY_CAP0_242_TONE_RU_GT20MHZ |
@@ -4681,6 +4712,10 @@ static const struct ieee80211_sband_iftype_data sband_capa_6ghz[] = {
 					IEEE80211_EHT_PHY_CAP7_MU_BEAMFORMER_80MHZ |
 					IEEE80211_EHT_PHY_CAP7_MU_BEAMFORMER_160MHZ |
 					IEEE80211_EHT_PHY_CAP7_MU_BEAMFORMER_320MHZ,
+				.phy_cap_info[8] =
+					IEEE80211_EHT_PHY_CAP8_20MHZ_ONLY_CAPS |
+					IEEE80211_EHT_PHY_CAP8_20MHZ_ONLY_TRIGGER_MUBF_FL_BW_FB_DLMUMIMO |
+					IEEE80211_EHT_PHY_CAP8_20MHZ_ONLY_MRU_SUPP,
 			},
 
 			/* For all MCS and bandwidth, set 8 NSS for both Tx and
@@ -4777,6 +4812,9 @@ static const struct ieee80211_sband_iftype_data sband_capa_6ghz[] = {
 					IEEE80211_EHT_MAC_CAP0_EPCS_PRIO_ACCESS |
 					IEEE80211_EHT_MAC_CAP0_OM_CONTROL |
 					IEEE80211_EHT_MAC_CAP0_TRIG_TXOP_SHARING_MODE1,
+				.mac_cap_info[1] =
+					IEEE80211_EHT_MAC_CAP1_TWO_BQRS_SUPP |
+					IEEE80211_EHT_MAC_CAP1_EHT_LINK_ADAPTATION_SUPP,
 				.phy_cap_info[0] =
 					IEEE80211_EHT_PHY_CAP0_320MHZ_IN_6GHZ |
 					IEEE80211_EHT_PHY_CAP0_242_TONE_RU_GT20MHZ |
@@ -4826,6 +4864,10 @@ static const struct ieee80211_sband_iftype_data sband_capa_6ghz[] = {
 					IEEE80211_EHT_PHY_CAP7_MU_BEAMFORMER_80MHZ |
 					IEEE80211_EHT_PHY_CAP7_MU_BEAMFORMER_160MHZ |
 					IEEE80211_EHT_PHY_CAP7_MU_BEAMFORMER_320MHZ,
+				.phy_cap_info[8] =
+					IEEE80211_EHT_PHY_CAP8_20MHZ_ONLY_CAPS |
+					IEEE80211_EHT_PHY_CAP8_20MHZ_ONLY_TRIGGER_MUBF_FL_BW_FB_DLMUMIMO |
+					IEEE80211_EHT_PHY_CAP8_20MHZ_ONLY_MRU_SUPP,
 			},
 
 			/* For all MCS and bandwidth, set 8 NSS for both Tx and
diff --git a/include/linux/ieee80211.h b/include/linux/ieee80211.h
index f2c30ef..5ab604c 100644
--- a/include/linux/ieee80211.h
+++ b/include/linux/ieee80211.h
@@ -2860,6 +2860,8 @@ ieee80211_he_spr_size(const u8 *he_spr_ie)
 #define IEEE80211_EHT_MAC_CAP1_MAX_AMPDU_LEN_EXP      0x01
 #define IEEE80211_EHT_MAC_CAP1_EHT_TRS                0x02
 #define IEEE80211_EHT_MAC_CAP1_TXOP_SHARE_MODE2       0x04
+#define IEEE80211_EHT_MAC_CAP1_TWO_BQRS_SUPP          0x08
+#define IEEE80211_EHT_MAC_CAP1_EHT_LINK_ADAPTATION_SUPP         0x30
 
 /* EHT PHY capabilities as defined in P802.11be_D2.0 section 9.4.2.313.3 */
 #define IEEE80211_EHT_PHY_CAP0_320MHZ_IN_6GHZ			0x02
@@ -2926,6 +2928,9 @@ ieee80211_he_spr_size(const u8 *he_spr_ie)
 
 #define IEEE80211_EHT_PHY_CAP8_RX_1024QAM_WIDER_BW_DL_OFDMA	0x01
 #define IEEE80211_EHT_PHY_CAP8_RX_4096QAM_WIDER_BW_DL_OFDMA	0x02
+#define IEEE80211_EHT_PHY_CAP8_20MHZ_ONLY_CAPS                  0x04
+#define IEEE80211_EHT_PHY_CAP8_20MHZ_ONLY_TRIGGER_MUBF_FL_BW_FB_DLMUMIMO   0x08
+#define IEEE80211_EHT_PHY_CAP8_20MHZ_ONLY_MRU_SUPP                         0x10
 
 #define IEEE80211_EHT_240MHZ_PHY_CAP_BEAMFORMEE_SS_320MHZ_MASK	(BIT(1) | BIT(2) | \
 								BIT(3))
diff --git a/net/mac80211/debugfs_sta.c b/net/mac80211/debugfs_sta.c
index d7f12ab..15cb1c2 100644
--- a/net/mac80211/debugfs_sta.c
+++ b/net/mac80211/debugfs_sta.c
@@ -1329,6 +1329,8 @@ static ssize_t sta_eht_capa_read(struct file *file, char __user *userbuf,
         PFLAG(MAC, 1, MAX_AMPDU_LEN_EXP, "Maximum A-MPDU Length Exponent Extension");
         PFLAG(MAC, 1, EHT_TRS, "EHT TRS Support");
         PFLAG(MAC, 1, TXOP_SHARE_MODE2, "TXOP Return Support In TXOP Sharing Mode 2");
+	PFLAG(MAC, 1, TWO_BQRS_SUPP, "Two BQRs Support");
+	PFLAG(MAC, 1, EHT_LINK_ADAPTATION_SUPP, "EHT Link Adaptation Support");
 
         cap = ehtc->eht_cap_elem.phy_cap_info;
         p += scnprintf(p, buf_sz + buf - p,
@@ -1415,6 +1417,12 @@ static ssize_t sta_eht_capa_read(struct file *file, char __user *userbuf,
               "Rx 1024-QAM In Wider Bandwidth DL OFDMA Support");
         PFLAG(PHY, 8, RX_4096QAM_WIDER_BW_DL_OFDMA,
               "Rx 4096-QAM In Wider Bandwidth DL OFDMA Support");
+	PFLAG(PHY, 8, 20MHZ_ONLY_CAPS,
+	      "20 MHz-Only Limited Capabilities Support");
+	PFLAG(PHY, 8, 20MHZ_ONLY_TRIGGER_MUBF_FL_BW_FB_DLMUMIMO,
+	      "20 MHz-Only Triggered MU Beamforming Full BW Feedback And DL MU-MIMO");
+	PFLAG(PHY, 8, 20MHZ_ONLY_MRU_SUPP,
+	      "20 MHz-Only M-RU Support");
 
 #undef PFLAG_RANGE
 #undef PFLAG
-- 
2.17.1

