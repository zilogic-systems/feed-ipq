From f90fd0d42d9304dc04451f187eef5b3b78428c0f Mon Sep 17 00:00:00 2001
From: Aaradhana Sahu <quic_aarasahu@quicinc.com>
Date: Thu, 12 Oct 2023 14:45:17 +0530
Subject: [PATCH] mac80211: fix WDS repeater and root ap association

We are supporting 4 addr mlo, but in kernel still some
check is there which return not supported error for 4 addr
mlo, due to this wds sta not associated with wds AP.

Fix this issue by removing checks.

Signed-off-by: Aaradhana Sahu <quic_aarasahu@quicinc.com>
---
 net/mac80211/cfg.c   | 7 -------
 net/mac80211/iface.c | 7 -------
 net/mac80211/mlme.c  | 4 ----
 3 files changed, 18 deletions(-)

diff --git a/net/mac80211/cfg.c b/net/mac80211/cfg.c
index 665209e..d5a3c24 100644
--- a/net/mac80211/cfg.c
+++ b/net/mac80211/cfg.c
@@ -273,10 +273,6 @@ static int ieee80211_change_iface(struct wiphy *wiphy,
 		if (params->use_4addr == ifmgd->use_4addr)
 			return 0;
 
-		/* FIXME: no support for 4-addr MLO yet */
-		if (ieee80211_vif_is_mld(&sdata->vif))
-			return -EOPNOTSUPP;
-
 		sdata->u.mgd.use_4addr = params->use_4addr;
 		if (!ifmgd->associated)
 			return 0;
@@ -5563,9 +5559,6 @@ static int ieee80211_add_intf_link(struct wiphy *wiphy,
 	struct ieee80211_sub_if_data *sdata = IEEE80211_WDEV_TO_SUB_IF(wdev);
 	int res;
 
-	if (wdev->use_4addr)
-		return -EOPNOTSUPP;
-
 	mutex_lock(&sdata->local->mtx);
 	res = ieee80211_vif_set_links(sdata, wdev->valid_links, 0);
 	mutex_unlock(&sdata->local->mtx);
diff --git a/net/mac80211/iface.c b/net/mac80211/iface.c
index 61a614c..fb1fee0 100644
--- a/net/mac80211/iface.c
+++ b/net/mac80211/iface.c
@@ -388,13 +388,6 @@ static int ieee80211_check_concurrent_iface(struct ieee80211_sub_if_data *sdata,
 							nsdata->vif.type))
 				return -ENOTUNIQ;
 
-			/* No support for VLAN with MLO yet */
-			if (iftype == NL80211_IFTYPE_AP_VLAN &&
-			    sdata->wdev.use_4addr &&
-			    nsdata->vif.type == NL80211_IFTYPE_AP &&
-			    nsdata->vif.valid_links)
-				return -EOPNOTSUPP;
-
 			/*
 			 * can only add VLANs to enabled APs
 			 */
diff --git a/net/mac80211/mlme.c b/net/mac80211/mlme.c
index a4b1304..d8e2225 100644
--- a/net/mac80211/mlme.c
+++ b/net/mac80211/mlme.c
@@ -7442,10 +7442,6 @@ int ieee80211_mgd_assoc(struct ieee80211_sub_if_data *sdata,
 	for (i = 0; i < IEEE80211_MLD_MAX_NUM_LINKS; i++)
 		size += req->links[i].elems_len;
 
-	/* FIXME: no support for 4-addr MLO yet */
-	if (sdata->u.mgd.use_4addr && req->link_id >= 0)
-		return -EOPNOTSUPP;
-
 	assoc_data = kzalloc(size, GFP_KERNEL);
 	if (!assoc_data)
 		return -ENOMEM;
-- 
2.17.1

