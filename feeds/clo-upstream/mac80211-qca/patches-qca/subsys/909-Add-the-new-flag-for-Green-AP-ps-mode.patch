From 2b34fd829f9b467f1501600ff9b40ceebdde8b41 Mon Sep 17 00:00:00 2001
From: Arulanbu Balusamy <quic_abalusam@quicinc.com>
Date: Mon, 29 Jan 2024 21:28:57 +0530
Subject: [PATCH] wifi: mac80211: Add the new flag for Green AP power save
 mode.

Resolve the "ieee80211_link_info_change_notify" calltrace issue in AP
during power saving mode.The calltrace triggered due to the WARN_ON().
From the Green AP change the BSS_CHANGED_PS flag is shared for both AP
and STA. This cause the WARN_ON during Green AP testing.

So in this change introduce the seperate ps flag "BSS_CHANGED_AP_PS"
only for AP.

Also revert the changes in "ieee80211_recalc_ps_vif" function. Because
this function is supported only for STA mode and it is a vif specific
notifier.

Updated flags:
================================
BSS_CHANGED_PS     - vif type STA
BSS_CHANGED_AP_PS  - vif type AP

Signed-off-by: Arulanbu Balusamy <quic_abalusam@quicinc.com>
---
 include/net/mac80211.h |  4 +++-
 net/mac80211/cfg.c     |  6 +++---
 net/mac80211/mlme.c    | 16 +---------------
 3 files changed, 7 insertions(+), 19 deletions(-)

--- a/include/net/mac80211.h
+++ b/include/net/mac80211.h
@@ -321,7 +321,7 @@ struct ieee80211_vif_chanctx_switch {
  * @BSS_CHANGED_IDLE: Idle changed for this BSS/interface.
  * @BSS_CHANGED_SSID: SSID changed for this BSS (AP and IBSS mode)
  * @BSS_CHANGED_AP_PROBE_RESP: Probe Response changed for this BSS (AP mode)
- * @BSS_CHANGED_PS: PS changed for this BSS (both AP and STA mode)
+ * @BSS_CHANGED_PS: PS changed for this BSS (STA mode)
  * @BSS_CHANGED_TXPOWER: TX power setting changed for this interface
  * @BSS_CHANGED_P2P_PS: P2P powersave settings (CTWindow, opportunistic PS)
  *	changed
@@ -344,6 +344,7 @@ struct ieee80211_vif_chanctx_switch {
  * @BSS_CHANGED_UNSOL_BCAST_PROBE_RESP: Unsolicited broadcast probe response
  *	status changed.
  * @BSS_CHANGED_EHT_PUNCTURING: The channel puncturing bitmap changed.
+ * @BSS_CHANGED_AP_PS: PS changed for this BSS (AP mode)
  */
 enum ieee80211_bss_change {
 	BSS_CHANGED_ASSOC		= 1<<0,
@@ -377,8 +378,9 @@ enum ieee80211_bss_change {
 	BSS_CHANGED_HE_OBSS_PD		= 1<<28,
 	BSS_CHANGED_HE_BSS_COLOR	= 1<<29,
 	BSS_CHANGED_FILS_DISCOVERY      = 1<<30,
-	BSS_CHANGED_UNSOL_BCAST_PROBE_RESP = 1<<31,
+	BSS_CHANGED_UNSOL_BCAST_PROBE_RESP = BIT_ULL(31),
 	BSS_CHANGED_EHT_PUNCTURING	= BIT_ULL(32),
+	BSS_CHANGED_AP_PS               = BIT_ULL(33),
 
 	/* when adding here, make sure to change ieee80211_reconfig */
 };
--- a/net/mac80211/cfg.c
+++ b/net/mac80211/cfg.c
@@ -1705,7 +1705,7 @@ static int ieee80211_update_ap(struct wi
 	struct ieee80211_sub_if_data *sdata = IEEE80211_DEV_TO_SUB_IF(dev);
 	struct ieee80211_link_data *link;
 	struct beacon_data *old;
-	int err = -EINVAL;
+	s64 err = -EINVAL;
 	struct ieee80211_bss_conf *link_conf;
 	u64 changed = 0;
 
@@ -1738,9 +1738,9 @@ static int ieee80211_update_ap(struct wi
 	    params->ap_ps_valid) {
 		link_conf->ap_ps_enable = params->ap_ps_enable;
 		if (err < 0)
-			err = BSS_CHANGED_PS;
+			err = BSS_CHANGED_AP_PS;
 		else
-			err |= BSS_CHANGED_PS;
+			err |= BSS_CHANGED_AP_PS;
 	}
 
 	if (params->beacon.he_bss_color_valid &&
--- a/net/mac80211/mlme.c
+++ b/net/mac80211/mlme.c
@@ -2328,25 +2328,11 @@ void ieee80211_recalc_ps(struct ieee8021
 
 void ieee80211_recalc_ps_vif(struct ieee80211_sub_if_data *sdata)
 {
-	struct ieee80211_link_data *link;
-	u16 link_id;
 	bool ps_allowed = ieee80211_powersave_allowed(sdata);
 
 	if (sdata->vif.cfg.ps != ps_allowed) {
 		sdata->vif.cfg.ps = ps_allowed;
-		if (!sdata->vif.valid_links) {
-			ieee80211_link_info_change_notify(sdata, &sdata->deflink,
-							  BSS_CHANGED_PS);
-		} else {
-			for_each_set_bit(link_id, &sdata->vif.valid_links,
-					 IEEE80211_MLD_MAX_NUM_LINKS) {
-				link = sdata_dereference(sdata->link[link_id], sdata);
-				if (!link)
-					continue;
-
-				ieee80211_link_info_change_notify(sdata, link, BSS_CHANGED_PS);
-			}
-		}
+			ieee80211_vif_cfg_change_notify(sdata, BSS_CHANGED_PS);
 	}
 }
 
