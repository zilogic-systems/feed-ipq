From c5fb69665d6e476f9443a92644dc0745f428e304 Mon Sep 17 00:00:00 2001
From: Yuvasree Sivasankaran <quic_ysivasan@quicinc.com>
Date: Sat, 20 Jan 2024 18:26:12 +0530
Subject: [PATCH] wifi: mac80211: WAR to avoid linkid warn_on in case of monitor

After mode-0 SSR recovery, invalid peer id and ast index sent
by Hardware for associated peer/STA. Meanwhile, ath12k and
mac80211 has the peer/STA entry which leads to linkid warnon.
Add only_monitor flag condition as WAR to avoid warn_on in case 
of monitor.

Note: Changes from this patch is not required and while upstreaming
dependent patches, do not add WARN_ON.

Signed-off-by: Yuvasree Sivasankaran <quic_ysivasan@quicinc.com>
---
 net/mac80211/rx.c | 28 ++++++++++++++++------------
 1 file changed, 16 insertions(+), 12 deletions(-)

--- a/net/mac80211/rx.c
+++ b/net/mac80211/rx.c
@@ -33,6 +33,8 @@
 #include "wme.h"
 #include "rate.h"
 
+extern int debug_param;
+
 static inline void ieee80211_rx_stats(struct net_device *dev, u32 len)
 {
 	struct pcpu_sw_netstats *tstats = this_cpu_ptr(netdev_tstats(dev));
@@ -4441,7 +4443,7 @@ static bool ieee80211_rx_data_set_link(s
 }
 
 static bool ieee80211_rx_data_set_sta(struct ieee80211_rx_data *rx,
-				      struct sta_info *sta, int link_id)
+				      struct sta_info *sta, int link_id, bool only_monitor)
 {
 	rx->link_id = link_id;
 	rx->sta = sta;
@@ -4456,17 +4458,11 @@ static bool ieee80211_rx_data_set_sta(st
 	}
 
 	if (link_id < 0) {
-		if (rx->sdata->vif.valid_links) {
-			if (sta && !sta->sta.valid_links) {
-				rx->link = rcu_dereference(rx->sdata->link[sta->deflink.link_id]);
-			} else {
-				rx->link = &rx->sdata->deflink;
-				if (!rx->local->in_reconfig)
-					WARN_ON_ONCE(1);
-			}
-		} else {
+		if (rx->sdata->vif.valid_links &&
+		    (sta && !sta->sta.valid_links))
+			rx->link = rcu_dereference(rx->sdata->link[sta->deflink.link_id]);
+		else
 			rx->link = &rx->sdata->deflink;
-		}
 	}
 	else if (!ieee80211_rx_data_set_link(rx, link_id))
 		return false;
@@ -4493,7 +4489,7 @@ void ieee80211_release_reorder_timeout(s
 	if (sta->sta.valid_links)
 		link_id = ffs(sta->sta.valid_links) - 1;
 
-	if (!ieee80211_rx_data_set_sta(&rx, sta, link_id))
+	if (!ieee80211_rx_data_set_sta(&rx, sta, link_id, false))
 		return;
 
 	tid_agg_rx = rcu_dereference(sta->ampdu_mlme.tid_rx[tid]);
@@ -4545,7 +4541,7 @@ void ieee80211_mark_rx_ba_filtered_frame
 		  "RX BA marker can't support max_rx_aggregation_subframes %u > 64\n",
 		  local->hw.max_rx_aggregation_subframes);
 
-	if (!ieee80211_rx_data_set_sta(&rx, sta, -1))
+	if (!ieee80211_rx_data_set_sta(&rx, sta, -1, false))
 		return;
 
 	rcu_read_lock();
@@ -5380,7 +5376,7 @@ static void __ieee80211_rx_handle_8023(s
 	 * the deflink is fine?
 	 */
 	sta = container_of(pubsta, struct sta_info, sta);
-	if (!ieee80211_rx_data_set_sta(&rx, sta, link_id))
+	if (!ieee80211_rx_data_set_sta(&rx, sta, link_id, false))
 		goto drop;
 
 	fast_rx = rcu_dereference(rx.sta->fast_rx);
@@ -5401,7 +5397,10 @@ static bool ieee80211_rx_for_interface(s
 	struct ieee80211_hdr *hdr = (void *)skb->data;
 	struct sta_info *sta;
 	int link_id = -1;
+	struct ieee80211_rx_status *status = IEEE80211_SKB_RXCB(skb);
+	bool only_monitor;
 
+	only_monitor = status->flag & RX_FLAG_ONLY_MONITOR;
 	/*
 	 * Look up link station first, in case there's a
 	 * chance that they might have a link address that
@@ -5413,14 +5412,12 @@ static bool ieee80211_rx_for_interface(s
 		sta = link_sta->sta;
 		link_id = link_sta->link_id;
 	} else {
-		struct ieee80211_rx_status *status = IEEE80211_SKB_RXCB(skb);
-
 		sta = sta_info_get_bss(rx->sdata, hdr->addr2);
 		if (status->link_valid)
 			link_id = status->link_id;
 	}
 
-	if (!ieee80211_rx_data_set_sta(rx, sta, link_id))
+	if (!ieee80211_rx_data_set_sta(rx, sta, link_id, only_monitor))
 		return false;
 
 	return ieee80211_prepare_and_rx_handle(rx, skb, consume);
@@ -5484,13 +5481,14 @@ static void __ieee80211_rx_handle_packet
 	if (ieee80211_is_data(fc)) {
 		struct sta_info *sta, *prev_sta;
 		int link_id = -1;
+		bool only_monitor = status->flag & RX_FLAG_ONLY_MONITOR;
 
 		if (status->link_valid)
 			link_id = status->link_id;
 
 		if (pubsta) {
 			sta = container_of(pubsta, struct sta_info, sta);
-			if (!ieee80211_rx_data_set_sta(&rx, sta, link_id))
+			if (!ieee80211_rx_data_set_sta(&rx, sta, link_id, only_monitor))
 				goto out;
 
 			/*
@@ -5527,7 +5525,7 @@ static void __ieee80211_rx_handle_packet
 			}
 
 			rx.sdata = prev_sta->sdata;
-			if (!ieee80211_rx_data_set_sta(&rx, prev_sta, link_id))
+			if (!ieee80211_rx_data_set_sta(&rx, prev_sta, link_id, only_monitor))
 				goto out;
 
 			if (!status->link_valid && prev_sta->sta.mlo)
@@ -5540,7 +5538,7 @@ static void __ieee80211_rx_handle_packet
 
 		if (prev_sta) {
 			rx.sdata = prev_sta->sdata;
-			if (!ieee80211_rx_data_set_sta(&rx, prev_sta, link_id))
+			if (!ieee80211_rx_data_set_sta(&rx, prev_sta, link_id, only_monitor))
 				goto out;
 
 			if (!status->link_valid && prev_sta->sta.mlo)
--- a/net/mac80211/mlme.c
+++ b/net/mac80211/mlme.c
@@ -66,6 +66,11 @@ module_param(beacon_loss_count, int, 064
 MODULE_PARM_DESC(beacon_loss_count,
 		 "Number of beacon intervals before we decide beacon was lost.");
 
+int debug_param = 0;
+module_param(debug_param, int, 0644);
+MODULE_PARM_DESC(debug_param,
+		"Debug module param to debug link id < 0");
+
 /*
  * Time the connection can be idle before we probe
  * it to see if we can still talk to the AP.
