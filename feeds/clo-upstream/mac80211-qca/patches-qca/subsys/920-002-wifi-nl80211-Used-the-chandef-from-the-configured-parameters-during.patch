From e28930ba6b2a7757186bf6c569201b0eab443c18 Mon Sep 17 00:00:00 2001
From: Arulanbu Balusamy <quic_abalusam@quicinc.com>
Date: Thu, 29 Aug 2024 12:39:38 +0530
Subject: [PATCH 2/2] wifi: nl80211:Used the chandef from the configured
 parameters during the validation of beacon tx_rate.

Currently while setting tx rate the chandef configured in the wdev's
link is fetched(using wdev_chandef) to validate the current band against the
rate config provided. This wdev's link chandef will be assigned only after
doing a start ap. However beacon rates are configured during start AP and
hence fetching chandef from wdev is not possible. Passed the chandef provided
in the nl command for validation of beacon rates.

Patch-dependency: 960-wifi-ath12k-Add-the-support-to-configure-the-legacy.patch
Patch-work:     [None]

Signed-off-by: Arulanbu Balusamy <quic_abalusam@quicinc.com>
---
 net/wireless/nl80211.c | 16 ++++++++++------
 1 file changed, 10 insertions(+), 6 deletions(-)

diff --git a/net/wireless/nl80211.c b/net/wireless/nl80211.c
index 15bb85d..86b8e73 100644
--- a/net/wireless/nl80211.c
+++ b/net/wireless/nl80211.c
@@ -5730,7 +5730,8 @@ static int nl80211_parse_tx_bitrate_mask(struct genl_info *info,
 					 struct cfg80211_bitrate_mask *mask,
 					 struct net_device *dev,
 					 bool default_all_enabled,
-					 unsigned int link_id)
+					 unsigned int link_id,
+					 struct cfg80211_chan_def *chandef)
 {
 	struct nlattr *tb[NL80211_TXRATE_MAX + 1];
 	struct cfg80211_registered_device *rdev = info->user_ptr[0];
@@ -5802,7 +5803,6 @@ static int nl80211_parse_tx_bitrate_mask(struct genl_info *info,
 	nla_for_each_nested(tx_rates, attrs[attr], rem) {
 		enum nl80211_band band_link, band = nla_type(tx_rates);
 		int err;
-		struct cfg80211_chan_def *chandef = wdev_chandef(wdev, link_id);
 
 		if (!chandef || !chandef->chan)
 			return -EINVAL;
@@ -6785,7 +6785,8 @@ static int nl80211_start_ap(struct sk_buff *skb, struct genl_info *info)
 		err = nl80211_parse_tx_bitrate_mask(info, info->attrs,
 						    NL80211_ATTR_TX_RATES,
 						    &params->beacon_rate,
-						    dev, false, link_id);
+						    dev, false, link_id,
+						    &params->chandef);
 		if (err)
 			goto out_unlock;
 
@@ -13458,7 +13459,8 @@ static int nl80211_set_tx_bitrate_mask(struct sk_buff *skb,
 	wdev_lock(wdev);
 	err = nl80211_parse_tx_bitrate_mask(info, info->attrs,
 					    NL80211_ATTR_TX_RATES, &mask,
-					    dev, true, link_id);
+					    dev, true, link_id,
+					    wdev_chandef(wdev, link_id));
 	if (err)
 		goto out;
 
@@ -14128,7 +14130,7 @@ static int nl80211_join_mesh(struct sk_buff *skb, struct genl_info *info)
 		err = nl80211_parse_tx_bitrate_mask(info, info->attrs,
 						    NL80211_ATTR_TX_RATES,
 						    &setup.beacon_rate,
-						    dev, false, 0);
+						    dev, false, 0, &setup.chandef);
 		if (err)
 			return err;
 
@@ -16948,7 +16950,9 @@ static int parse_tid_conf(struct cfg80211_registered_device *rdev,
 			attr = NL80211_TID_CONFIG_ATTR_TX_RATE;
 			err = nl80211_parse_tx_bitrate_mask(info, attrs, attr,
 						    &tid_conf->txrate_mask, dev,
-						    true, link_id);
+						    true, link_id,
+						    wdev_chandef(rdev->background_radar_wdev,
+						    link_id));
 			if (err)
 				return err;
 
-- 
2.34.1

