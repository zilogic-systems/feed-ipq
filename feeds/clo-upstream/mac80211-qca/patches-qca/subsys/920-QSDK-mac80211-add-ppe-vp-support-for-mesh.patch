From 6779548a84a52c20dffaf582919c9eb093b8c7b7 Mon Sep 17 00:00:00 2001
From: Hari Chandrakanthan <quic_haric@quicinc.com>
Date: Thu, 1 Aug 2024 12:07:07 +0530
Subject: [PATCH] QSDK: mac80211: add ppe vp support for mesh

Add support to parse and retrieve PPE VP number from skb->mark
and use it to send the skb to PPE.

Patch-dependency: 961-QSDK-ath12k-add-ppe-vp-supprt-for-mesh.patch

Throughput test config:
Band and Bandwidth: 6GHz band, 320MHz
Inteface mode : mesh

With this patch and 961-QSDK-ath12k-add-ppe-vp-supprt-for-mesh.patch
patch, the average throughput for 5 tries is 5103Mbps.

Without this patch and 961-QSDK-ath12k-add-ppe-vp-supprt-for-mesh.patch patch,
the average throughput for 5 tries is 5123Mbps.

Idle cpu %:
Without the patches :	all	core0	core1	core2	core3
			37.8	12.2	15.2	15.9	99.01

With the patches :	all	core0	core1	core2	core3
			40.22	17.5	14.2	20.4	100

Signed-off-by: Hari Chandrakanthan <quic_haric@quicinc.com>
---
 net/mac80211/rx.c | 34 +++++++++++++++++-----------------
 1 file changed, 17 insertions(+), 17 deletions(-)

--- a/net/mac80211/rx.c
+++ b/net/mac80211/rx.c
@@ -34,6 +34,9 @@
 #include "rate.h"
 
 extern int debug_param;
+#define IEEE80211_FSE_MAGIC_NUM      0xAA
+#define IEEE80211_FSE_MAGIC_NUM_MASK GENMASK(7,0)
+#define IEEE80211_PPE_VP_NUM         GENMASK(23, 8)
 
 static inline void ieee80211_rx_stats(struct net_device *dev, u32 len)
 {
@@ -2703,30 +2706,28 @@ static bool ieee80211_frame_allowed(stru
 }
 
 #ifdef CPTCFG_MAC80211_PPE_SUPPORT
-static void ieee80211_netif_rx_ppe(struct ieee80211_rx_data *rx,
-				   struct sk_buff *skb)
+static bool inline ieee80211_netif_rx_ppe(struct ieee80211_rx_data *rx,
+					 struct sk_buff *skb)
 {
-	struct ieee80211_sub_if_data *sdata = rx->sdata;
+	u16 ppe_vp_num;
 
 	skb->next = NULL;
+	if (u32_get_bits(skb->mark, IEEE80211_FSE_MAGIC_NUM_MASK) !=
+	    IEEE80211_FSE_MAGIC_NUM)
+		return false;
+
 	/*
 	 * if the skb is shared, not sure when it has to be freed.
 	 * skip ppe and proceed with normal path.
 	 */
-	if (unlikely(skb_shared(skb)))
-		goto out;
-
-	if (likely(ppe_vp_tx_to_ppe(sdata->vif.ppe_vp_num, skb)))
-		return;
+	if (unlikely(skb_shared(skb) || skb_is_nonlinear(skb)))
+		return false;
 
-out:
-	skb->protocol = eth_type_trans(skb, sdata->dev);
-	skb->dev = sdata->dev;
-	if (rx->napi)
-		napi_gro_receive(rx->napi, skb);
-	else
-		netif_receive_skb(skb);
+	ppe_vp_num = u32_get_bits(skb->mark, IEEE80211_PPE_VP_NUM);
+	if (likely(ppe_vp_tx_to_ppe(ppe_vp_num, skb)))
+		return true;
 
+	return false;
 }
 #endif
 
@@ -5093,8 +5094,7 @@ static void ieee80211_rx_8023(struct iee
 	}
 
 #ifdef CPTCFG_MAC80211_PPE_SUPPORT
-	if (rx->sdata->vif.ppe_vp_num) {
-		ieee80211_netif_rx_ppe(rx, skb);
+	if (ieee80211_netif_rx_ppe(rx, skb)) {
 		atomic_inc(&sta->rx_netif_pkts);
 		return;
 	}
