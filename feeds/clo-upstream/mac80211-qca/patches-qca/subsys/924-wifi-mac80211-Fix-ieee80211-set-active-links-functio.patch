From 53ea9930cdcacf8a53a1747a6ab4c29864645468 Mon Sep 17 00:00:00 2001
From: Sidhanta Sahu <quic_sidhanta@quicinc.com>
Date: Fri, 29 Mar 2024 19:02:36 -0700
Subject: [PATCH] QSDK: wifi: mac80211: Fix ieee80211 set active links function

Currently, in ieee80211_set_active_links does call drv_change_sta_links
and then call link_use_channel. The problem is that drv_change_sta_links
will update the resources to the firmware post recovery before the
creation or assignment of chanctx for the targeted vif which resulted
in unexpected behavior.

The caller must ensure that link are assigned with an existing or new
chanctx before changing the links resources in the target.

Change list:
        - Fix Mode-0 SSR for WDS STA mode - by calling link_use channel
        function before drv_change_sta_links.

Patch-dependency: None
Patch-work: None

Signed-off-by: Sidhanta Sahu <quic_sidhanta@quicinc.com>
---
 net/mac80211/link.c | 51 +++++++++++++++++++++++----------------------
 1 file changed, 26 insertions(+), 25 deletions(-)

--- a/net/mac80211/link.c
+++ b/net/mac80211/link.c
@@ -450,6 +450,31 @@ static int _ieee80211_set_active_links(s
 		ieee80211_link_release_channel(link);
 	}
 
+	for_each_set_bit(link_id, &add, IEEE80211_MLD_MAX_NUM_LINKS) {
+		struct ieee80211_link_data *link;
+
+		link = sdata_dereference(sdata->link[link_id], sdata);
+
+		ret = ieee80211_link_use_channel(link, &link->conf->chandef,
+						 IEEE80211_CHANCTX_SHARED);
+		WARN_ON_ONCE(ret);
+
+		ieee80211_mgd_set_link_qos_params(link);
+		ieee80211_link_info_change_notify(sdata, link,
+						  BSS_CHANGED_ERP_CTS_PROT |
+						  BSS_CHANGED_ERP_PREAMBLE |
+						  BSS_CHANGED_ERP_SLOT |
+						  BSS_CHANGED_HT |
+						  BSS_CHANGED_BASIC_RATES |
+						  BSS_CHANGED_BSSID |
+						  BSS_CHANGED_CQM |
+						  BSS_CHANGED_QOS |
+						  BSS_CHANGED_TXPOWER |
+						  BSS_CHANGED_BANDWIDTH |
+						  BSS_CHANGED_TWT |
+						  BSS_CHANGED_HE_OBSS_PD |
+						  BSS_CHANGED_HE_BSS_COLOR);
+	}
 	list_for_each_entry(sta, &local->sta_list, list) {
 		if (sdata != sta->sdata)
 			continue;
@@ -488,31 +513,6 @@ static int _ieee80211_set_active_links(s
 		__ieee80211_sta_recalc_aggregates(sta, active_links);
 	}
 
-	for_each_set_bit(link_id, &add, IEEE80211_MLD_MAX_NUM_LINKS) {
-		struct ieee80211_link_data *link;
-
-		link = sdata_dereference(sdata->link[link_id], sdata);
-
-		ret = ieee80211_link_use_channel(link, &link->conf->chandef,
-						 IEEE80211_CHANCTX_SHARED);
-		WARN_ON_ONCE(ret);
-
-		ieee80211_mgd_set_link_qos_params(link);
-		ieee80211_link_info_change_notify(sdata, link,
-						  BSS_CHANGED_ERP_CTS_PROT |
-						  BSS_CHANGED_ERP_PREAMBLE |
-						  BSS_CHANGED_ERP_SLOT |
-						  BSS_CHANGED_HT |
-						  BSS_CHANGED_BASIC_RATES |
-						  BSS_CHANGED_BSSID |
-						  BSS_CHANGED_CQM |
-						  BSS_CHANGED_QOS |
-						  BSS_CHANGED_TXPOWER |
-						  BSS_CHANGED_BANDWIDTH |
-						  BSS_CHANGED_TWT |
-						  BSS_CHANGED_HE_OBSS_PD |
-						  BSS_CHANGED_HE_BSS_COLOR);
-	}
 
 	old_active = sdata->vif.active_links;
 	sdata->vif.active_links = active_links;
