From 7232ba54d221614095adb06f8c0ba1809aa9c946 Mon Sep 17 00:00:00 2001
From: Hari Chandrakanthan <quic_haric@quicinc.com>
Date: Tue, 20 Aug 2024 12:20:39 +0530
Subject: [PATCH] QSDK: wifi: mac80211: add-ATHMEMDEBUG-support

Add support to bring up ATH memory debug infrastructure - ATHMEMDEBUG.

This debug infrastructure tracks memory allocation and deallocation.
Below are the types and details of the methodology used for memory
tracking:

 1. Memory allocated/deallocated in WiFi subsystem (cfg/mac80211 & ath):
    Memory allocations and deallocations in WiFi subsystems are tracked
    by redefining the kernel memory APIs (e.g., kzalloc, kfree,
    netdev_alloc_skb) using #define pre-processor directives. The
    redefined APIs are part of the core kernel and keep track of memory
    allocations and deallocations.

2. Memory allocated in WiFi subsystem but freed outside WiFi subsystem:
   Memory such as RX skb is allocated in the WiFi subsystem but handed
   over to the Linux network subsystem. These memories can be freed in
   the network subsystem or elsewhere, but not in the WiFi subsystem.
   Memory allocation is tracked using #define pre-processor directives,
   while freeing is tracked by modifying the kernel skb_free APIs.

3. Memory allocated in other subsystems but freed in WiFi subsystem:
   Memory such as TX skb is allocated in the network or other subsystems
   but received by mac80211 for further transmission. These memories are
   freed in the WiFi subsystem once consumed. To track these memories,
   we treat the entry point of these SKBs into the WiFi subsystem as
   allocation. The entry point functions are ieee80211_subif_start_xmit(),
   ieee80211_monitor_start_xmit(), and ieee80211_subif_start_xmit_8023().
   Deallocation is tracked by redefining kernel free APIs using #define
   pre-processor directives.

Steps to enable ATHMEMDEBUG infrastructure in QSDK build:

  - Include the following configurations to enable ATHMEMDEBUG infrastructure
    in QSDK config

      echo "CONFIG_KERNEL_ATHMEMDEBUG=y" >> .config
      echo "CONFIG_PACKAGE_MAC80211_ATHMEMDEBUG=y" >> .config

  - Compile QSDK

Command to see the memory allocation at runtime:

  cat /sys/kernel/debug/ath_memdebug/meminfo

Sample Output:

  root@OpenWrt:/# cat /sys/kernel/debug/ath_memdebug/meminfo
  node count :  20517
  func : ath12k_dp_mon_buf_replenish (00000000e3eb52cc)    line : 2540 count : 12285 size 26732160
  func : ath12k_dp_cc_desc_init (000000007b5fc07c)         line : 2226 count : 768 size 18874368
  func : ath12k_dp_srng_setup (0000000082f8ab1e)   line : 532 count : 29 size 14287051
  func : ath12k_dp_link_desc_bank_alloc (0000000019ce21c5)         line : 1107 count : 9 size 12584064
  func : ath12k_ce_rx_post_pipe (00000000d36b0a89)         line : 385 count : 3816 size 7815168
  func : ath12k_dbring_fill_bufs (00000000cecfc952)        line : 132 count : 1074 size 5708070
  func : ath12k_dp_cc_ppeds_desc_init (0000000065f9d324)   line : 2150 count : 256 size 5242880
  ...
  total allocated mem(bytes) : 111036426
  memory size of rb tree : 1148952
  dup_ptr count 9

Interpreting the memory stats output:
  - node count: Total number of memory allocation instances currently
      in the allocated state.
  - func : <func-name> line : <line-number> count : <count> size : <size>:
      func: Function name with address pointer where memory allocation is done.
      line: Line number within the function where memory allocation is done.
      count: Number of memory allocations with the same function name and line number.
      size: Total memory allocation size with the same function and line number.
  - total allocated mem(bytes): Total memory currently held within the
    WiFi subsystem.
  - memory size of rb tree: Memory in bytes used by ATHMEMDEBUG infrastructure
    to store the memory debug info in the red-black tree.
  - dup_ptr count: Count of duplicate allocation entries. This represents the
    number of times the ATH debug infrastructure has attempted to enter a
    duplicate allocation.

Signed-off-by: Hari Chandrakanthan <quic_haric@quicinc.com>
Signed-off-by: Raj Kumar Bhagat <quic_rajkbhag@quicinc.com>
Signed-off-by: Aishwarya R <quic_aisr@quicinc.com>
---
 backport-include/linux/athdebug_dma-mapping.h | 14 +++++++++++
 backport-include/linux/athdebug_skbuff.h      | 24 +++++++++++++++++++
 backport-include/linux/athdebug_slab.h        | 22 +++++++++++++++++
 backport-include/linux/dma-mapping.h          |  4 ++++
 backport-include/linux/rcupdate.h             | 13 ++++++++++
 backport-include/linux/skbuff.h               |  3 +++
 backport-include/linux/slab.h                 |  4 ++++
 backport-include/net/athdebug_netlink.h       | 13 ++++++++++
 backport-include/net/netlink.h                |  4 ++++
 net/mac80211/tx.c                             | 18 +++++++++++++-
 10 files changed, 118 insertions(+), 1 deletion(-)
 create mode 100644 backport-include/linux/athdebug_dma-mapping.h
 create mode 100644 backport-include/linux/athdebug_skbuff.h
 create mode 100644 backport-include/linux/athdebug_slab.h
 create mode 100644 backport-include/net/athdebug_netlink.h

diff --git a/backport-include/linux/athdebug_dma-mapping.h b/backport-include/linux/athdebug_dma-mapping.h
new file mode 100644
index 0000000..2b6f809
--- /dev/null
+++ b/backport-include/linux/athdebug_dma-mapping.h
@@ -0,0 +1,14 @@
+/*
+ * Copyright (c) 2024 Qualcomm Innovation Center, Inc. All rights reserved.
+ * SPDX-License-Identifier: GPL-2.0-only
+ */
+
+#ifndef __ATHDEBUG_DMA_MAPPING_H
+#define __ATHDEBUG_DMA_MAPPING_H
+
+#include <linux/ath_memdebug.h>
+
+#define dma_alloc_coherent(dev, len, handle, flags)		ath_dma_alloc_coherent(dev, len, handle, flags, __LINE__, __func__);
+#define dma_free_coherent(dev, size, cpu_addr, dma_handle)	ath_dma_free_coherent(dev, size, cpu_addr, dma_handle);
+
+#endif /* __ATHDEBUG_DMA_MAPPING_H */
diff --git a/backport-include/linux/athdebug_skbuff.h b/backport-include/linux/athdebug_skbuff.h
new file mode 100644
index 0000000..afefb73
--- /dev/null
+++ b/backport-include/linux/athdebug_skbuff.h
@@ -0,0 +1,24 @@
+/*
+ * Copyright (c) 2024 Qualcomm Innovation Center, Inc. All rights reserved.
+ * SPDX-License-Identifier: GPL-2.0-only
+ */
+
+#ifndef __ATHDEBUG_SKBUFF_H
+#define __ATHDEBUG_SKBUFF_H
+
+#include <linux/ath_memdebug.h>
+
+#define __netdev_alloc_skb_no_skb_reset(dev, len, flags) \
+	ath_netdev_alloc_skb_no_skb_reset(dev, len, flags, __LINE__, __func__)
+#define netdev_alloc_skb(dev, len) \
+	ath_netdev_alloc_skb(dev, len, __LINE__, __func__)
+#define netdev_alloc_skb_fast(dev, len) \
+	ath_netdev_alloc_skb_fast(dev, len, __LINE__, __func__)
+#define dev_alloc_skb(len)		ath_dev_alloc_skb(len, __LINE__, __func__)
+#define skb_copy(skb, flags)		ath_skb_copy(skb, flags, __LINE__, __func__)
+#define skb_clone(skb, flags)		ath_skb_clone(skb, flags, __LINE__, __func__)
+#define skb_clone_sk(skb)		ath_skb_clone_sk(skb, __LINE__, __func__)
+#define skb_share_check(skb, flags) \
+	ath_skb_share_check(skb, flags, __LINE__, __func__)
+
+#endif /* __ATHDEBUG_SKBUFF_H */
diff --git a/backport-include/linux/athdebug_slab.h b/backport-include/linux/athdebug_slab.h
new file mode 100644
index 0000000..fea8377
--- /dev/null
+++ b/backport-include/linux/athdebug_slab.h
@@ -0,0 +1,22 @@
+/*
+ * Copyright (c) 2024 Qualcomm Innovation Center, Inc. All rights reserved.
+ * SPDX-License-Identifier: GPL-2.0-only
+ */
+
+#ifndef __ATHDEBUG_SLAB_H
+#define __ATHDEBUG_SLAB_H
+
+#include <linux/ath_memdebug.h>
+#include_next <linux/vmalloc.h>
+
+#define kmalloc(len, flags)		ath_kmalloc(len, flags, __LINE__, __func__)
+#define kmemdup(ptr, len, flags)	ath_kmemdup(ptr, len, flags, __LINE__, __func__)
+#define kzalloc(len,flags)		ath_kzalloc(len, flags, __LINE__, __func__)
+#define vmalloc(len)			ath_vmalloc(len, __LINE__, __func__)
+#define kcalloc(n, len, flags)		ath_kcalloc(n, len, flags, __LINE__, __func__)
+#define vzalloc(len)                    ath_vzalloc(len, __LINE__, __func__)
+#define kfree(ptr)                      ath_kfree(ptr)
+#define vfree(ptr)                      ath_vfree(ptr)
+#define kfree_sensitive(ptr)            ath_kfree_sensitive(ptr)
+
+#endif /* __ATHDEBUG_SLAB_H */
diff --git a/backport-include/linux/dma-mapping.h b/backport-include/linux/dma-mapping.h
index e50ce49..a5e9c81 100644
--- a/backport-include/linux/dma-mapping.h
+++ b/backport-include/linux/dma-mapping.h
@@ -2,6 +2,10 @@
 #define __BACKPORT_LINUX_DMA_MAPPING_H
 #include_next <linux/dma-mapping.h>
 
+#ifdef CPTCFG_MAC80211_ATHMEMDEBUG
+#include <linux/athdebug_dma-mapping.h>
+#endif
+
 #ifndef DMA_MAPPING_ERROR
 /*
  * A dma_addr_t can hold any valid DMA or bus address for the platform.  It can
diff --git a/backport-include/linux/rcupdate.h b/backport-include/linux/rcupdate.h
index 0bbfd61..7da401b 100644
--- a/backport-include/linux/rcupdate.h
+++ b/backport-include/linux/rcupdate.h
@@ -10,6 +10,18 @@
  * put rcu_barrier() into each module_exit() in module.h.
  */
 #if !defined(kfree_rcu)
+#ifdef CPTCFG_MAC80211_ATHMEMDEBUG
+#define kfree_rcu(data, rcuhead)	ath_update_free(data)		\
+	do {								\
+		void __kfree_rcu_fn(struct rcu_head *rcu_head)		\
+		{							\
+			 void *___ptr;					\
+			___ptr = container_of(rcu_head, typeof(*(data)), rcuhead);\
+			kfree(___ptr);					\
+		}							\
+		call_rcu(&(data)->rcuhead, __kfree_rcu_fn);		\
+	} while (0)
+#else
 #define kfree_rcu(data, rcuhead)		do {			\
 		void __kfree_rcu_fn(struct rcu_head *rcu_head)		\
 		{							\
@@ -20,6 +32,7 @@
 		call_rcu(&(data)->rcuhead, __kfree_rcu_fn);		\
 	} while (0)
 #endif
+#endif
 
 #ifndef RCU_INIT_POINTER
 #define RCU_INIT_POINTER(p, v) \
diff --git a/backport-include/linux/skbuff.h b/backport-include/linux/skbuff.h
index 43165cb..53d000c 100644
--- a/backport-include/linux/skbuff.h
+++ b/backport-include/linux/skbuff.h
@@ -4,6 +4,9 @@
 #include_next <linux/skbuff.h>
 #include <linux/version.h>
 
+#ifdef CPTCFG_MAC80211_ATHMEMDEBUG
+#include <linux/athdebug_skbuff.h>
+#endif
 
 #if LINUX_VERSION_IS_LESS(4,13,0) && \
 	RHEL_RELEASE_CODE < RHEL_RELEASE_VERSION(7,6)
diff --git a/backport-include/linux/slab.h b/backport-include/linux/slab.h
index c90df9e..07a2e03 100644
--- a/backport-include/linux/slab.h
+++ b/backport-include/linux/slab.h
@@ -3,6 +3,10 @@
 #include_next <linux/slab.h>
 #include <linux/version.h>
 
+#ifdef CPTCFG_MAC80211_ATHMEMDEBUG
+#include <linux/athdebug_slab.h>
+#endif
+
 #if LINUX_VERSION_IS_LESS(5,9,0)
 #define kfree_sensitive(x)	kzfree(x) /* For backward compatibility */
 #endif
diff --git a/backport-include/net/athdebug_netlink.h b/backport-include/net/athdebug_netlink.h
new file mode 100644
index 0000000..6066122
--- /dev/null
+++ b/backport-include/net/athdebug_netlink.h
@@ -0,0 +1,13 @@
+/*
+ * Copyright (c) 2024 Qualcomm Innovation Center, Inc. All rights reserved.
+ * SPDX-License-Identifier: GPL-2.0-only
+ */
+
+#ifndef __ATHDEBUG_NETLINK_H
+#define __ATHDEBUG_NETLINK_H
+
+#include <linux/ath_memdebug.h>
+
+#define nlmsg_new(len, flags)		ath_nlmsg_new(len, flags, __LINE__, __func__)
+
+#endif /* __ATHDEBUG_NETLINK_H */
diff --git a/backport-include/net/netlink.h b/backport-include/net/netlink.h
index 0de0de5..914e570 100644
--- a/backport-include/net/netlink.h
+++ b/backport-include/net/netlink.h
@@ -4,6 +4,10 @@
 #include <linux/version.h>
 #include <linux/in6.h>
 
+#ifdef CPTCFG_MAC80211_ATHMEMDEBUG
+#include <net/athdebug_netlink.h>
+#endif
+
 #if LINUX_VERSION_IS_LESS(5,2,0)
 /* can't backport using the enum - need to override */
 #define NLA_UNSPEC		0
diff --git a/net/mac80211/tx.c b/net/mac80211/tx.c
index c0ef11e..607c596 100644
--- a/net/mac80211/tx.c
+++ b/net/mac80211/tx.c
@@ -2361,6 +2361,10 @@ netdev_tx_t ieee80211_monitor_start_xmit(struct sk_buff *skb,
 	u16 len_rthdr;
 	int hdrlen;
 
+#ifdef CPTCFG_MAC80211_ATHMEMDEBUG
+	ath_update_alloc(skb, skb->truesize, __LINE__, __func__, 1);
+#endif
+
 	sdata = IEEE80211_DEV_TO_SUB_IF(dev);
 	if (unlikely(!ieee80211_sdata_running(sdata)))
 		goto fail;
@@ -4643,6 +4647,10 @@ netdev_tx_t ieee80211_subif_start_xmit(struct sk_buff *skb,
 	struct ieee80211_sub_if_data *sdata = IEEE80211_DEV_TO_SUB_IF(dev);
 	const struct ethhdr *eth = (void *)skb->data;
 
+#ifdef CPTCFG_MAC80211_ATHMEMDEBUG
+	ath_update_alloc(skb, skb->truesize, __LINE__, __func__, 1);
+#endif
+
 #ifdef CPTCFG_MAC80211_NSS_SUPPORT
 	ieee80211_xmit_nss_fixup(skb, dev);
 #endif
@@ -4937,6 +4945,10 @@ netdev_tx_t ieee80211_subif_start_xmit_8023(struct sk_buff *skb,
 	struct ieee80211_sta *pubsta = NULL;
 	bool perf_mode = sdata->local->hw.perf_mode;
 
+#ifdef CPTCFG_MAC80211_ATHMEMDEBUG
+        ath_update_alloc(skb, skb->truesize, __LINE__, __func__, 1);
+#endif
+
 	orig_sdata = sdata;
 	if (likely(skb->fast_xmit && perf_mode)) {
 		if (sdata->vif.type == NL80211_IFTYPE_AP_VLAN)
@@ -4974,7 +4986,11 @@ out:
 	}
 
 	info->control.vif = &sdata->vif;
-#endif
+#else
+#ifdef CPTCFG_MAC80211_ATHMEMDEBUG
+        ath_update_alloc(skb, skb->truesize, __LINE__, __func__, 1);
+#endif /* CPTCFG_MAC80211_ATHMEMDEBUG */
+#endif /* CPTCFG_MAC80211_SFE_SUPPORT */
 	return __ieee80211_subif_start_xmit_8023(skb, dev, 0, 0, NULL);
 
 }
-- 
2.34.1

