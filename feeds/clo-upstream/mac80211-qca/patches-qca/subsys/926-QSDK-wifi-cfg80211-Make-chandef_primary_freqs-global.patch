From 69f865a1cc521b9a18e574d78851bd83909cb07d Mon Sep 17 00:00:00 2001
From: Amith A <quic_amitajit@quicinc.com>
Date: Wed, 25 Sep 2024 12:24:06 +0530
Subject: [PATCH] QSDK: wifi: cfg80211: Make chandef_primary_freqs global to be
 used in ath12k

Make chandef_primary_freqs API global to be used in ath12k. Rename it to
cfg80211_chandef_primary_freqs.

Signed-off-by: Amith A <quic_amitajit@quicinc.com>
---
 include/linux/ieee80211.h |  5 +++++
 include/net/cfg80211.h    | 12 ++++++++++++
 net/wireless/chan.c       |  9 +++++----
 3 files changed, 22 insertions(+), 4 deletions(-)

--- a/include/net/cfg80211.h
+++ b/include/net/cfg80211.h
@@ -1037,6 +1037,18 @@ cfg80211_chandef_compatible(const struct
 bool cfg80211_chandef_valid(const struct cfg80211_chan_def *chandef);
 
 /**
+ * cfg80211_chandef_primary_freqs - Fill centre freq for 40, 80 and 160 MHz for
+ * the given chan_def
+ * @chandef: Input channel definition
+ * @pri40: Centre freq of 40 MHz
+ * @pri80: Centre freq of 80 MHz
+ * @pri160: Centre freq of 160 MHz
+ * Return: %true if the channel definition is valid. %false otherwise.
+ */
+void cfg80211_chandef_primary_freqs(const struct cfg80211_chan_def *c, u32 *pri40,
+				    u32 *pri80, u32 *pri160);
+
+/**
  * cfg80211_get_start_freq_device - retrieve start frequency of the device BW
  * @chandef: the channel definition to check
  * Returns: Start frequency in KHz.
--- a/net/wireless/chan.c
+++ b/net/wireless/chan.c
@@ -442,8 +442,8 @@ bool cfg80211_chandef_valid(const struct
 }
 EXPORT_SYMBOL(cfg80211_chandef_valid);
 
-static void chandef_primary_freqs(const struct cfg80211_chan_def *c,
-				  u32 *pri40, u32 *pri80, u32 *pri160)
+void cfg80211_chandef_primary_freqs(const struct cfg80211_chan_def *c,
+				    u32 *pri40, u32 *pri80, u32 *pri160)
 {
 	int tmp;
 
@@ -494,6 +494,7 @@ static void chandef_primary_freqs(const
 		WARN_ON_ONCE(1);
 	}
 }
+EXPORT_SYMBOL(cfg80211_chandef_primary_freqs);
 
 const struct cfg80211_chan_def *
 cfg80211_chandef_compatible(const struct cfg80211_chan_def *c1,
@@ -534,8 +535,8 @@ cfg80211_chandef_compatible(const struct
 	    c2->width == NL80211_CHAN_WIDTH_20)
 		return c1;
 
-	chandef_primary_freqs(c1, &c1_pri40, &c1_pri80, &c1_pri160);
-	chandef_primary_freqs(c2, &c2_pri40, &c2_pri80, &c2_pri160);
+	cfg80211_chandef_primary_freqs(c1, &c1_pri40, &c1_pri80, &c1_pri160);
+	cfg80211_chandef_primary_freqs(c2, &c2_pri40, &c2_pri80, &c2_pri160);
 
 	if (c1_pri40 != c2_pri40)
 		return NULL;
