From 444a8d69e34545bdda6e09b7fc836e4a5a87fc83 Mon Sep 17 00:00:00 2001
From: Sarika Sharma <quic_sarishar@quicinc.com>
Date: Thu, 19 Sep 2024 14:44:00 +0530
Subject: [PATCH 3/3] wifi: mac80211: add flag to check for ap mon support

Currently, bringing the interface AP and monitor on the same PHY is
not supported.

Hence to avoid enabling the monitor and AP on the same PHY, use
the flag SUPPORTS_CONC_AP_MON_IN_80211_FORAMAT check.

Signed-off-by: Sarika Sharma <quic_sarishar@quicinc.com>
---
 include/net/mac80211.h | 4 ++++
 net/mac80211/debugfs.c | 1 +
 net/mac80211/iface.c   | 6 ++++--
 3 files changed, 9 insertions(+), 2 deletions(-)

--- a/include/net/mac80211.h
+++ b/include/net/mac80211.h
@@ -2831,6 +2831,9 @@ struct ieee80211_txq {
  *
  * @IEEE80211_HW_VLAN_DATA_OFFLOAD: driver supports vlan data path offload
  *
+ * @IEEE80211_HW_SUPPORTS_CONC_AP_MON_IN_80211_FORMAT: Hardware supports concurrent
+ *	encapsulation decapsulation offload for AP and monitor in 80211 FORMAT.
+ *
  * @NUM_IEEE80211_HW_FLAGS: number of hardware flags, used for sizing arrays
  */
 enum ieee80211_hw_flags {
@@ -2895,6 +2898,7 @@ enum ieee80211_hw_flags {
 	IEEE80211_HW_HAS_TX_QUEUE,
 	IEEE80211_HW_SUPPORT_ECM_REGISTRATION,
 	IEEE80211_HW_SUPPORTS_VLAN_DATA_OFFLOAD,
+	IEEE80211_HW_SUPPORTS_CONC_AP_MON_IN_80211_FORMAT,
 
 	/* keep last, obviously */
 	NUM_IEEE80211_HW_FLAGS
--- a/net/mac80211/debugfs.c
+++ b/net/mac80211/debugfs.c
@@ -575,6 +575,7 @@ static const char *hw_flag_names[] = {
 	FLAG(HAS_TX_QUEUE),
 	FLAG(SUPPORT_ECM_REGISTRATION),
 	FLAG(SUPPORTS_VLAN_DATA_OFFLOAD),
+	FLAG(SUPPORTS_CONC_AP_MON_IN_80211_FORMAT),
 #undef FLAG
 };
 
--- a/net/mac80211/iface.c
+++ b/net/mac80211/iface.c
@@ -1051,7 +1051,8 @@ static bool ieee80211_set_sdata_offload_
 			flags &= ~IEEE80211_OFFLOAD_ENCAP_ENABLED;
 
 		if (local->monitors &&
-		    !ieee80211_hw_check(&local->hw, SUPPORTS_NSS_OFFLOAD))
+		    (!ieee80211_hw_check(&local->hw, SUPPORTS_NSS_OFFLOAD) &&
+		     ieee80211_hw_check(&local->hw, SUPPORTS_CONC_AP_MON_IN_80211_FORMAT)))
 			flags &= ~IEEE80211_OFFLOAD_ENCAP_ENABLED;
 	} else {
 		flags &= ~IEEE80211_OFFLOAD_ENCAP_ENABLED;
@@ -1062,8 +1063,9 @@ static bool ieee80211_set_sdata_offload_
 		flags |= IEEE80211_OFFLOAD_DECAP_ENABLED;
 
 		if (local->monitors &&
-		    (!ieee80211_hw_check(&local->hw, SUPPORTS_NSS_OFFLOAD) ||
-		     !ieee80211_hw_check(&local->hw, SUPPORTS_CONC_MON_RX_DECAP)))
+		    ((!ieee80211_hw_check(&local->hw, SUPPORTS_NSS_OFFLOAD) ||
+		      !ieee80211_hw_check(&local->hw, SUPPORTS_CONC_MON_RX_DECAP)) &&
+		     ieee80211_hw_check(&local->hw, SUPPORTS_CONC_AP_MON_IN_80211_FORMAT)))
 			flags &= ~IEEE80211_OFFLOAD_DECAP_ENABLED;
 	} else {
 		flags &= ~IEEE80211_OFFLOAD_DECAP_ENABLED;
