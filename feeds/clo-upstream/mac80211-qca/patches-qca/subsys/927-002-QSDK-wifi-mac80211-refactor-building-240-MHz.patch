From 316e68cc5fb88c2f187b8e5606155654ba690f91 Mon Sep 17 00:00:00 2001
From: Aloka Dixit <quic_alokad@quicinc.com>
Date: Mon, 23 Sep 2024 19:06:02 -0700
Subject: [PATCH 2/4] QSDK: wifi: mac80211: refactor building 240 MHz vendor IE

Refactor building of 240 MHz IE into a separate function.

Patch-dependency: 927-001-QSDK-wifi-mac80211-fix-240-MHz-vendor-IE-parsing.patch
Patch-work: None

Signed-off-by: Aloka Dixit <quic_alokad@quicinc.com>
---
 net/mac80211/eht.c | 77 ++++++++++++++++++++++++----------------------
 1 file changed, 40 insertions(+), 37 deletions(-)

--- a/net/mac80211/eht.c
+++ b/net/mac80211/eht.c
@@ -7,6 +7,41 @@
 
 #include "ieee80211_i.h"
 
+static void
+ieee80211_240mhz_cap_to_eht_cap(const struct ieee80211_240mhz_vendor_oper *eht_240mhz_cap,
+				u8 *phy_cap,
+				struct ieee80211_eht_mcs_nss_supp_bw *bw_320)
+{
+	/* Override capabilities from QCN IE for 240MHz to EHT phy capab */
+	phy_cap[0] = u8_replace_bits(phy_cap[0], eht_240mhz_cap->is5ghz240mhz,
+				     IEEE80211_EHT_PHY_CAP0_320MHZ_IN_6GHZ);
+
+	if (eht_240mhz_cap->bfmess320mhz)
+		phy_cap[1] = u8_replace_bits(phy_cap[1], eht_240mhz_cap->bfmess320mhz,
+					     IEEE80211_EHT_PHY_CAP1_BEAMFORMEE_SS_320MHZ_MASK);
+
+	if (eht_240mhz_cap->numsound320mhz) {
+		phy_cap[2] = u8_replace_bits(phy_cap[2], eht_240mhz_cap->numsound320mhz,
+					     IEEE80211_EHT_240MHZ_PHY_SOUNDING_DIM_320MHZ_MASK);
+
+		phy_cap[3] = u8_replace_bits(phy_cap[3],
+					     eht_240mhz_cap->numsound320mhz >> 2,
+					     IEEE80211_EHT_PHY_CAP3_SOUNDING_DIM_320MHZ_MASK);
+	}
+
+	if (eht_240mhz_cap->nonofdmaulmumimo320mhz)
+		phy_cap[7] = u8_replace_bits(phy_cap[7],
+					     eht_240mhz_cap->nonofdmaulmumimo320mhz,
+					     IEEE80211_EHT_PHY_CAP7_NON_OFDMA_UL_MU_MIMO_320MHZ);
+
+	if (eht_240mhz_cap->mubfmr320mhz)
+		phy_cap[7] = u8_replace_bits(phy_cap[7], eht_240mhz_cap->mubfmr320mhz,
+					     IEEE80211_EHT_PHY_CAP7_MU_BEAMFORMER_320MHZ);
+
+	memcpy(bw_320, &eht_240mhz_cap->mcs_map_320mhz,
+	       sizeof(struct ieee80211_eht_mcs_nss_supp_bw));
+}
+
 void
 ieee80211_eht_cap_ie_to_sta_eht_cap(struct ieee80211_sub_if_data *sdata,
 				    struct ieee80211_supported_band *sband,
@@ -19,7 +54,7 @@ ieee80211_eht_cap_ie_to_sta_eht_cap(stru
 {
 	struct ieee80211_sta_eht_cap *eht_cap = &link_sta->pub->eht_cap;
 	struct ieee80211_he_cap_elem *he_cap_ie_elem = (void *)he_cap_ie;
-	u8 eht_ppe_size = 0, *phy_cap_info;
+	u8 eht_ppe_size = 0;
 	u8 mcs_nss_size;
 	u8 eht_total_size = sizeof(eht_cap->eht_cap_elem);
 	u8 *pos = (u8 *)eht_cap_ie_elem;
@@ -77,42 +112,10 @@ ieee80211_eht_cap_ie_to_sta_eht_cap(stru
 		       eht_ppe_size);
 
 	if (eht_240mhz_len && eht_240mhz_cap && eht_240mhz_cap->is5ghz240mhz &&
-	    sband->band == NL80211_BAND_5GHZ) {
-		phy_cap_info = eht_cap->eht_cap_elem.phy_cap_info;
-
-		/* Override capabilities from QCN IE for 240MHz to EHT phy capab */
-		phy_cap_info[0] = u8_replace_bits(phy_cap_info[0],
-						  eht_240mhz_cap->is5ghz240mhz,
-						  IEEE80211_EHT_PHY_CAP0_320MHZ_IN_6GHZ);
-
-		if (eht_240mhz_cap->bfmess320mhz)
-			phy_cap_info[1] = u8_replace_bits(phy_cap_info[1],
-							  eht_240mhz_cap->bfmess320mhz,
-							  IEEE80211_EHT_PHY_CAP1_BEAMFORMEE_SS_320MHZ_MASK);
-
-		if (eht_240mhz_cap->numsound320mhz) {
-			phy_cap_info[2] = u8_replace_bits(phy_cap_info[2],
-							  eht_240mhz_cap->numsound320mhz,
-							  IEEE80211_EHT_240MHZ_PHY_SOUNDING_DIM_320MHZ_MASK);
-
-			phy_cap_info[3] = u8_replace_bits(phy_cap_info[3],
-							  eht_240mhz_cap->numsound320mhz >> 2,
-							  IEEE80211_EHT_PHY_CAP3_SOUNDING_DIM_320MHZ_MASK);
-		}
-
-		if (eht_240mhz_cap->nonofdmaulmumimo320mhz)
-			phy_cap_info[7] = u8_replace_bits(phy_cap_info[7],
-							  eht_240mhz_cap->nonofdmaulmumimo320mhz,
-							  IEEE80211_EHT_PHY_CAP7_NON_OFDMA_UL_MU_MIMO_320MHZ);
-
-		if (eht_240mhz_cap->mubfmr320mhz)
-			phy_cap_info[7] = u8_replace_bits(phy_cap_info[7],
-							  eht_240mhz_cap->mubfmr320mhz,
-							  IEEE80211_EHT_PHY_CAP7_MU_BEAMFORMER_320MHZ);
-
-		memcpy(&eht_cap->eht_mcs_nss_supp.bw._320, &eht_240mhz_cap->mcs_map_320mhz,
-		       sizeof(struct ieee80211_eht_mcs_nss_supp_bw));
-	}
+	    sband->band == NL80211_BAND_5GHZ)
+		ieee80211_240mhz_cap_to_eht_cap(eht_240mhz_cap,
+						eht_cap->eht_cap_elem.phy_cap_info,
+						&eht_cap->eht_mcs_nss_supp.bw._320);
 
 	eht_cap->has_eht = true;
 
