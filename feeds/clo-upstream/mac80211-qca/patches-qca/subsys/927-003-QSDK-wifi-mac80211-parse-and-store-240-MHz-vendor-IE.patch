From 1eb0f505ba5ba2133187dc976a9e62524e71b854 Mon Sep 17 00:00:00 2001
From: Aloka Dixit <quic_alokad@quicinc.com>
Date: Mon, 23 Sep 2024 17:05:56 -0700
Subject: [PATCH 3/4] QSDK: wifi: mac80211: parse and store  240 MHz vendor IE

Parse QCN 240 MHz vendor element and store in struct ieee802_11_elems.
This data will be used for Q-Q 240 MHz association in 5 GHz.

Patch-dependency: 927-002-QSDK-wifi-mac80211-refactor-building-240-MHz.patch
Patch-work: None

Signed-off-by: Aloka Dixit <quic_alokad@quicinc.com>
---
 include/linux/ieee80211.h  |  4 ++++
 net/mac80211/ieee80211_i.h |  2 +-
 net/mac80211/util.c        | 34 ++++++++++++++++++++++++++++++++++
 3 files changed, 39 insertions(+), 1 deletion(-)

diff --git a/include/linux/ieee80211.h b/include/linux/ieee80211.h
index 9b43fdfb5c05..88df1187a078 100644
--- a/include/linux/ieee80211.h
+++ b/include/linux/ieee80211.h
@@ -4113,6 +4113,10 @@ struct ieee80211_multiple_bssid_configuration {
 #define WLAN_OUI_TYPE_MICROSOFT_WPS	4
 #define WLAN_OUI_TYPE_MICROSOFT_TPC	8
 
+#define WLAN_OUI_QCN                           0x8CFDF0
+#define WLAN_OUI_QCN_TYPE_1                    1
+#define WLAN_OUI_QCN_ATTR_5GHZ_240MHZ_SUPP     0x0B
+
 #define IEEE80211_EHT_OPER_CTRL_CHANWIDTH_20MHZ        0
 #define IEEE80211_EHT_OPER_CTRL_CHANWIDTH_40MHZ        1
 #define IEEE80211_EHT_OPER_CTRL_CHANWIDTH_80MHZ        2
diff --git a/net/mac80211/ieee80211_i.h b/net/mac80211/ieee80211_i.h
index f5492a2def67..3d9e6d42b99b 100644
--- a/net/mac80211/ieee80211_i.h
+++ b/net/mac80211/ieee80211_i.h
@@ -1803,7 +1803,7 @@ struct ieee802_11_elems {
 	const struct ieee80211_aid_response_ie *aid_resp;
 	const struct ieee80211_eht_cap_elem *eht_cap;
 	const struct ieee80211_eht_operation *eht_operation;
-	const struct ieee80211_240mhz_vendor_ope *eht_240mhz_capab;
+	const struct ieee80211_240mhz_vendor_oper *eht_240mhz_capab;
 	const struct ieee80211_multi_link_elem *ml_basic;
 	const struct ieee80211_multi_link_elem *ml_reconf;
 
diff --git a/net/mac80211/util.c b/net/mac80211/util.c
index ef239b5c3b17..2d556ea0d777 100644
--- a/net/mac80211/util.c
+++ b/net/mac80211/util.c
@@ -1056,6 +1056,34 @@ ieee80211_parse_extension_element(u32 *crc,
 		*crc = crc32_be(*crc, (void *)elem, elem->datalen + 2);
 }
 
+static void ieee802_11_parse_elems_vendor_qcn(const u8 *pos, u8 elen,
+					      struct ieee802_11_elems *elems)
+{
+	u8 rem_elen;
+
+	if (elen <= 6 || pos[3] != WLAN_OUI_QCN_TYPE_1)
+		return;
+
+	rem_elen = elen - 4;
+	pos += 4;
+
+	while (rem_elen > 2) {
+		switch (pos[0]) {
+		case WLAN_OUI_QCN_ATTR_5GHZ_240MHZ_SUPP:
+			if (rem_elen >= 11) {
+				elems->eht_240mhz_capab = pos + 2;
+				elems->eht_240mhz_len = pos[1];
+			}
+			break;
+		default:
+			break;
+		}
+
+		rem_elen -= (2 + pos[1]);
+		pos += (2 + pos[1]);
+	}
+}
+
 static u32
 _ieee802_11_parse_elems_full(struct ieee80211_elems_parse_params *params,
 			     struct ieee802_11_elems *elems,
@@ -1195,6 +1223,12 @@ _ieee802_11_parse_elems_full(struct ieee80211_elems_parse_params *params,
 						elems->wmm_param_len = elen;
 					}
 				}
+			} else if (elen > 6 && pos[0] == 0x8c && pos[1] == 0xfd &&
+				   pos[2] == 0xf0) { /* WLAN_OUI_QCN */
+				if (calc_crc)
+					crc = crc32_be(crc, pos - 2, elen + 2);
+
+				ieee802_11_parse_elems_vendor_qcn(pos, elen, elems);
 			}
 			break;
 		case WLAN_EID_RSN:
-- 
2.34.1

