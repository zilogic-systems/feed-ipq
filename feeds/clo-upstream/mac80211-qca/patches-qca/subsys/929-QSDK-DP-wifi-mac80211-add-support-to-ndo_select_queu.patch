From ae96f19037b045d0ebf1d57036ae942560f3c087 Mon Sep 17 00:00:00 2001
From: Hari Chandrakanthan <quic_haric@quicinc.com>
Date: Sat, 2 Nov 2024 17:45:32 +0530
Subject: [PATCH] QSDK:DP:wifi:mac80211: add support to ndo_select_queue
 callback

Add support to ndo_select_queue callback.

Ath12k advertises LLTX which avoids netdev queue _xmit_lock
in __dev_queue_xmit(). There is a possibility that
2 cpu cores can access the same netdev queue without _xmit_lock which is incorrect.

Fix this by adding support to ndo_select_queue callback as follows.

When Qisc is enabled, ndo_select_queue callback returns
the cpu core id as queue idx which ensures that there is no contentions for a
netdev queue across cpu cores.

Patch-depdendency: None
Patch-work: None

Signed-off-by: Hari Chandrakanthan <quic_haric@quicinc.com>
---
 net/mac80211/iface.c | 10 ++++++++++
 1 file changed, 10 insertions(+)

diff --git a/net/mac80211/iface.c b/net/mac80211/iface.c
index 7364156..b859526 100644
--- a/net/mac80211/iface.c
+++ b/net/mac80211/iface.c
@@ -960,6 +960,14 @@ static int ieee80211_netdev_setup_tc(struct net_device *dev,
 	return drv_net_setup_tc(local, sdata, dev, type, type_data);
 }
 
+static u16 ieee80211_netdev_select_queue(struct net_device *netdev,
+				  struct sk_buff *skb,
+				  struct net_device *sb_dev)
+{
+	return smp_processor_id();
+}
+
+
 static const struct net_device_ops ieee80211_dataif_ops = {
 	.ndo_open		= ieee80211_open,
 	.ndo_stop		= ieee80211_stop,
@@ -970,6 +978,7 @@ static const struct net_device_ops ieee80211_dataif_ops = {
 	.ndo_get_stats64	= ieee80211_get_stats64,
 	.ndo_setup_tc		= ieee80211_netdev_setup_tc,
 	.ndo_change_mtu		= ieee80211_change_mtu,
+	.ndo_select_queue       = ieee80211_netdev_select_queue,
 };
 
 static u16 ieee80211_monitor_select_queue(struct net_device *dev,
@@ -1021,6 +1030,7 @@ static const struct net_device_ops ieee80211_dataif_8023_ops = {
 	.ndo_get_stats64	= ieee80211_get_stats64,
 	.ndo_setup_tc		= ieee80211_netdev_setup_tc,
 	.ndo_change_mtu		= ieee80211_change_mtu,
+	.ndo_select_queue       = ieee80211_netdev_select_queue,
 };
 
 static bool ieee80211_iftype_supports_hdr_offload(enum nl80211_iftype iftype)
-- 
2.34.1

