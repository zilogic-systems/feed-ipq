From cb116e408e8c712ec5a85778f0f9e0a60ba99e4a Mon Sep 17 00:00:00 2001
From: Arulanbu Balusamy <quic_abalusam@quicinc.com>
Date: Tue, 15 Oct 2024 15:22:53 +0530
Subject: [PATCH] wifi: mac80211: Handle link addresses separately in
 ieee80211_get_station()

Currently, ieee80211_get_station() functions correctly for an MLD
station only when the MLD MAC address is provided. This is because
the MLD station is stored based on its MLD address. However, there
are instances where it is necessary to retrieve the MLD station
information based on the link address. In such cases, this function
would return -ENOENT since it would not find a station entry with
the link address.

To resolve this, we extend ieee80211_get_station() to check for link
addresses within the MLD stations. If a match is found, the function
will return the MLD station information, ensuring proper handling of
both MLD and link addresses.

Patch-dependency: [None]
Patch-work: [None]

Signed-off-by: Santhosh Ramesh <quic_santrame@quicinc.com>
Signed-off-by: Arulanbu Balusamy <quic_abalusam@quicinc.com>
---
 net/mac80211/cfg.c | 8 ++++++++
 1 file changed, 8 insertions(+)

diff --git a/net/mac80211/cfg.c b/net/mac80211/cfg.c
index 29c33e4..2de0295 100644
--- a/net/mac80211/cfg.c
+++ b/net/mac80211/cfg.c
@@ -909,6 +909,7 @@ static int ieee80211_get_station(struct wiphy *wiphy, struct net_device *dev,
 	struct ieee80211_sub_if_data *sdata = IEEE80211_DEV_TO_SUB_IF(dev);
 	struct ieee80211_local *local = sdata->local;
 	struct sta_info *sta;
+	struct link_sta_info *link_sta;
 	int ret = -ENOENT;
 
 	mutex_lock(&local->sta_mtx);
@@ -918,6 +919,13 @@ static int ieee80211_get_station(struct wiphy *wiphy, struct net_device *dev,
 		ret = 0;
 		sta_set_sinfo(sta, sinfo, true);
 	}
+	else {
+		link_sta = link_sta_info_get_bss(sdata, mac);
+		if (link_sta) {
+			ret = 0;
+			sta_set_sinfo(link_sta->sta, sinfo, true);
+		}
+	}
 
 	mutex_unlock(&local->sta_mtx);
 
-- 
2.34.1

