From 0fcd46be35b9534288b342dbffc2d2687149ebf9 Mon Sep 17 00:00:00 2001
From: Karthik T S <quic_kartikts@quicinc.com>
Date: Thu, 14 Sep 2023 12:56:33 +0530
Subject: [PATCH] nat46: fix skb headroom calculation for fragmented pkts

when fragmented packets ipv6 packets are received the skb->data pointer
is not adjusted to point to udp header fix it by considering ipv6 fragment header
while doing skb_pull operation.

Signed-off-by: Karthik T S <quic_kartikts@quicinc.com>
---
 nat46/modules/nat46-core.c | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

diff --git a/nat46/modules/nat46-core.c b/nat46/modules/nat46-core.c
index 3411850..3754bb7 100644
--- a/nat46/modules/nat46-core.c
+++ b/nat46/modules/nat46-core.c
@@ -1981,7 +1981,10 @@ void nat46_ipv6_input(struct sk_buff *old_skb) {
 #endif

   /* modify packet: actual IPv6->IPv4 transformation */
-  skb_pull(old_skb, sizeof(struct iphdr));
+  /* move old_skb->data by 20 bytes(ipv6 header = 40 bytes) for non fragmented pkts
+   * and 28 bytes(ipv6 header = 48 bytes) for fragmented pkts
+   */
+  skb_pull(old_skb, (v6packet_l3size - sizeof(struct iphdr)));
   l3_infrag_payload_len -= tailTruncSize;
   skb_reset_mac_header(old_skb);
   skb_reset_network_header(old_skb);
--
2.17.1

