* Qualcomm Technologies Inc. EIP196 DMA Driver.

The driver is responsible for interacting with EIP196 hardware. It converts
the requests from crypto driver to hardware understandable objects.
Its responsible for handling the interrupts generated by EIP196 hardware.

Required properties:
- compatible = "qcom,eip";
- reg-names = "eip_pbase";
- reg = <0x39800000 0x7ffff>;
- reg_offset = <0x80000>;
- ranges;
- clocks = <&nsscc NSS_CC_EIP_CLK>,
	<&nsscc NSS_CC_NSSNOC_EIP_CLK>;
- clock-names = "eip_clk", "eip_nocclk";
- clock-frequency = /bits/ 64 <300000000 300000000>;
- status = "ok";

- interrupts = <GIC_SPI 107 IRQ_TYPE_LEVEL_HIGH>,
	   <GIC_SPI 108 IRQ_TYPE_LEVEL_HIGH>,
	   <GIC_SPI 109 IRQ_TYPE_LEVEL_HIGH>,
	   <GIC_SPI 110 IRQ_TYPE_LEVEL_HIGH>;

example:
	eip: eip196@39800000 {
		compatible = "qcom,eip";
		reg-names = "eip_pbase";
		reg = <0x39800000 0x7ffff>;
		reg_offset = <0x80000>;
		ranges;
		clocks = <&nsscc NSS_CC_EIP_CLK>,
		       <&nsscc NSS_CC_NSSNOC_EIP_CLK>;
		clock-names = "eip_clk", "eip_nocclk";
		clock-frequency = /bits/ 64 <300000000 300000000>;
		status = "ok";
		interrupts = <GIC_SPI 107 IRQ_TYPE_LEVEL_HIGH>,
			   <GIC_SPI 108 IRQ_TYPE_LEVEL_HIGH>,
			   <GIC_SPI 109 IRQ_TYPE_LEVEL_HIGH>,
			   <GIC_SPI 110 IRQ_TYPE_LEVEL_HIGH>;

		dma0 {
		     tx_cpu = /bits/ 8 <0>;
		     rx_cpu = /bits/ 8 <0>;
		     ring-name = "lookaside";
		     ring-id = /bits/ 8 <0>;
		};

		dma1 {
		     tx_cpu = /bits/ 8 <1>;
		     rx_cpu = /bits/ 8 <1>;
		     ring-name = "lookaside";
		     ring-id = /bits/ 8 <1>;
		};

		dma2 {
		     tx_cpu = /bits/ 8 <2>;
		     rx_cpu = /bits/ 8 <2>;
		     ring-name = "lookaside";
		     ring-id = /bits/ 8 <2>;
		};

		dma3 {
		     tx_cpu = /bits/ 8 <3>;
		     rx_cpu = /bits/ 8 <3>;
		     ring-name = "lookaside";
		     ring-id = /bits/ 8 <3>;
		};
	};
