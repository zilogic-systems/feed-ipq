From f75680b2097bac5363902739428d39fe5279a676 Mon Sep 17 00:00:00 2001
From: Stephen Hemminger <stephen@networkplumber.org>
Date: Thu, 16 Mar 2023 10:04:28 +0530
Subject: [PATCH 008/500] OpenWrt:
 150-bridge_allow_receiption_on_disabled_port.patch

bridge: allow receiption on disabled port

When an ethernet device is enslaved to a bridge, and the bridge STP
detects loss of carrier (or operational state down), then normally
packet receiption is blocked.

This breaks control applications like WPA which maybe expecting to
receive packets to negotiate to bring link up. The bridge needs to
block forwarding packets from these disabled ports, but there is no
hard requirement to not allow local packet delivery.

Signed-off-by: Stephen Hemminger <stephen@networkplumber.org>
Signed-off-by: Felix Fietkau <nbd@nbd.name>

Change-Id: Ic29dc218f01ce71494cc1cd8b6c27befdce57ad6
Signed-off-by: Ram Chandra Jangir <quic_rjangir@quicinc.com>
(cherry picked from commit 115015eff152b2e8aa19b6f37d8c81c5a53199d4)
---
 net/bridge/br_input.c | 14 ++++++++++++++
 1 file changed, 14 insertions(+)

diff --git a/net/bridge/br_input.c b/net/bridge/br_input.c
index c729528b5e85..ac3e6c5af496 100644
--- a/net/bridge/br_input.c
+++ b/net/bridge/br_input.c
@@ -239,6 +239,9 @@ static void __br_handle_local_finish(struct sk_buff *skb)
 /* note: already called with rcu_read_lock */
 static int br_handle_local_finish(struct net *net, struct sock *sk, struct sk_buff *skb)
 {
+	struct net_bridge_port *p = br_port_get_rcu(skb->dev);
+
+	if (p->state != BR_STATE_DISABLED)
 	__br_handle_local_finish(skb);
 
 	/* return 1 to signal the okfn() was called so it's ok to use the skb */
@@ -408,6 +411,17 @@ static rx_handler_result_t br_handle_frame(struct sk_buff **pskb)
 		goto defer_stp_filtering;
 
 	switch (p->state) {
+	case BR_STATE_DISABLED:
+		if (ether_addr_equal(p->br->dev->dev_addr, dest))
+			skb->pkt_type = PACKET_HOST;
+
+		if (NF_HOOK(NFPROTO_BRIDGE, NF_BR_PRE_ROUTING,
+			dev_net(skb->dev), NULL, skb, skb->dev, NULL,
+			br_handle_local_finish) == 1) {
+			return RX_HANDLER_PASS;
+		}
+		break;
+
 	case BR_STATE_FORWARDING:
 	case BR_STATE_LEARNING:
 defer_stp_filtering:
-- 
2.34.1

