From cd8860059823b2c31241c275f904b40b35648a69 Mon Sep 17 00:00:00 2001
From: OpenWrt community <openwrt-devel@lists.openwrt.org>
Date: Thu, 16 Mar 2023 17:38:48 +0530
Subject: [PATCH 067/500] OpenWrt: 683-of_net-add-mac-address-to-of-tree.patch

of/of_net: write back netdev MAC-address to device-tree

The label-mac logic relies on the mac-address property of a netdev
devices of-node. However, the mac address can also be stored as a
different property or read from e.g. an mtd device.

Create this node when reading a mac-address from OF if it does not
already exist and copy the mac-address used for the device to this
property. This way, the MAC address can be accessed using procfs.

Change-Id: I3d4731839ffe2ec83cc7e237ccce29c8f46ce718
Signed-off-by: Ram Chandra Jangir <quic_rjangir@quicinc.com>
(cherry picked from commit 40b96cc9d18f260af9bec2eacd196e0a8b89623b)
---
 net/core/of_net.c | 22 ++++++++++++++++++++++
 1 file changed, 22 insertions(+)

diff --git a/net/core/of_net.c b/net/core/of_net.c
index ee4d597a2158..e40da6030ecf 100644
--- a/net/core/of_net.c
+++ b/net/core/of_net.c
@@ -97,6 +97,27 @@ int of_get_mac_address_nvmem(struct device_node *np, u8 *addr)
 }
 EXPORT_SYMBOL(of_get_mac_address_nvmem);
 
+static int of_add_mac_address(struct device_node *np, u8* addr)
+{
+	struct property *prop;
+
+	prop = kzalloc(sizeof(*prop), GFP_KERNEL);
+	if (!prop)
+		return -ENOMEM;
+
+	prop->name = "mac-address";
+	prop->length = ETH_ALEN;
+	prop->value = kmemdup(addr, ETH_ALEN, GFP_KERNEL);
+	if (!prop->value || of_update_property(np, prop))
+		goto free;
+
+	return 0;
+free:
+	kfree(prop->value);
+	kfree(prop);
+	return -ENOMEM;
+}
+
 /**
  * of_get_mac_address()
  * @np:		Caller's Device Node
@@ -177,6 +198,7 @@ int of_get_mac_address(struct device_node *np, u8 *addr)
 		addr[5] = (mac_val >> 0) & 0xff;
 	}
 
+	of_add_mac_address(np, addr);
 	return ret;
 }
 EXPORT_SYMBOL(of_get_mac_address);
-- 
2.34.1

