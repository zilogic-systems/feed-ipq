From b59f0559df3b2e8c3650197abd1b25a0eb0d00fa Mon Sep 17 00:00:00 2001
From: Felix Fietkau <nbd@nbd.name>
Date: Thu, 16 Mar 2023 20:08:27 +0530
Subject: [PATCH 164/500] OpenWrt: 901-debloat_sock_diag.patch

debloat: add some debloat patches, strip down procfs and make O_DIRECT support optional, saves ~15K after lzma on MIPS

Signed-off-by: Felix Fietkau <nbd@nbd.name>

Change-Id: I6ff2fc96014f59b5561f5e127da56e3279701b60
Signed-off-by: Ram Chandra Jangir <quic_rjangir@quicinc.com>
(cherry picked from commit 8d4e2ba0a6ceec1554911f05e844b6eab0dca26c)
---
 net/Kconfig          |  3 +++
 net/core/Makefile    |  3 ++-
 net/core/sock.c      | 16 ++++++++++++++++
 net/core/sock_diag.c | 18 ------------------
 net/ipv4/Kconfig     |  1 +
 net/netlink/Kconfig  |  1 +
 net/packet/Kconfig   |  1 +
 net/unix/Kconfig     |  1 +
 8 files changed, 25 insertions(+), 19 deletions(-)

diff --git a/net/Kconfig b/net/Kconfig
index 38d70e9091e1..08154651634d 100644
--- a/net/Kconfig
+++ b/net/Kconfig
@@ -129,6 +129,9 @@ source "net/mptcp/Kconfig"
 
 endif # if INET
 
+config SOCK_DIAG
+       bool
+
 config NETWORK_SECMARK
 	bool "Security Marking"
 	help
diff --git a/net/core/Makefile b/net/core/Makefile
index 731db2eaa610..5c9fc1f1262a 100644
--- a/net/core/Makefile
+++ b/net/core/Makefile
@@ -11,12 +11,13 @@ obj-$(CONFIG_SYSCTL) += sysctl_net_core.o
 
 obj-y		     += dev.o dev_addr_lists.o dst.o netevent.o \
 			neighbour.o rtnetlink.o utils.o link_watch.o filter.o \
-			sock_diag.o dev_ioctl.o tso.o sock_reuseport.o \
+			dev_ioctl.o tso.o sock_reuseport.o \
 			fib_notifier.o xdp.o flow_offload.o gro.o \
 			netdev-genl.o netdev-genl-gen.o gso.o
 
 obj-$(CONFIG_NETDEV_ADDR_LIST_TEST) += dev_addr_lists_test.o
 
+obj-$(CONFIG_SOCK_DIAG) += sock_diag.o
 obj-y += net-sysfs.o
 obj-$(CONFIG_PAGE_POOL) += page_pool.o
 obj-$(CONFIG_PROC_FS) += net-procfs.o
diff --git a/net/core/sock.c b/net/core/sock.c
index bfaf47b3f3c7..93c99a60db8c 100644
--- a/net/core/sock.c
+++ b/net/core/sock.c
@@ -114,6 +114,7 @@
 #include <linux/memcontrol.h>
 #include <linux/prefetch.h>
 #include <linux/compat.h>
+#include <linux/cookie.h>
 #include <linux/mroute.h>
 #include <linux/mroute6.h>
 #include <linux/icmpv6.h>
@@ -149,6 +150,7 @@
 
 static DEFINE_MUTEX(proto_list_mutex);
 static LIST_HEAD(proto_list);
+DEFINE_COOKIE(sock_cookie);
 
 static void sock_def_write_space_wfree(struct sock *sk);
 static void sock_def_write_space(struct sock *sk);
@@ -171,6 +173,18 @@ bool sk_ns_capable(const struct sock *sk,
 }
 EXPORT_SYMBOL(sk_ns_capable);
 
+u64 __sock_gen_cookie(struct sock *sk)
+{
+       while (1) {
+               u64 res = atomic64_read(&sk->sk_cookie);
+
+               if (res)
+                       return res;
+               res = gen_cookie_next(&sock_cookie);
+               atomic64_cmpxchg(&sk->sk_cookie, 0, res);
+       }
+}
+
 /**
  * sk_capable - Socket global capability test
  * @sk: Socket to use a capability on or through
@@ -2238,9 +2252,11 @@ static void __sk_free(struct sock *sk)
 	if (likely(sk->sk_net_refcnt))
 		sock_inuse_add(sock_net(sk), -1);
 
+#ifdef CONFIG_SOCK_DIAG
 	if (unlikely(sk->sk_net_refcnt && sock_diag_has_destroy_listeners(sk)))
 		sock_diag_broadcast_destroy(sk);
 	else
+#endif
 		sk_destruct(sk);
 }
 
diff --git a/net/core/sock_diag.c b/net/core/sock_diag.c
index b1e29e18d1d6..becade2fb1ae 100644
--- a/net/core/sock_diag.c
+++ b/net/core/sock_diag.c
@@ -12,7 +12,6 @@
 #include <linux/tcp.h>
 #include <linux/workqueue.h>
 #include <linux/nospec.h>
-#include <linux/cookie.h>
 #include <linux/inet_diag.h>
 #include <linux/sock_diag.h>
 
@@ -21,23 +20,6 @@ static int (*inet_rcv_compat)(struct sk_buff *skb, struct nlmsghdr *nlh);
 static DEFINE_MUTEX(sock_diag_table_mutex);
 static struct workqueue_struct *broadcast_wq;
 
-DEFINE_COOKIE(sock_cookie);
-
-u64 __sock_gen_cookie(struct sock *sk)
-{
-	u64 res = atomic64_read(&sk->sk_cookie);
-
-	if (!res) {
-		u64 new = gen_cookie_next(&sock_cookie);
-
-		atomic64_cmpxchg(&sk->sk_cookie, res, new);
-
-		/* Another thread might have changed sk_cookie before us. */
-		res = atomic64_read(&sk->sk_cookie);
-	}
-	return res;
-}
-
 int sock_diag_check_cookie(struct sock *sk, const __u32 *cookie)
 {
 	u64 res;
diff --git a/net/ipv4/Kconfig b/net/ipv4/Kconfig
index 2dfb12230f08..48830a108257 100644
--- a/net/ipv4/Kconfig
+++ b/net/ipv4/Kconfig
@@ -423,6 +423,7 @@ config INET_TUNNEL
 
 config INET_DIAG
 	tristate "INET: socket monitoring interface"
+	select SOCK_DIAG
 	default y
 	help
 	  Support for INET (TCP, DCCP, etc) socket monitoring interface used by
diff --git a/net/netlink/Kconfig b/net/netlink/Kconfig
index 1039d4f2ce11..ef355897a316 100644
--- a/net/netlink/Kconfig
+++ b/net/netlink/Kconfig
@@ -5,6 +5,7 @@
 
 config NETLINK_DIAG
 	tristate "NETLINK: socket monitoring interface"
+	select SOCK_DIAG
 	default n
 	help
 	  Support for NETLINK socket monitoring interface used by the ss tool.
diff --git a/net/packet/Kconfig b/net/packet/Kconfig
index 2997382d597c..890796137daf 100644
--- a/net/packet/Kconfig
+++ b/net/packet/Kconfig
@@ -19,6 +19,7 @@ config PACKET
 config PACKET_DIAG
 	tristate "Packet: sockets monitoring interface"
 	depends on PACKET
+	select SOCK_DIAG
 	default n
 	help
 	  Support for PF_PACKET sockets monitoring interface used by the ss tool.
diff --git a/net/unix/Kconfig b/net/unix/Kconfig
index 28b232f281ab..b69998c211c8 100644
--- a/net/unix/Kconfig
+++ b/net/unix/Kconfig
@@ -29,6 +29,7 @@ config	AF_UNIX_OOB
 config UNIX_DIAG
 	tristate "UNIX: socket monitoring interface"
 	depends on UNIX
+	select SOCK_DIAG
 	default n
 	help
 	  Support for UNIX socket monitoring interface used by the ss tool.
-- 
2.34.1

