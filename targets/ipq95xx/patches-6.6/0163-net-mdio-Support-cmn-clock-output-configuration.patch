From 83a7912ad4c4edf3890c76cc006ba306f8c6110b Mon Sep 17 00:00:00 2001
From: Luo Jie <quic_luoj@quicinc.com>
Date: Tue, 17 Oct 2023 13:18:15 +0800
Subject: [PATCH 141/500] net: mdio: Support cmn clock output configuration

Change-Id: I0a947198dd1473eb50123a21665b376084f48e92
Signed-off-by: Luo Jie <quic_luoj@quicinc.com>
Signed-off-by: Lei Wei <quic_leiwei@quicinc.com>
---
 drivers/net/mdio/mdio-ipq4019.c | 48 +++++++++++++++++++++++++++++----
 1 file changed, 43 insertions(+), 5 deletions(-)

diff --git a/drivers/net/mdio/mdio-ipq4019.c b/drivers/net/mdio/mdio-ipq4019.c
index d3f896980a17..28848d665a4d 100644
--- a/drivers/net/mdio/mdio-ipq4019.c
+++ b/drivers/net/mdio/mdio-ipq4019.c
@@ -76,6 +76,19 @@
 #define CMN_PLL_REFCLK_EXTERNAL			BIT(9)
 #define CMN_ANA_EN_SW_RSTN			BIT(6)
 
+#define CMN_PLL_REFERENCE_CLOCK			0x784
+#define CMN_PLL_REFCLK_INDEX			GENMASK(3, 0)
+#define CMN_PLL_REFCLK_EXTERNAL			BIT(9)
+
+#define CMN_PLL_POWER_ON_AND_RESET		0x780
+#define CMN_ANA_EN_SW_RSTN			BIT(6)
+
+#define CMN_PLL_OUTPUT_RELATED_1		0x79c
+#define CMN_PLL_CLK25M_EN			BIT(15)
+#define CMN_PLL_CMN_PLL_CLK50M_62P5M_EN		BIT(11)
+#define CMN_PLL_CMN_PLL_CLK50M_62P5M_EN1	BIT(10)
+#define CMN_PLL_CMN_PLL_CLK50M_62P5M_EN2	BIT(14)
+
 #define SWITCH_REG_TYPE_MASK			GENMASK(31, 28)
 #define SWITCH_REG_TYPE_QCA8386			0
 #define SWITCH_REG_TYPE_QCA8337			1
@@ -712,13 +725,14 @@ EXPORT_SYMBOL_GPL(ipq_mii_preinit);
 
 static void ipq_cmn_clk_reset(struct mii_bus *bus)
 {
-	u32 reg_val;
+	u32 reg_val, clk_en;
 	const char *cmn_ref_clk;
+	struct device_node *child;
 	struct ipq4019_mdio_data *priv = bus->priv;
 
 	if (priv && priv->membase[1]) {
 		/* Select reference clock source */
-		reg_val = readl(priv->membase[1] + 4);
+		reg_val = readl(priv->membase[1] + CMN_PLL_REFERENCE_CLOCK);
 		reg_val &= ~(CMN_PLL_REFCLK_EXTERNAL | CMN_PLL_REFCLK_INDEX);
 
 		cmn_ref_clk = of_get_property(bus->parent->of_node, "cmn_ref_clk", NULL);
@@ -745,19 +759,43 @@ static void ipq_cmn_clk_reset(struct mii_bus *bus)
 				reg_val |= FIELD_PREP(CMN_PLL_REFCLK_INDEX, 7);
 		}
 
-		writel(reg_val, priv->membase[1] + 4);
+		writel(reg_val, priv->membase[1] + CMN_PLL_REFERENCE_CLOCK);
 
 		/* Do the cmn clock reset */
-		reg_val = readl(priv->membase[1]);
+		reg_val = readl(priv->membase[1] + CMN_PLL_POWER_ON_AND_RESET);
 		reg_val &= ~CMN_ANA_EN_SW_RSTN;
 		writel(reg_val, priv->membase[1]);
 		msleep(1);
 
 		reg_val |= CMN_ANA_EN_SW_RSTN;
-		writel(reg_val, priv->membase[1]);
+		writel(reg_val, priv->membase[1] + CMN_PLL_POWER_ON_AND_RESET);
 		msleep(1);
 
 		dev_info(bus->parent, "CMN clock reset done\n");
+
+		clk_en = 0;
+		for_each_available_child_of_node(bus->parent->of_node, child) {
+			if (of_find_property(child, "ref_clk_25m", NULL))
+				clk_en |= CMN_PLL_CLK25M_EN;
+			else if (of_find_property(child, "ref_clk_50m", NULL))
+				clk_en |= CMN_PLL_CMN_PLL_CLK50M_62P5M_EN;
+			else if (of_find_property(child, "ref_clk_50m_1", NULL))
+				clk_en |= CMN_PLL_CMN_PLL_CLK50M_62P5M_EN1;
+			else if (of_find_property(child, "ref_clk_50m_2", NULL))
+				clk_en |= CMN_PLL_CMN_PLL_CLK50M_62P5M_EN2;
+		}
+
+		if (clk_en) {
+			reg_val = readl(priv->membase[1] + CMN_PLL_OUTPUT_RELATED_1);
+			reg_val &= ~(CMN_PLL_CLK25M_EN | CMN_PLL_CMN_PLL_CLK50M_62P5M_EN |
+					CMN_PLL_CMN_PLL_CLK50M_62P5M_EN1 |
+					CMN_PLL_CMN_PLL_CLK50M_62P5M_EN2);
+
+			reg_val |= clk_en;
+			writel(reg_val, priv->membase[1] + CMN_PLL_OUTPUT_RELATED_1);
+
+			dev_info(bus->parent, "CMN output clock select %x\n", clk_en);
+		}
 	}
 }
 
-- 
2.34.1

