From 6b9e06c4d45f9bd567df8a7c249274835eb52d12 Mon Sep 17 00:00:00 2001
From: Ram Chandra Jangir <rjangir@codeaurora.org>
Date: Sat, 30 Jul 2016 19:31:53 +0530
Subject: [PATCH 148/500] netfilter: iptable: Fix IPv4 default checks

OpenWRT: 610-netfilter_match_bypass_default_checks.patch
This change fixes up the above patch that had some code get dropped
when FFW linux v4.4.6 to v4.4.14

Change-Id: Ic2172192f23b9ccaa7a9d56139d1f09952636396
Signed-off-by: Ram Chandra Jangir <rjangir@codeaurora.org>
---
 net/ipv4/netfilter/ip_tables.c | 32 +++++++++++++++++++++++++++++---
 1 file changed, 29 insertions(+), 3 deletions(-)

diff --git a/net/ipv4/netfilter/ip_tables.c b/net/ipv4/netfilter/ip_tables.c
index b4732523563e..3eddeab95989 100644
--- a/net/ipv4/netfilter/ip_tables.c
+++ b/net/ipv4/netfilter/ip_tables.c
@@ -523,6 +523,28 @@ static void cleanup_match(struct xt_entry_match *m, struct net *net)
 	module_put(par.match->me);
 }
 
+static int
+check_entry(struct ipt_entry *e)
+{
+	const struct xt_entry_target *t;
+
+	if (!ip_checkentry(&e->ip))
+		return -EINVAL;
+
+	ip_checkdefault(&e->ip);
+
+	if (e->target_offset + sizeof(struct xt_entry_target) >
+		e->next_offset)
+		return -EINVAL;
+
+	t = ipt_get_target_c(e);
+
+	if (e->target_offset + t->u.target_size > e->next_offset)
+		return -EINVAL;
+
+	return 0;
+}
+
 static int
 check_match(struct xt_entry_match *m, struct xt_mtchk_param *par)
 {
@@ -586,7 +608,9 @@ find_check_entry(struct ipt_entry *e, struct net *net, const char *name,
 	struct xt_mtchk_param mtpar;
 	struct xt_entry_match *ematch;
 
-	ip_checkdefault(&e->ip);
+	ret = check_entry(e);
+	if (ret)
+		return ret;
 
 	if (!xt_percpu_counter_alloc(alloc_state, &e->counters))
 		return -ENOMEM;
@@ -1378,8 +1402,10 @@ check_compat_entry_size_and_hooks(struct compat_ipt_entry *e,
 			     sizeof(struct compat_xt_entry_target))
 		return -EINVAL;
 
-	if (!ip_checkentry(&e->ip))
-		return -EINVAL;
+	/* For purposes of check_entry casting the compat entry is fine */
+	ret = check_entry((struct ipt_entry *)e);
+	if (ret)
+		return ret;
 
 	ret = xt_compat_check_entry_offsets(e, e->elems,
 					    e->target_offset, e->next_offset);
-- 
2.34.1

