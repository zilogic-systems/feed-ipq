From 9e0457cba1c3d3ccf31a60ebc3fcde18d546ded2 Mon Sep 17 00:00:00 2001
From: Zhu Ken <guigenz@codeaurora.org>
Date: Tue, 27 Oct 2015 13:40:51 -0700
Subject: [PATCH 220/500] net: bridge: don't loopback multicast when hairpin
 enabled

some virtual service test cases need to enable bridge hairpin.
But hairpin will break the DHCP procedure on lan side as follows :
Because the first DHCP discovery packet is a broadcast packet, so this
packet will be loopbacked to switch port 6 which was connected to bridge
member eth1, this will result in a switch fdb entry whose out port is
switch port 6. Then the DHCP ack packet from our board DHCP server will
be dropped by switch because its destination mac hit above switch fdb.
The out port given by the fdb equals to the income port of DHCP ack
packet, so this packet was dropped by switch.

Here forbade multicast to be loopbacked when hairpin enabled.

resolved some confliction and changed the author to resolve the invalid
email

Change-Id: I4b5b4e71b8034588fc2c32b21a55dfe4cca32987
Signed-off-by: Zhu Ken <guigenz@codeaurora.org>
---
 net/bridge/br_forward.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/net/bridge/br_forward.c b/net/bridge/br_forward.c
index 30a1eda608e2..6fd7652aad87 100644
--- a/net/bridge/br_forward.c
+++ b/net/bridge/br_forward.c
@@ -24,7 +24,8 @@ static inline int should_deliver(const struct net_bridge_port *p,
 	struct net_bridge_vlan_group *vg;
 
 	vg = nbp_vlan_group_rcu(p);
-	return ((p->flags & BR_HAIRPIN_MODE) || skb->dev != p->dev) &&
+	return (((p->flags & BR_HAIRPIN_MODE) && !is_multicast_ether_addr(eth_hdr(skb)->h_dest))
+		|| skb->dev != p->dev) &&
 		(br_mst_is_enabled(p->br) || p->state == BR_STATE_FORWARDING) &&
 		br_allowed_egress(vg, skb) && nbp_switchdev_allowed_egress(p, skb) &&
 		!br_skb_isolated(p, skb);
-- 
2.34.1

