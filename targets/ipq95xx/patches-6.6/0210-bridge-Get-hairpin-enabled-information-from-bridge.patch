From a22553300ace19831f0e7189bc2d43dc4cfd41b5 Mon Sep 17 00:00:00 2001
From: Varsha Mishra <varsham@codeaurora.org>
Date: Thu, 11 Jun 2020 18:45:40 +0530
Subject: [PATCH 224/500] bridge: Get hairpin enabled information from bridge.

Add API to let other modules find out if bridge has
hairpin enabled or not.
Change-Id: I04c76345111bf8297dbe41230e1254df33556d52
Signed-off-by: Varsha Mishra <varsham@codeaurora.org>
---
 include/linux/if_bridge.h |  1 +
 net/bridge/br_if.c        | 11 +++++++++++
 2 files changed, 12 insertions(+)

diff --git a/include/linux/if_bridge.h b/include/linux/if_bridge.h
index 1f11dfe09750..0e03b14fc08c 100644
--- a/include/linux/if_bridge.h
+++ b/include/linux/if_bridge.h
@@ -85,6 +85,7 @@ extern struct net_bridge_fdb_entry *br_fdb_has_entry(struct net_device *dev,
 						     __u16 vid);
 extern void br_fdb_update_register_notify(struct notifier_block *nb);
 extern void br_fdb_update_unregister_notify(struct notifier_block *nb);
+extern bool br_is_hairpin_enabled(struct net_device *dev);
 
 #if IS_ENABLED(CONFIG_BRIDGE) && IS_ENABLED(CONFIG_BRIDGE_IGMP_SNOOPING)
 int br_multicast_list_adjacent(struct net_device *dev,
diff --git a/net/bridge/br_if.c b/net/bridge/br_if.c
index 502b04712e91..f823487225bc 100644
--- a/net/bridge/br_if.c
+++ b/net/bridge/br_if.c
@@ -862,3 +862,14 @@ void br_dev_update_stats(struct net_device *dev,
 	u64_stats_update_end(&stats->syncp);
 }
 EXPORT_SYMBOL_GPL(br_dev_update_stats);
+
+/* API to know if hairpin feature is enabled/disabled on this bridge port */
+bool br_is_hairpin_enabled(struct net_device *dev)
+{
+	struct net_bridge_port *port = br_port_get_check_rcu(dev);
+
+	if (likely(port))
+		return port->flags & BR_HAIRPIN_MODE;
+	return false;
+}
+EXPORT_SYMBOL_GPL(br_is_hairpin_enabled);
-- 
2.34.1

