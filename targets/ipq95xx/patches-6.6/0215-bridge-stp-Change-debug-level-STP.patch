From 46de8b4dc7289c626c6c7414e316850caf53001f Mon Sep 17 00:00:00 2001
From: Tian Yang <tiany@codeaurora.org>
Date: Wed, 3 Feb 2021 13:46:19 -0800
Subject: [PATCH 229/500] bridge: stp: Change debug level STP

Easy to know whether kernel stp or user space stp is running.
Avoiding error message when bridge-stp exists while user space stp is not chosen.

Change-Id: I58ae9bc5e6908d9acfe0686c1da6fe50e1486976
Signed-off-by: Tian Yang <tiany@codeaurora.org>
---
 net/bridge/br_stp_if.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/net/bridge/br_stp_if.c b/net/bridge/br_stp_if.c
index 75204d36d7f9..9abaa1cacdb3 100644
--- a/net/bridge/br_stp_if.c
+++ b/net/bridge/br_stp_if.c
@@ -153,7 +153,7 @@ static void br_stp_start(struct net_bridge *br)
 		err = br_stp_call_user(br, "start");
 
 	if (err && err != -ENOENT)
-		br_err(br, "failed to start userspace STP (%d)\n", err);
+		br_debug(br, "failed to start userspace STP (%d)\n", err);
 
 	spin_lock_bh(&br->lock);
 
@@ -164,10 +164,10 @@ static void br_stp_start(struct net_bridge *br)
 
 	if (!err) {
 		br->stp_enabled = BR_USER_STP;
-		br_debug(br, "userspace STP started\n");
+		br_info(br, "userspace STP started\n");
 	} else {
 		br->stp_enabled = BR_KERNEL_STP;
-		br_debug(br, "using kernel STP\n");
+		br_info(br, "using kernel STP\n");
 
 		/* To start timers on any ports left in blocking */
 		if (br->dev->flags & IFF_UP)
-- 
2.34.1

