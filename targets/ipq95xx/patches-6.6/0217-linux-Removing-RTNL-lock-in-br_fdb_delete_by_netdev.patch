From c15b6c052a1d49b7dd7e217b9826eaa49edd3f54 Mon Sep 17 00:00:00 2001
From: Subhranil Choudhury <subhrani@codeaurora.org>
Date: Mon, 11 May 2020 12:17:03 +0530
Subject: [PATCH 231/500] linux: Removing RTNL lock in br_fdb_delete_by_netdev.

Removing the rtnl lock in br_fdb_delete_by_netdev function.
This function is being called from interrupt context in wifi driver.
And rtnl_lock being a mutex lock, if held from an interrupt context
results in a system crash.

Change-Id: I4c4fb551764d3ba556794810f1274c020d250730
Signed-off-by: Subhranil Choudhury <subhrani@codeaurora.org>
Signed-off-by: Pavithra R <pavir@codeaurora.org>
---
 net/bridge/br_fdb.c | 49 +++++++++++++++++++++++++++++++++++++++++----
 1 file changed, 45 insertions(+), 4 deletions(-)

diff --git a/net/bridge/br_fdb.c b/net/bridge/br_fdb.c
index a2a57c6b71dd..2e31acb6734a 100644
--- a/net/bridge/br_fdb.c
+++ b/net/bridge/br_fdb.c
@@ -1384,14 +1384,55 @@ static int __br_fdb_delete(struct net_bridge *br,
 	return err;
 }
 
+/* This function has to be called only for bridge-port netdevs.*/
+/* For bridge netdev br_fdb_delete has to be called.*/
 int br_fdb_delete_by_netdev(struct net_device *dev,
 			    const unsigned char *addr, u16 vid)
 {
-	int err;
+	int err = 0;
+	struct net_bridge_vlan_group *vg;
+	struct net_bridge_vlan *v;
+	struct net_bridge_port *p = NULL;
+
+	rcu_read_lock();
+	p = br_port_get_check_rcu(dev);
+	if (!p) {
+		rcu_read_unlock();
+		pr_info("bridge: %s not a bridge port\n",
+			dev->name);
+		return -EINVAL;
+	}
+	vg = nbp_vlan_group(p);
 
-	rtnl_lock();
-	err = br_fdb_delete(NULL, NULL, dev, addr, vid);
-	rtnl_unlock();
+	if (vid) {
+		v = br_vlan_find(vg, vid);
+		if (!v) {
+			rcu_read_unlock();
+			pr_info("bridge: with unconfigured vlan %d on %s\n"
+				, vid, dev->name);
+			return -EINVAL;
+		}
+
+		err =  __br_fdb_delete(p->br, p, addr, vid);
+		rcu_read_unlock();
+		return err;
+	}
+	err = __br_fdb_delete(p->br, p, addr, 0);
+
+	if (!vg || !vg->num_vlans) {
+		rcu_read_unlock();
+		return err;
+	}
+
+	/* We have vlans configured on this port and user didn't
+	 * specify a VLAN. So, delete entry for every vlan on this port.
+	 */
+	list_for_each_entry(v, &vg->vlan_list, vlist) {
+		if (!br_vlan_should_use(v))
+			continue;
+		err &= __br_fdb_delete(p->br, p, addr, v->vid);
+	}
+	rcu_read_unlock();
 
 	return err;
 }
-- 
2.34.1

