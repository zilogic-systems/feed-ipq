From 0de1d7d7cd0a03fffa60fa84b05fa2dd9b1caec9 Mon Sep 17 00:00:00 2001
From: Shwetha G K <quic_kshwetha@quicinc.com>
Date: Tue, 19 Dec 2023 14:02:40 +0530
Subject: [PATCH 237/500] cfg80211: Add MLO specific attributes

Add mld address, mld iface name in vif_params.
Add corressponding NL attributes

Change-Id: Ib8b3e4f3e2bb655c7e9555ace33b856bbde6faba
Signed-off-by: Shwetha G K <quic_kshwetha@quicinc.com>
---
 include/net/cfg80211.h       |  4 ++++
 include/uapi/linux/nl80211.h |  3 +++
 net/wireless/nl80211.c       | 20 ++++++++++++++++++++
 3 files changed, 27 insertions(+)

diff --git a/include/net/cfg80211.h b/include/net/cfg80211.h
index 6d1566f27d04..17d3f37b60da 100644
--- a/include/net/cfg80211.h
+++ b/include/net/cfg80211.h
@@ -702,6 +702,8 @@ static inline void wiphy_read_of_freq_limits(struct wiphy *wiphy)
  * @vht_mumimo_follow_addr: MU-MIMO follow address, used for monitoring
  *	MU-MIMO packets going to the specified station; %NULL if not changed
  * @radio_iface: Radio iface name
+ * @mld_macaddr: MLO address to use for this virtual interface.
+ * @mld_iface_name: MLO interface name to use for this virtual interface.
  */
 struct vif_params {
 	u32 flags;
@@ -710,6 +712,8 @@ struct vif_params {
 	const u8 *vht_mumimo_groups;
 	const u8 *vht_mumimo_follow_addr;
 	char *radio_iface;
+	u8 mld_macaddr[ETH_ALEN];
+	char *mld_iface_name;
 };
 
 /**
diff --git a/include/uapi/linux/nl80211.h b/include/uapi/linux/nl80211.h
index 8bb17da219e6..450bbf73d4b8 100644
--- a/include/uapi/linux/nl80211.h
+++ b/include/uapi/linux/nl80211.h
@@ -2817,6 +2817,8 @@ enum nl80211_commands {
  *
  * @NL80211_ATTR_RADIO_IFACE: radio interface name of vif
  *
+ * @NL80211_ATTR_MLD_IFACE_NAME: mld interface name
+ *
  * @NUM_NL80211_ATTR: total number of nl80211_attrs available
  * @NL80211_ATTR_MAX: highest attribute number currently defined
  * @__NL80211_ATTR_AFTER_LAST: internal use
@@ -3356,6 +3358,7 @@ enum nl80211_attrs {
 	NL80211_ATTR_MLO_LINK_DISABLED,
 
 	NL80211_ATTR_RADIO_IFACE = 350,
+	NL80211_ATTR_MLD_IFACE_NAME = 351,
 
 	/* add attributes here, update the policy in nl80211.c */
 
diff --git a/net/wireless/nl80211.c b/net/wireless/nl80211.c
index eeb82a3edb45..7705ada11664 100644
--- a/net/wireless/nl80211.c
+++ b/net/wireless/nl80211.c
@@ -819,6 +819,7 @@ static const struct nla_policy nl80211_policy[NUM_NL80211_ATTR] = {
 	[NL80211_ATTR_EMA_RNR_ELEMS] = { .type = NLA_NESTED },
 	[NL80211_ATTR_MLO_LINK_DISABLED] = { .type = NLA_FLAG },
 	[NL80211_ATTR_RADIO_IFACE] = { .type = NLA_BINARY, .len = IFNAMSIZ-1 },
+	[NL80211_ATTR_MLD_IFACE_NAME] = { .type = NLA_BINARY, .len = IFNAMSIZ-1 },
 };
 
 /* policy for the key attributes */
@@ -4285,6 +4286,25 @@ static int _nl80211_new_interface(struct sk_buff *skb, struct genl_info *info)
 				nla_data(info->attrs[NL80211_ATTR_RADIO_IFACE]);
 	}
 
+	if (info->attrs[NL80211_ATTR_MLD_ADDR]) {
+		if (rdev->wiphy.flags & WIPHY_FLAG_SUPPORTS_MLO) {
+			nla_memcpy(params.mld_macaddr,
+				   info->attrs[NL80211_ATTR_MLD_ADDR],
+				   ETH_ALEN);
+			if (!is_valid_ether_addr(params.mld_macaddr))
+				return -EADDRNOTAVAIL;
+		} else
+			return -ENOTSUPP;
+	}
+
+	if (info->attrs[NL80211_ATTR_MLD_IFACE_NAME]) {
+		if (rdev->wiphy.flags & WIPHY_FLAG_SUPPORTS_MLO)
+			params.mld_iface_name =
+				nla_data(info->attrs[NL80211_ATTR_MLD_IFACE_NAME]);
+		else
+			return -ENOTSUPP;
+	}
+
 	msg = nlmsg_new(NLMSG_DEFAULT_SIZE, GFP_KERNEL);
 	if (!msg)
 		return -ENOMEM;
-- 
2.34.1

