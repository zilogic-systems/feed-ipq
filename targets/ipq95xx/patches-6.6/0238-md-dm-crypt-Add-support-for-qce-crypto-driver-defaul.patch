From 50e53cad969b77fd5ce1c00178b193d55c25d7c5 Mon Sep 17 00:00:00 2001
From: Poovendhan Selvaraj <quic_poovendh@quicinc.com>
Date: Thu, 15 Jun 2023 15:47:59 +0530
Subject: [PATCH 272/500] md: dm-crypt: Add support for qce crypto driver
 default

This change will add support for qce (Qualcomm Crypto Engine) as
default driver for specific crypto operation via dm-crypt target
driver.
This change will not impact the normal flow of dm-crypt driver.
This change enable default registration with crypto framework based on
driver name. i.e the qce driver.
For all different cipher like "cbc(aes)" , "ecb(aes)" , "ctr(aes)" and
"xts(aes)", the crypto registration will be done based on corresponding
driver name. i.e "cbc-aes-qce","ecb-aes-qce","ctr-aes-qce","xts-aes-qce".
In-order to create the virtual device , one specific string is added i.e
"qce" to existing command line parameter.
e.g
Original :
	"dmsetup create test-crypt --table '0 18432 crypt
	aes-cbc-essiv:sha256 a7f67ad520bd83b9725df6ebd76c3eee 0
	/dev/mtdblock22 0'"
Changed:
	"dmetup create test-crypt --table '0 18432 crypt aes-cbc-qce-essiv:sha256
	a7f67ad520bd83b9725df6ebd76c3eee 0 /dev/mtdblock22 0'"

Signed-off-by: Md Sadre Alam <mdalam@codeaurora.org>
(cherry picked from commit 436dbf0c5efa81edd1eaa5140ee0da7875374edc
Signed-off-by: Poovendhan Selvaraj <quic_poovendh@quicinc.com>

Change-Id: I7c9472ab587c47099c87e528db83292c5861983d
---
 drivers/md/dm-crypt.c | 15 ++++++++++++---
 1 file changed, 12 insertions(+), 3 deletions(-)

diff --git a/drivers/md/dm-crypt.c b/drivers/md/dm-crypt.c
index 13ca464d28bf..ffc2eb27c2ef 100644
--- a/drivers/md/dm-crypt.c
+++ b/drivers/md/dm-crypt.c
@@ -2965,7 +2965,7 @@ static int crypt_ctr_cipher_old(struct dm_target *ti, char *cipher_in, char *key
 				char **ivmode, char **ivopts)
 {
 	struct crypt_config *cc = ti->private;
-	char *tmp, *cipher, *chainmode, *keycount;
+	char *tmp, *cipher, *chainmode, *keycount, *qcengine;
 	char *cipher_api = NULL;
 	int ret = -EINVAL;
 	char dummy;
@@ -2993,6 +2993,11 @@ static int crypt_ctr_cipher_old(struct dm_target *ti, char *cipher_in, char *key
 	cc->key_parts = cc->tfms_count;
 
 	chainmode = strsep(&tmp, "-");
+	if (strnstr(tmp, "qce", sizeof("qce")))
+		qcengine = strsep(&tmp, "-");
+	else
+		qcengine = NULL;
+
 	*ivmode = strsep(&tmp, ":");
 	*ivopts = tmp;
 
@@ -3026,8 +3031,12 @@ static int crypt_ctr_cipher_old(struct dm_target *ti, char *cipher_in, char *key
 		ret = snprintf(cipher_api, CRYPTO_MAX_ALG_NAME,
 			       "essiv(%s(%s),%s)", chainmode, cipher, *ivopts);
 	} else {
-		ret = snprintf(cipher_api, CRYPTO_MAX_ALG_NAME,
-			       "%s(%s)", chainmode, cipher);
+		if (qcengine)
+			ret = snprintf(cipher_api, CRYPTO_MAX_ALG_NAME,
+					"%s-%s-%s", chainmode, cipher, qcengine);
+		else
+			ret = snprintf(cipher_api, CRYPTO_MAX_ALG_NAME,
+				       "%s(%s)", chainmode, cipher);
 	}
 	if (ret < 0 || ret >= CRYPTO_MAX_ALG_NAME) {
 		kfree(cipher_api);
-- 
2.34.1

