From ef774e43b61eac89ef8d494b73913108fdcbd445 Mon Sep 17 00:00:00 2001
From: Sridharan S N <quic_sridsn@quicinc.com>
Date: Thu, 11 May 2023 14:16:09 +0530
Subject: [PATCH 273/500] crypto: testmgr: Disable uneven data len AES CTR
 tests

This patch disables the uneven data len testcases by default
in ipq platforms.

Change-Id: Ib8bc9c4b3d42380dad34ef2966b32d63290f5a35
Signed-off-by: Sridharan S N <quic_sridsn@quicinc.com>
---
 crypto/Kconfig   | 14 ++++++++++++++
 crypto/testmgr.h | 13 +++++++++++--
 2 files changed, 25 insertions(+), 2 deletions(-)

diff --git a/crypto/Kconfig b/crypto/Kconfig
index 6433d521b57e..208819eca454 100644
--- a/crypto/Kconfig
+++ b/crypto/Kconfig
@@ -234,6 +234,20 @@ config CRYPTO_TEST
 	help
 	  Quick & dirty crypto test module.
 
+config CRYPTO_NO_AES_CTR_UNEVEN_DATA_LEN_SUPPORT
+	bool "Disable support for uneven data length test cases"
+	default y
+	depends on CRYPTO_TEST
+	help
+	  Disable support for uneven data length cases
+
+config CRYPTO_NO_AES_XTS_ZERO_KEY_SUPPORT
+	bool "Disable support for zero key test cases"
+	default y
+	depends on CRYPTO_TEST
+	help
+	  Disable support for zero key test cases
+
 config CRYPTO_SIMD
 	tristate
 	select CRYPTO_CRYPTD
diff --git a/crypto/testmgr.h b/crypto/testmgr.h
index 5ca7a412508f..283a706aa14b 100644
--- a/crypto/testmgr.h
+++ b/crypto/testmgr.h
@@ -19122,6 +19122,10 @@ static const struct cipher_testvec aes_lrw_tv_template[] = {
 
 static const struct cipher_testvec aes_xts_tv_template[] = {
 	/* http://grouper.ieee.org/groups/1619/email/pdf00086.pdf */
+#ifndef CONFIG_CRYPTO_NO_AES_XTS_ZERO_KEY_SUPPORT
+	/*
+	 * zero-key for AES XTS is not supported in ipq6018 and ipq9574
+	 */
 	{ /* XTS-AES 1 */
 		.key    = "\x00\x00\x00\x00\x00\x00\x00\x00"
 			  "\x00\x00\x00\x00\x00\x00\x00\x00"
@@ -19140,7 +19144,9 @@ static const struct cipher_testvec aes_xts_tv_template[] = {
 			  "\xcd\x43\xd2\xf5\x95\x98\xed\x85"
 			  "\x8c\x02\xc2\x65\x2f\xbf\x92\x2e",
 		.len	= 32,
-	}, { /* XTS-AES 2 */
+	},
+#endif
+	{ /* XTS-AES 2 */
 		.key    = "\x11\x11\x11\x11\x11\x11\x11\x11"
 			  "\x11\x11\x11\x11\x11\x11\x11\x11"
 			  "\x22\x22\x22\x22\x22\x22\x22\x22"
@@ -19669,7 +19675,9 @@ static const struct cipher_testvec aes_ctr_tv_template[] = {
 			  "\xFA\x3A\x05\x4C\xFA\xD1\xFF\xFE"
 			  "\xF1\x4C\xE5\xB2\x91\x64\x0C\x51",
 		.len	= 496,
-	}, { /* Generated with Crypto++ */
+	},
+#ifndef CONFIG_CRYPTO_NO_AES_CTR_UNEVEN_DATA_LEN_SUPPORT
+	{ /* Generated with Crypto++ */
 		.key	= "\xC9\x83\xA6\xC9\xEC\x0F\x32\x55"
 			  "\x0F\x32\x55\x78\x9B\xBE\x78\x9B"
 			  "\xBE\xE1\x04\x27\xE1\x04\x27\x4A"
@@ -19807,6 +19815,7 @@ static const struct cipher_testvec aes_ctr_tv_template[] = {
 			  "\xFB\xF2\x3F",
 		.len	= 499,
 	},
+#endif
 };
 
 static const struct cipher_testvec aes_ctr_rfc3686_tv_template[] = {
-- 
2.34.1

