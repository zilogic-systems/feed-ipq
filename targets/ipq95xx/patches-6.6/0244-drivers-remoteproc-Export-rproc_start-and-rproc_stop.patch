From d23a504c7489460070d98eea5c3db19159fb83a9 Mon Sep 17 00:00:00 2001
From: Sridharan S N <quic_sridsn@quicinc.com>
Date: Wed, 29 Nov 2023 16:47:15 +0530
Subject: [PATCH 292/500] drivers: remoteproc: Export rproc_start and
 rproc_stop

rproc_start and rproc_stop APIs are used by q6v5_mpd driver
and by external client drivers (if required) to handle
recovery for multi-pd targets.

Change-Id: I1fe73a5e5606d875853ae86e21ecb051255c3527
Signed-off-by: Sridharan S N <quic_sridsn@quicinc.com>
---
 drivers/remoteproc/remoteproc_core.c | 6 ++++--
 include/linux/remoteproc.h           | 2 ++
 2 files changed, 6 insertions(+), 2 deletions(-)

diff --git a/drivers/remoteproc/remoteproc_core.c b/drivers/remoteproc/remoteproc_core.c
index 695cce218e8c..4d5dd98976ae 100644
--- a/drivers/remoteproc/remoteproc_core.c
+++ b/drivers/remoteproc/remoteproc_core.c
@@ -1263,7 +1263,7 @@ void rproc_resource_cleanup(struct rproc *rproc)
 }
 EXPORT_SYMBOL(rproc_resource_cleanup);
 
-static int rproc_start(struct rproc *rproc, const struct firmware *fw)
+int rproc_start(struct rproc *rproc, const struct firmware *fw)
 {
 	struct resource_table *loaded_table;
 	struct device *dev = &rproc->dev;
@@ -1327,6 +1327,7 @@ static int rproc_start(struct rproc *rproc, const struct firmware *fw)
 
 	return ret;
 }
+EXPORT_SYMBOL(rproc_start);
 
 static int __rproc_attach(struct rproc *rproc)
 {
@@ -1703,7 +1704,7 @@ static int rproc_trigger_auto_boot(struct rproc *rproc)
 	return ret;
 }
 
-static int rproc_stop(struct rproc *rproc, bool crashed)
+int rproc_stop(struct rproc *rproc, bool crashed)
 {
 	struct device *dev = &rproc->dev;
 	int ret;
@@ -1738,6 +1739,7 @@ static int rproc_stop(struct rproc *rproc, bool crashed)
 
 	return 0;
 }
+EXPORT_SYMBOL(rproc_stop);
 
 /*
  * __rproc_detach(): Does the opposite of __rproc_attach()
diff --git a/include/linux/remoteproc.h b/include/linux/remoteproc.h
index b4795698d8c2..a8e71aaaee30 100644
--- a/include/linux/remoteproc.h
+++ b/include/linux/remoteproc.h
@@ -709,4 +709,6 @@ void rproc_add_subdev(struct rproc *rproc, struct rproc_subdev *subdev);
 
 void rproc_remove_subdev(struct rproc *rproc, struct rproc_subdev *subdev);
 
+int rproc_start(struct rproc *rproc, const struct firmware *fw);
+int rproc_stop(struct rproc *rproc, bool crashed);
 #endif /* REMOTEPROC_H */
-- 
2.34.1

