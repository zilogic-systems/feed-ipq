From d86420da07252b553c1e37a78c7f4bf54c5f9981 Mon Sep 17 00:00:00 2001
From: Omeshwari Wazekar <quic_owazekar@quicinc.com>
Date: Mon, 16 Oct 2023 12:29:32 +0530
Subject: [PATCH 331/500] firmware: qcom_scm: add scm call to read list blowing
 fuses from QFPROM registers

Change-Id: I6e6c35679d25b6f981c8f8091fae6a4619e9f45a
Signed-off-by: Omeshwari Wazekar <quic_owazekar@quicinc.com>
---
 drivers/firmware/qcom_scm.c            | 43 ++++++++++++++++++++++++++
 include/linux/firmware/qcom/qcom_scm.h |  9 ++++++
 2 files changed, 52 insertions(+)

diff --git a/drivers/firmware/qcom_scm.c b/drivers/firmware/qcom_scm.c
index 29d2ba32b63b..e5e5e8ebac11 100644
--- a/drivers/firmware/qcom_scm.c
+++ b/drivers/firmware/qcom_scm.c
@@ -1962,6 +1962,49 @@ int qcom_fuseipq_scm_call(u32 svc_id, u32 cmd_id,void *cmd_buf, size_t size)
 }
 EXPORT_SYMBOL_GPL(qcom_fuseipq_scm_call);
 
+/**
+ * qcom_scm_get_ipq5332_fuse_list() - Get OEM Fuse parameter from TME-L
+ *
+ * @fuse: QFPROM CORR addresses
+ * @size: size of fuse structure
+ *
+ * This function can be used to get the OEM Fuse parameters from TME-L.
+ */
+int qcom_scm_get_ipq5332_fuse_list(struct fuse_payload *fuse, size_t size)
+{
+	int ret;
+	dma_addr_t dma_fuse;
+	struct qcom_scm_res res;
+	struct qcom_scm_desc desc = {
+		.svc = QCOM_SCM_SVC_FUSE,
+		.cmd = QCOM_SCM_OWM_FUSE_CMD_ID,
+		.arginfo = QCOM_SCM_ARGS(2, QCOM_SCM_RW, QCOM_SCM_VAL),
+		.owner = ARM_SMCCC_OWNER_SIP,
+	};
+
+	dma_fuse  = dma_map_single(__scm->dev, fuse, size, DMA_FROM_DEVICE);
+	ret = dma_mapping_error(__scm->dev, dma_fuse);
+	if (ret != 0) {
+		pr_err("%s: DMA Mapping Error : %d\n", __func__, ret);
+		return -EINVAL;
+	}
+	desc.args[0] = dma_fuse;
+	desc.args[1] = size;
+
+	ret = qcom_scm_call(__scm->dev, &desc, &res);
+
+	if(res.result[0] != 0) {
+		pr_err("%s : Response error code is : %#x\n", __func__,
+				(unsigned int)res.result[0]);
+	}
+
+	dma_unmap_single(__scm->dev, dma_fuse, size, DMA_FROM_DEVICE);
+
+	return ret ? : res.result[0];
+
+}
+EXPORT_SYMBOL_GPL(qcom_scm_get_ipq5332_fuse_list);
+
 /**
  * qcom_scm_sec_auth_available() - Checks if SEC_AUTH is supported.
  *
diff --git a/include/linux/firmware/qcom/qcom_scm.h b/include/linux/firmware/qcom/qcom_scm.h
index d57c216a0dea..dc9024d06f9f 100644
--- a/include/linux/firmware/qcom/qcom_scm.h
+++ b/include/linux/firmware/qcom/qcom_scm.h
@@ -22,6 +22,13 @@
 #define QTI_TZ_LOG_NO_UPDATE		-6
 #define QTI_SCM_SVC_FUSE		0x8
 
+#define MAX_FUSE_ADDR_SIZE		0x8
+struct fuse_payload {
+	uint32_t fuse_addr;
+	uint32_t lsb_val;
+	uint32_t msb_val;
+};
+
 enum qseecom_qceos_cmd_id {
 	QSEOS_APP_START_COMMAND = 0x01,
 	QSEOS_APP_SHUTDOWN_COMMAND,
@@ -165,6 +172,7 @@ enum qcom_scm_ice_cipher {
 #define QCOM_SCM_PERM_RW (QCOM_SCM_PERM_READ | QCOM_SCM_PERM_WRITE)
 #define QCOM_SCM_PERM_RWX (QCOM_SCM_PERM_RW | QCOM_SCM_PERM_EXEC)
 
+#define QCOM_SCM_OWM_FUSE_CMD_ID   0x22
 #define FUSEPROV_SUCCESS           0x0
 #define QCOM_SCM_SVC_FUSE          0x8
 #define FUSEPROV_INVALID_HASH      0x9
@@ -280,6 +288,7 @@ extern int qti_qfprom_show_authenticate(void);
 extern int qti_scm_get_smmustate(void);
 
 extern bool qcom_scm_sec_auth_available(unsigned int scm_cmd_id);
+extern int qcom_scm_get_ipq5332_fuse_list(struct fuse_payload *fuse, size_t size);
 extern int qcom_sec_upgrade_auth(unsigned int scm_cmd_id,
 				 unsigned int sw_type, unsigned int img_size,
 				 unsigned int load_addr);
-- 
2.34.1

