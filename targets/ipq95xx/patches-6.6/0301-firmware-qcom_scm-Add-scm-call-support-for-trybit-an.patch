From 1c500a8fb56c5c259a465635eb8b6b87caa065d2 Mon Sep 17 00:00:00 2001
From: Sridharan S N <quic_sridsn@quicinc.com>
Date: Tue, 5 Dec 2023 23:38:29 +0530
Subject: [PATCH 347/500] firmware: qcom_scm : Add scm call support for trybit
 and read dload register

Change-Id: Id4e2cc61105e00559443d199a7a63efeccc2b040
Signed-off-by: Sridharan S N <quic_sridsn@quicinc.com>
---
 drivers/firmware/qcom_scm.c            | 36 ++++++++++++++++++++++++++
 include/linux/firmware/qcom/qcom_scm.h |  3 +++
 2 files changed, 39 insertions(+)

diff --git a/drivers/firmware/qcom_scm.c b/drivers/firmware/qcom_scm.c
index 492a8367ae7d..352c5b66919c 100644
--- a/drivers/firmware/qcom_scm.c
+++ b/drivers/firmware/qcom_scm.c
@@ -1688,6 +1688,42 @@ int __qti_seccrypt_clearkey(struct device *dev)
 	return ret ? : res.result[0];
 }
 
+int qcom_scm_enable_try_mode(void)
+{
+	int ret;
+	u32 val;
+	struct qcom_scm_res res;
+	struct qcom_scm_desc desc = {0};
+
+	val = qcom_read_dload_reg();
+	desc.svc = QCOM_SCM_SVC_IO;
+	desc.cmd = QCOM_SCM_IO_WRITE;
+	desc.arginfo = QCOM_SCM_ARGS(2, QCOM_SCM_VAL, QCOM_SCM_VAL);
+	desc.args[0] = __scm->dload_mode_addr;
+	desc.args[1] = val | QTI_TRYBIT;
+	desc.owner = ARM_SMCCC_OWNER_SIP;
+
+	ret = qcom_scm_call(__scm->dev, &desc, &res);
+
+	return ret ? : res.result[0];
+}
+EXPORT_SYMBOL_GPL(qcom_scm_enable_try_mode);
+
+int qcom_read_dload_reg(void)
+{
+	int ret;
+	u32 dload_addr_val;
+
+	ret = qcom_scm_io_readl(__scm->dload_mode_addr, &dload_addr_val);
+	if (ret) {
+		dev_err(__scm->dev,
+			"failed to read dload mode address value: %d\n", ret);
+		return -EINVAL;
+	}
+	return dload_addr_val;
+}
+EXPORT_SYMBOL_GPL(qcom_read_dload_reg);
+
 /**
  * qcom_scm_is_available() - Checks if SCM is available
  */
diff --git a/include/linux/firmware/qcom/qcom_scm.h b/include/linux/firmware/qcom/qcom_scm.h
index 32fc50ee6a30..99355b8ea760 100644
--- a/include/linux/firmware/qcom/qcom_scm.h
+++ b/include/linux/firmware/qcom/qcom_scm.h
@@ -21,6 +21,7 @@
 #define QTI_TZ_QSEE_LOG_ENCR_ID		0x1
 #define QTI_TZ_LOG_NO_UPDATE		-6
 #define QTI_SCM_SVC_FUSE		0x8
+#define QTI_TRYBIT			BIT(12)
 
 #define QCOM_BREAK_Q6			0x1
 
@@ -298,6 +299,8 @@ extern int qcom_sec_upgrade_auth(unsigned int scm_cmd_id,
 extern int qcom_sec_upgrade_auth_meta_data(unsigned int scm_cmd_id,unsigned int sw_type,
 					   unsigned int img_size,unsigned int load_addr,
 					   void* hash_addr,unsigned int hash_size);
+extern int qcom_scm_enable_try_mode(void);
+extern int qcom_read_dload_reg(void);
 extern int qti_scm_qseecom_remove_xpu(void);
 extern int qti_scm_qseecom_notify(struct qsee_notify_app *req,
 				  size_t req_size,
-- 
2.34.1

