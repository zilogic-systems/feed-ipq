From 5fcf20d94d49ec2b8a0fae1b2119e3fae91c4fdc Mon Sep 17 00:00:00 2001
From: Ratheesh Kannoth <quic_rkannoth@quicinc.com>
Date: Fri, 17 Dec 2021 19:17:58 +0530
Subject: [PATCH 356/500] net: Move skb_vlan_untag(skb) after sfe hook

Change-Id: I5a019761f363dd81bf5e52eea606b9076f22e6af
Signed-off-by: Ratheesh Kannoth <quic_rkannoth@quicinc.com>
---
 net/core/dev.c | 18 ++++++------------
 1 file changed, 6 insertions(+), 12 deletions(-)

diff --git a/net/core/dev.c b/net/core/dev.c
index 99de6380c618..5817af106b75 100644
--- a/net/core/dev.c
+++ b/net/core/dev.c
@@ -532,7 +532,6 @@ static inline void netdev_set_addr_lockdep_class(struct net_device *dev)
  *
  *******************************************************************************/
 
-
 /*
  *	Add a protocol ID to the list. Now that the input handler is
  *	smarter we can dispense with all the messy stuff that used to be
@@ -634,7 +633,6 @@ void dev_remove_pack(struct packet_type *pt)
 }
 EXPORT_SYMBOL(dev_remove_pack);
 
-
 /*******************************************************************************
  *
  *			    Device Interface Subroutines
@@ -1612,7 +1610,6 @@ void dev_close(struct net_device *dev)
 }
 EXPORT_SYMBOL(dev_close);
 
-
 /**
  *	dev_disable_lro - disable Large Receive Offload on a device
  *	@dev: device
@@ -3201,7 +3198,6 @@ void dev_kfree_skb_any_reason(struct sk_buff *skb, enum skb_drop_reason reason)
 }
 EXPORT_SYMBOL(dev_kfree_skb_any_reason);
 
-
 /**
  * netif_device_detach - mark device as removed
  * @dev: network device
@@ -5547,12 +5543,6 @@ static int __netif_receive_skb_core(struct sk_buff **pskb, bool pfmemalloc,
 		}
 	}
 
-	if (eth_type_vlan(skb->protocol)) {
-		skb = skb_vlan_untag(skb);
-		if (unlikely(!skb))
-			goto out;
-	}
-
 	if (likely(!fast_tc_filter)) {
 		fast_recv = rcu_dereference(athrs_fast_nat_recv);
 		if (fast_recv) {
@@ -5563,6 +5553,12 @@ static int __netif_receive_skb_core(struct sk_buff **pskb, bool pfmemalloc,
 		}
 	}
 
+	if (eth_type_vlan(skb->protocol)) {
+		skb = skb_vlan_untag(skb);
+		if (unlikely(!skb))
+			goto out;
+	}
+
 	if (skb_skip_tc_classify(skb))
 		goto skip_classify;
 
@@ -8605,7 +8601,6 @@ void *netdev_lower_dev_get_private(struct net_device *dev,
 }
 EXPORT_SYMBOL(netdev_lower_dev_get_private);
 
-
 /**
  * netdev_lower_state_changed - Dispatch event about lower device state change
  * @lower_dev: device
@@ -10519,7 +10514,6 @@ int init_dummy_netdev(struct net_device *dev)
 }
 EXPORT_SYMBOL_GPL(init_dummy_netdev);
 
-
 /**
  *	register_netdev	- register a network device
  *	@dev: device to register
-- 
2.34.1

