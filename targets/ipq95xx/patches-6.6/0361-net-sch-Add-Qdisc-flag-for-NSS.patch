From b70b0f29e7bb585d8290d46e0a583517b3d3865a Mon Sep 17 00:00:00 2001
From: Suruchi Agarwal <suruchia@codeaurora.org>
Date: Fri, 12 Apr 2019 15:08:18 +0530
Subject: [PATCH 373/500] net sch: Add Qdisc flag for NSS.
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

There is no check in nss qdisc clients to ensure if qdisc is allocated
by nss or not. It simply type cast the private structure of qdisc to nss
qdisc. If the private area of a non-nss qdisc is accessed and there is a
size mismatch, then it can cause out of boundary memory access. This is
what happens at boot time since by default qdisc is configured as
“noqueue” whose private size is 0. So there is a need to add flag in
qdisc structure to check the type of qdisc without accessing it's private
area.

Change-Id: I421b78b2868dd58689f5ea4c6523528ac2335763
Signed-off-by: Suruchi Agarwal <suruchia@codeaurora.org>
Signed-off-by: Tushar Ganatra <quic_tganatra@quicinc.com>
---
 include/net/sch_generic.h | 1 +
 1 file changed, 1 insertion(+)

diff --git a/include/net/sch_generic.h b/include/net/sch_generic.h
index f232512505f8..998f7e931b5a 100644
--- a/include/net/sch_generic.h
+++ b/include/net/sch_generic.h
@@ -94,6 +94,7 @@ struct Qdisc {
 #define TCQ_F_INVISIBLE		0x80 /* invisible by default in dump */
 #define TCQ_F_NOLOCK		0x100 /* qdisc does not require locking */
 #define TCQ_F_OFFLOADED		0x200 /* qdisc is offloaded to HW */
+#define TCQ_F_NSS		0x1000 /* NSS qdisc flag. */
 	u32			limit;
 	const struct Qdisc_ops	*ops;
 	struct qdisc_size_table	__rcu *stab;
-- 
2.34.1

