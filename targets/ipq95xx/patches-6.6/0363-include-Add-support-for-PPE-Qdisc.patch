From 212d398d0beff4677aa3263a6a071e6364077974 Mon Sep 17 00:00:00 2001
From: Amruth S <quic_amrus@quicinc.com>
Date: Thu, 29 Sep 2022 09:07:46 -0700
Subject: [PATCH 374/500] include: Add support for PPE Qdisc.

Change-Id: I8e7f07962be26a7562a944f71ee327f377a85635
Signed-off-by: Amruth S <quic_amrus@quicinc.com>
Signed-off-by: Tushar Ganatra <quic_tganatra@quicinc.com>
---
 include/uapi/linux/pkt_sched.h | 134 +++++++++++++++++++++++++++++++++
 1 file changed, 134 insertions(+)

diff --git a/include/uapi/linux/pkt_sched.h b/include/uapi/linux/pkt_sched.h
index 3f85ae578056..6cfae591030e 100644
--- a/include/uapi/linux/pkt_sched.h
+++ b/include/uapi/linux/pkt_sched.h
@@ -119,6 +119,140 @@ enum {
 
 #define TCA_STAB_MAX (__TCA_STAB_MAX - 1)
 
+
+/* PPEFIFO section */
+
+enum {
+        TCA_PPEFIFO_UNSPEC,
+        TCA_PPEFIFO_PARMS,
+        __TCA_PPEFIFO_MAX
+};
+
+#define TCA_PPEFIFO_MAX (__TCA_PPEFIFO_MAX - 1)
+
+struct tc_ppefifo_qopt {
+        __u32   limit;		/* Queue length: bytes for bfifo, packets for pfifo */
+        __u8    set_default;	/* Sets qdisc to be the default qdisc for enqueue */
+};
+
+/* PPERED section */
+
+enum {
+        TCA_PPERED_UNSPEC,
+        TCA_PPERED_PARMS,
+        __TCA_PPERED_MAX
+};
+
+#define TCA_PPERED_MAX (__TCA_PPERED_MAX - 1)
+
+struct tc_red_alg_parameter {
+    __u32   min;    /* qlen_avg < min: pkts are all enqueued */
+    __u32   max;    /* qlen_avg > max: pkts are all dropped */
+    __u32   probability;/* Drop probability at qlen_avg = max */
+    __u32   exp_weight_factor;/* exp_weight_factor for calculate qlen_avg */
+};
+
+struct tc_ppered_qopt {
+	__u32	limit;				/* Queue length */
+	struct	tc_red_alg_parameter rap;	/* RED algorithm parameters */
+	__u8	ecn;				/* Setting ECN bit or dropping */
+	__u8	set_default;			/* Sets qdisc to be the default for enqueue */
+};
+
+/* PPETBL section */
+
+enum {
+        TCA_PPETBL_UNSPEC,
+        TCA_PPETBL_PARMS,
+        __TCA_PPETBL_MAX
+};
+
+#define TCA_PPETBL_MAX  (__TCA_PPETBL_MAX - 1)
+
+struct tc_ppetbl_qopt {
+       __u32	rate;	/* Limiting rate of TBF */
+       __u32	burst;	/* Maximum burst size */
+       __u32	mtu;	/* Max size of packet, or minumim burst size */
+};
+
+/* PPEPRIO section */
+
+#define TCA_PPEPRIO_MAX_BANDS 4
+
+enum {
+        TCA_PPEPRIO_UNSPEC,
+        TCA_PPEPRIO_PARMS,
+        __TCA_PPEPRIO_MAX
+};
+
+#define TCA_PPEPRIO_MAX (__TCA_PPEPRIO_MAX - 1)
+
+struct tc_ppeprio_qopt {
+	int	bands;		/* Number of bands */
+};
+
+/* PPEWRR section */
+
+enum {
+        TCA_PPEWRR_UNSPEC,
+        TCA_PPEWRR_CLASS_PARMS,
+        TCA_PPEWRR_QDISC_PARMS,
+        __TCA_PPEWRR_MAX
+};
+
+#define TCA_PPEWRR_MAX  (__TCA_PPEWRR_MAX - 1)
+
+struct tc_ppewrr_class_qopt {
+        __u32   quantum;        /* Weight associated to this class */
+};
+
+struct tc_ppewrr_qopt {
+};
+
+
+/* PPEWFQ section*/
+
+enum {
+        TCA_PPEWFQ_UNSPEC,
+        TCA_PPEWFQ_CLASS_PARMS,
+        TCA_PPEWFQ_QDISC_PARMS,
+        __TCA_PPEWFQ_MAX
+};
+
+#define TCA_PPEWFQ_MAX  (__TCA_PPEWFQ_MAX - 1)
+
+struct tc_ppewfq_class_qopt {
+        __u32   quantum;        /* Weight associated to this class */
+};
+
+struct tc_ppewfq_qopt {
+};
+
+/* PPEHTB section */
+
+enum {
+        TCA_PPEHTB_UNSPEC,
+        TCA_PPEHTB_CLASS_PARMS,
+        TCA_PPEHTB_QDISC_PARMS,
+        __TCA_PPEHTB_MAX
+};
+
+#define TCA_PPEHTB_MAX  (__TCA_PPEHTB_MAX - 1)
+
+struct tc_ppehtb_class_qopt {
+	__u32   burst;		/* Allowed burst size */
+	__u32   rate;		/* Allowed bandwidth for this class */
+	__u32   cburst;		/* Maximum burst size */
+	__u32   crate;		/* Maximum bandwidth for this class */
+	__u32   quantum;	/* Quantum allocation for DRR */
+	__u32   priority;	/* Priority value associated with this class */
+	__u32   overhead;	/* Overhead in bytes per packet */
+};
+
+struct tc_ppehtb_qopt {
+	__u32	r2q;		/* Rate to quantum ratio */
+};
+
 /* FIFO section */
 
 struct tc_fifo_qopt {
-- 
2.34.1

