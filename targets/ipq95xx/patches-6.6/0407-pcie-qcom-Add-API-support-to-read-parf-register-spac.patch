From fb45c6e06714e2f0e05379c4f6c6204c3c2ce87b Mon Sep 17 00:00:00 2001
From: Hariharan K <quic_harihk@quicinc.com>
Date: Wed, 1 Nov 2023 11:47:30 +0530
Subject: [PATCH 401/500] pcie: qcom: Add API support to read parf register
 space

Change-Id: I982369938320b870c87608af802116d6a42f089e
Signed-off-by: Hariharan K <quic_harihk@quicinc.com>
---
 drivers/pci/controller/dwc/pcie-qcom.c | 32 ++++++++++++++++++++++++++
 include/linux/pci.h                    |  9 ++++++++
 2 files changed, 41 insertions(+)

diff --git a/drivers/pci/controller/dwc/pcie-qcom.c b/drivers/pci/controller/dwc/pcie-qcom.c
index 4fabcf707a18..9bbb8b3129f3 100644
--- a/drivers/pci/controller/dwc/pcie-qcom.c
+++ b/drivers/pci/controller/dwc/pcie-qcom.c
@@ -238,6 +238,7 @@ struct qcom_pcie {
 	void __iomem *parf;			/* DT parf */
 	void __iomem *elbi;			/* DT elbi */
 	void __iomem *mhi;
+	resource_size_t parf_size;
 	void __iomem *aggr_noc;
 	union qcom_pcie_resources res;
 	struct phy *phy;
@@ -1238,6 +1239,33 @@ static void qcom_pcie_host_deinit(struct dw_pcie_rp *pp)
 	pcie->cfg->ops->deinit(pcie);
 }
 
+int pcie_parf_read(struct pci_dev *dev, u32 offset, u32 *val)
+{
+	struct dw_pcie_rp *pp;
+	struct dw_pcie *pci;
+	struct qcom_pcie *pcie;
+
+	if(!dev)
+		goto err;
+
+	pp = dev->bus->sysdata;
+	pci = to_dw_pcie_from_pp(pp);
+	pcie = to_qcom_pcie(pci);
+
+	if (offset > pcie->parf_size ||
+			!IS_ALIGNED((uintptr_t)pcie->parf + offset, 4))
+		goto err;
+
+	*val = readl(pcie->parf + offset);
+
+	return 0;
+
+err:
+	*val = 0;
+	return -EINVAL;
+}
+EXPORT_SYMBOL(pcie_parf_read);
+
 static const struct dw_pcie_host_ops qcom_pcie_dw_ops = {
 	.host_init	= qcom_pcie_host_init,
 	.host_deinit	= qcom_pcie_host_deinit,
@@ -1520,6 +1548,10 @@ static int qcom_pcie_probe(struct platform_device *pdev)
 		goto err_pm_runtime_put;
 	}
 
+	/* get the parf size which is needed for pcie_parf_read() */
+	if (res)
+		pcie->parf_size = resource_size(res);
+
 	pcie->elbi = devm_platform_ioremap_resource_byname(pdev, "elbi");
 	if (IS_ERR(pcie->elbi)) {
 		ret = PTR_ERR(pcie->elbi);
diff --git a/include/linux/pci.h b/include/linux/pci.h
index b56417276042..4f9b12941256 100644
--- a/include/linux/pci.h
+++ b/include/linux/pci.h
@@ -1078,6 +1078,15 @@ extern enum pcie_bus_config_types pcie_bus_config;
 
 extern struct bus_type pci_bus_type;
 
+#ifdef CONFIG_PCIE_QCOM
+int pcie_parf_read(struct pci_dev *dev, u32 offset, u32 *val);
+#else
+static inline int pcie_parf_read(struct pci_dev *dev, u32 offset, u32 *val)
+{
+	return -ENODEV;
+}
+#endif
+
 /* Do NOT directly access these two variables, unless you are arch-specific PCI
  * code, or PCI core code. */
 extern struct list_head pci_root_buses;	/* List of all known PCI buses */
-- 
2.34.1

