From 29b67a0c9ae17031a8e434b52eb75b9c1ea81c99 Mon Sep 17 00:00:00 2001
From: Vignesh Viswanathan <quic_viswanat@quicinc.com>
Date: Thu, 30 Nov 2023 15:04:29 +0530
Subject: [PATCH 404/500] bus: mhi: Changed IRQ_HANDLED to IRQ_NONE in
 mhi_irq_handler

This patch changes the IRQ_HANDLED return value to IRQ_NONE,
if there is no pending event in the event ring to be handled.

In case of shared interrupt, kernel will invokes all handlers
registered for the particular interrupt with unique dev_id(in our
case it is mhi_event), and its shared handlers responsibility to
identify its own interrupt and exits quickly if not.

In our case, we are exiting the mhi_irq_handler if there is no pending
events in that particular event ring. So the return ideally should be
IRQ_NONE which denotes interrupt was not from this device or was not handled.

Change-Id: Ia2d8a125c8663e75b4ee3f0dc8aec5fdd1283b41
Signed-off-by: Karthick Shanmugham <quic_kartshan@quicinc.com>
Signed-off-by: Vignesh Viswanathan <quic_viswanat@quicinc.com>
---
 drivers/bus/mhi/host/main.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/drivers/bus/mhi/host/main.c b/drivers/bus/mhi/host/main.c
index 1dca6dbb93dd..a6d7c29025dc 100644
--- a/drivers/bus/mhi/host/main.c
+++ b/drivers/bus/mhi/host/main.c
@@ -459,7 +459,7 @@ irqreturn_t mhi_irq_handler(int irq_number, void *dev)
 
 	/* Only proceed if event ring has pending events */
 	if (ev_ring->rp == dev_rp)
-		return IRQ_HANDLED;
+		return IRQ_NONE;
 
 	/* For client managed event ring, notify pending data */
 	if (mhi_event->cl_manage) {
-- 
2.34.1

