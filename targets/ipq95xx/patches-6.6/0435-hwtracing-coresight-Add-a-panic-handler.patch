From 678b7473e46ed49125e1773e7b63290bec26bf74 Mon Sep 17 00:00:00 2001
From: Sridharan S N <quic_sridsn@quicinc.com>
Date: Tue, 14 Nov 2023 15:54:02 +0530
Subject: [PATCH 443/500] hwtracing: coresight: Add a panic handler

Flush and stop the Trace collection on panic

Change-Id: Ifae14db8d934dc70b98a1261e30f9d025545463a
Signed-off-by: Sridharan S N <quic_sridsn@quicinc.com>
---
 drivers/hwtracing/coresight/coresight-core.c | 23 ++++++++++++++++++++
 1 file changed, 23 insertions(+)

diff --git a/drivers/hwtracing/coresight/coresight-core.c b/drivers/hwtracing/coresight/coresight-core.c
index 8acd6de5f889..81a621c3da48 100644
--- a/drivers/hwtracing/coresight/coresight-core.c
+++ b/drivers/hwtracing/coresight/coresight-core.c
@@ -20,6 +20,7 @@
 #include <linux/property.h>
 #include <linux/delay.h>
 #include <linux/pm_runtime.h>
+#include <linux/panic_notifier.h>
 
 #include "coresight-etm-perf.h"
 #include "coresight-priv.h"
@@ -856,6 +857,23 @@ static int _coresight_build_path(struct coresight_device *csdev,
 	return 0;
 }
 
+static int coresight_panic_handler(struct notifier_block *this,
+			unsigned long event, void *ptr)
+{
+	struct coresight_device *curr_sink = coresight_get_enabled_sink(false);
+
+	if (curr_sink && curr_sink->enable && sink_ops(curr_sink)->abort) {
+		sink_ops(curr_sink)->abort(curr_sink);
+		curr_sink->enable = false;
+	}
+
+	return NOTIFY_DONE;
+}
+
+static struct notifier_block panic_nb = {
+	.notifier_call = coresight_panic_handler,
+};
+
 struct list_head *coresight_build_path(struct coresight_device *source,
 				       struct coresight_device *sink)
 {
@@ -1819,6 +1837,11 @@ static int __init coresight_init(void)
 	if (ret)
 		return ret;
 
+	ret = atomic_notifier_chain_register(&panic_notifier_list,
+					     &panic_nb);
+	if (ret)
+		return ret;
+
 	ret = etm_perf_init();
 	if (ret)
 		goto exit_bus_unregister;
-- 
2.34.1

