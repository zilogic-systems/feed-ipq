From 627427317bda8ead0b353b971b53992b84870634 Mon Sep 17 00:00:00 2001
From: Manish Verma <maniverm@codeaurora.org>
Date: Mon, 7 May 2018 13:02:55 +0530
Subject: [PATCH 349/500] net: map-t: Revoke dummy header removal from NF
 reassembly.

  Some algorithms like MAP-T needs information saved in dummy
  fragment header of an IPv6 packet. So, in those cases, dummy
  fragment header should not be removed by the IPv6 netfilter's
  reassembly code.
  Dummy fragment header is a fragment header with fragment
  offset and M bit as 0.

Change-Id: I998ba77c299df44aa991bc1d80125c0aabc035c1
Signed-off-by: Manish Verma <maniverm@codeaurora.org>
---
 net/ipv6/netfilter/Kconfig              | 10 ++++++++++
 net/ipv6/netfilter/nf_conntrack_reasm.c | 18 ++++++++++++++++++
 2 files changed, 28 insertions(+)

diff --git a/net/ipv6/netfilter/Kconfig b/net/ipv6/netfilter/Kconfig
index 0ba62f4868f9..ddb0c9dd6747 100644
--- a/net/ipv6/netfilter/Kconfig
+++ b/net/ipv6/netfilter/Kconfig
@@ -282,7 +282,17 @@ config IP6_NF_TARGET_NPT
 endif # IP6_NF_NAT
 
 endif # IP6_NF_IPTABLES
+
 endmenu
 
 config NF_DEFRAG_IPV6
 	tristate
+
+config NF_IPV6_DUMMY_HEADER
+	bool "Retain Dummy fragment header"
+	depends on NF_DEFRAG_IPV6
+	default n
+	help
+	  This option allows to retain dummy fragment header in an IPv6 packet.
+	  Dummy fragment header is the fragment header with Fragment Offset and
+	  M bit as 0.
diff --git a/net/ipv6/netfilter/nf_conntrack_reasm.c b/net/ipv6/netfilter/nf_conntrack_reasm.c
index b2dd48911c8d..4c0860c885c6 100644
--- a/net/ipv6/netfilter/nf_conntrack_reasm.c
+++ b/net/ipv6/netfilter/nf_conntrack_reasm.c
@@ -470,6 +470,25 @@ int nf_ct_frag6_gather(struct net *net, struct sk_buff *skb, u32 user)
 	hdr = ipv6_hdr(skb);
 	fhdr = (struct frag_hdr *)skb_transport_header(skb);
 
+#if IS_ENABLED(CONFIG_NF_IPV6_DUMMY_HEADER)
+	/*
+	 * Revoke dummy header removal by IPv6 reassembly code.
+	 *
+	 * Fragment header with MF and fragment offset field as 0, is a
+	 * dummy fragment header.
+	 *
+	 * MAP-T's RFC mandates CE to add the dummy header in packets and
+	 * adds its identification in its ID field. This field should be
+	 * conserved and delivered to BR, which uses it to identify the
+	 * particular CE.
+	 */
+	if (unlikely((fhdr->frag_off & htons(IP6_OFFSET | IP6_MF)) == 0)) {
+		/* TODO: Should we return 0 or something else?*/
+		return 0;
+	}
+#endif
+
+	skb_orphan(skb);
 	fq = fq_find(net, fhdr->identification, user, hdr,
 		     skb->dev ? skb->dev->ifindex : 0);
	if (fq == NULL) {
-- 
2.34.1

