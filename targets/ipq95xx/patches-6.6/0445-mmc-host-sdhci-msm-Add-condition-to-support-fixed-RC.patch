From 8d86221813f2b34fb75a6e3b297d98f4d328577e Mon Sep 17 00:00:00 2001
From: Sridharan S N <quic_sridsn@quicinc.com>
Date: Wed, 15 Nov 2023 14:34:25 +0530
Subject: [PATCH 458/500] mmc: host: sdhci-msm: Add condition to support fixed
 RCLK delay value from dts.

This change will add to support RCLK delayed value from dts.

In some eMMC card the programmed RCLK delay value in DDR_CONFIG_2 is
not working and throwing data crc error while reading from card.

Change-Id: Icec653037c899f6fda3cc0961dce4aed5e197f32
Signed-off-by: Sridharan S N <quic_sridsn@quicinc.com>
---
 drivers/mmc/host/sdhci-msm.c | 8 ++++++++
 1 file changed, 8 insertions(+)

diff --git a/drivers/mmc/host/sdhci-msm.c b/drivers/mmc/host/sdhci-msm.c
index 668e0aceeeba..ef0b7825c7ce 100644
--- a/drivers/mmc/host/sdhci-msm.c
+++ b/drivers/mmc/host/sdhci-msm.c
@@ -1010,6 +1010,8 @@ static int sdhci_msm_cm_dll_sdc4_calibration(struct sdhci_host *host)
 	struct sdhci_msm_host *msm_host = sdhci_pltfm_priv(pltfm_host);
 	const struct sdhci_msm_offset *msm_offset =
 					sdhci_priv_msm_offset(host);
+	struct device *dev = &msm_host->pdev->dev;
+	u32 ext_rclk_dly_val;
 
 	pr_debug("%s: %s: Enter\n", mmc_hostname(host->mmc), __func__);
 
@@ -1026,6 +1028,12 @@ static int sdhci_msm_cm_dll_sdc4_calibration(struct sdhci_host *host)
 		ddr_cfg_offset = msm_offset->core_ddr_config_old;
 	writel_relaxed(msm_host->ddr_config, host->ioaddr + ddr_cfg_offset);
 
+	if (!of_property_read_u32(dev->of_node, "qcom,ext_prg_rclk_dly_en",
+					&ext_rclk_dly_val)) {
+		writel_relaxed(ext_rclk_dly_val, host->ioaddr +
+						ddr_cfg_offset);
+	}
+
 	if (mmc->ios.enhanced_strobe) {
 		config = readl_relaxed(host->ioaddr +
 				msm_offset->core_ddr_200_cfg);
-- 
2.34.1

