From 9f13e55d073d0a3d0b9167ec1d8b473c03993da8 Mon Sep 17 00:00:00 2001
From: Hariharan K <quic_harihk@quicinc.com>
Date: Thu, 2 Nov 2023 15:58:30 +0530
Subject: [PATCH 462/500] pci: dwc: qcom: Skip PCIe probe based on QFPROM Fuses

IPQ95xx and IPQ53xx SKU's support different PCIe
instances and it varies based on SoC variant. This
can be determined through QFPROM eFuse register
present in the silicon.

Added support to skip the PCIe probe function for
disabled PCIe based on eFuse register. To utilize
this support, nvmem-cells must be included on the
PCIe node in DTSI.

This is a snapshot of the commit
8439ef48debd3eb4fb63a4e073f605eba5312a56
from fig_alder branch and
oss/kernel/linux-ipq-5.4 project.

Change-Id: If60f74e4ded3dee0121ac261943eb4701fecbd16
Signed-off-by: Hariharan K <quic_harihk@quicinc.com>
---
 drivers/pci/controller/dwc/pcie-qcom.c | 21 +++++++++++++++++++++
 1 file changed, 21 insertions(+)

diff --git a/drivers/pci/controller/dwc/pcie-qcom.c b/drivers/pci/controller/dwc/pcie-qcom.c
index 4a7da1dfd765..b46f7530236f 100644
--- a/drivers/pci/controller/dwc/pcie-qcom.c
+++ b/drivers/pci/controller/dwc/pcie-qcom.c
@@ -30,6 +30,7 @@
 #include <linux/reset.h>
 #include <linux/slab.h>
 #include <linux/types.h>
+#include <linux/nvmem-consumer.h>
 
 #include "../../pci.h"
 #include "pcie-designware.h"
@@ -1638,6 +1639,26 @@ static int qcom_pcie_probe(struct platform_device *pdev)
 	struct dw_pcie *pci;
 	int ret;
 	uint32_t num_lanes = 0;
+	struct nvmem_cell *pcie_nvmem;
+	u8 *disable_status;
+	size_t len;
+
+	/* If nvmem-cells present on PCIe node in DTSI, then check the QFPROM
+	 * fuses for PCIe is disabled */
+	pcie_nvmem = of_nvmem_cell_get(pdev->dev.of_node, NULL);
+	if (IS_ERR(pcie_nvmem)) {
+		if (PTR_ERR(pcie_nvmem) == -EPROBE_DEFER)
+			return -EPROBE_DEFER;
+	} else {
+		disable_status = nvmem_cell_read(pcie_nvmem, &len);
+		nvmem_cell_put(pcie_nvmem);
+		if ( !IS_ERR(disable_status) && ((unsigned int)(*disable_status) == 1) ) {
+			dev_info(dev,"Disabled in qfprom efuse\n");
+			kfree(disable_status);
+			return -ENODEV;
+		}
+		kfree(disable_status);
+	}
 
 	pcie_cfg = of_device_get_match_data(dev);
 	if (!pcie_cfg || !pcie_cfg->ops) {
-- 
2.34.1

