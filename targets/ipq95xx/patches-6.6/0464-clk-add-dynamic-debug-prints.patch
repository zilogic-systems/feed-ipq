From d701f071a69c997ebbfed407d9991e72cbfe61f0 Mon Sep 17 00:00:00 2001
From: Devi Priya <quic_devipriy@quicinc.com>
Date: Mon, 20 Nov 2023 21:33:45 +0530
Subject: [PATCH 469/500] clk: add dynamic debug prints

In some of the silent reboot cases, it is found that root cause is due to
clock related operations. In order to improve the debugging in such cases
added the dynamic debug prints for the following clock operations.

	1) clk_enable
	2) clk_disable
	3) clk_set_parent
	3) clk_set_rate

These dynamic debug prints can be enabled through either of the following
options

1) append the following query to bootargs
  "dyndbg=\\"file drivers/clk/clk.c +p\\""

or

2) by writing into the dynamic debug control file as
  echo -n 'file drivers/clk/clk.c +p' > <debugfs>/dynamic_debug/control

By default, these prints will be disabled.

Signed-off-by: Praveenkumar I <ipkumar@codeaurora.org>
(cherry picked from commit I6c103f7dbd37222e0fab407a46cf3c1dacd2bfaf)
Signed-off-by: Devi Priya <quic_devipriy@quicinc.com>

Change-Id: I65860bca693554cbc0c6ede943389236da7ffd91
---
 drivers/clk/clk.c | 10 ++++++++++
 1 file changed, 10 insertions(+)

diff --git a/drivers/clk/clk.c b/drivers/clk/clk.c
index 473563bc7496..22fd0d983278 100644
--- a/drivers/clk/clk.c
+++ b/drivers/clk/clk.c
@@ -1099,6 +1099,8 @@ static void clk_core_disable(struct clk_core *core)
 
 	trace_clk_disable(core);
 
+	pr_debug("%s: %s\n", __func__, core->name);
+
 	if (core->ops->disable)
 		core->ops->disable(core->hw);
 
@@ -1158,6 +1160,8 @@ static int clk_core_enable(struct clk_core *core)
 
 		trace_clk_enable(core);
 
+		pr_debug("%s: %s\n", __func__, core->name);
+
 		if (core->ops->enable)
 			ret = core->ops->enable(core->hw);
 
@@ -2080,6 +2084,9 @@ static int __clk_set_parent(struct clk_core *core, struct clk_core *parent,
 
 	trace_clk_set_parent(core, parent);
 
+	pr_debug("%s: clock %s reparented from %s to %s\n",
+			__func__, core->name, core->parent->name, parent->name);
+
 	/* change clock input source */
 	if (parent && core->ops->set_parent)
 		ret = core->ops->set_parent(core->hw, p_index);
@@ -2344,6 +2351,9 @@ static void clk_change_rate(struct clk_core *core)
 
 	trace_clk_set_rate(core, core->new_rate);
 
+	pr_debug("%s: frequency for clock %s changed from %lu to %lu\n",
+			__func__, core->name, old_rate, core->new_rate);
+
 	if (!skip_set_rate && core->ops->set_rate)
 		core->ops->set_rate(core->hw, core->new_rate, best_parent_rate);
 
-- 
2.34.1

