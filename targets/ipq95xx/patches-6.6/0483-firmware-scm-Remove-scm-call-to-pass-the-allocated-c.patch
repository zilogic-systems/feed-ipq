From f8ddf764f5fab7a9632a6a72a9c30405c75f276d Mon Sep 17 00:00:00 2001
From: Poovendhan Selvaraj <quic_poovendh@quicinc.com>
Date: Fri, 1 Dec 2023 11:59:20 +0530
Subject: [PATCH 488/500] firmware: scm: Remove scm call to pass the allocated
 context dump buffer to TZ

Remove scm call to pass the allocated context dump buffer to TZ since added the
same support in ctx save driver.
Removed banned word from crypto driver

Change-Id: I32bf828290c0154ff287730b7bfd5e2a6c16b922
Signed-off-by: Poovendhan Selvaraj <quic_poovendh@quicinc.com>
---
 drivers/crypto/qce/core.c   |  2 +-
 drivers/firmware/qcom_scm.c | 29 -----------------------------
 drivers/firmware/qcom_scm.h |  1 -
 3 files changed, 1 insertion(+), 31 deletions(-)

diff --git a/drivers/crypto/qce/core.c b/drivers/crypto/qce/core.c
index 58757ff97452..c2f0b22c9740 100644
--- a/drivers/crypto/qce/core.c
+++ b/drivers/crypto/qce/core.c
@@ -49,7 +49,7 @@ static int qce_disp_stats(struct qce_device *qce)
 	pstat = &qce->qce_stat;
 	read_buf = qce->qce_debug_read_buf;
 	len = scnprintf(read_buf, DEBUG_MAX_RW_BUF - 1,
-			"\nQualcomm crypto accelerator Statistics\n");
+			"\nQTI crypto accelerator Statistics\n");
 
 	len += scnprintf(read_buf + len, DEBUG_MAX_RW_BUF - len - 1,
 			"   ABLK CIPHER AES encryption          : %llu\n",
diff --git a/drivers/firmware/qcom_scm.c b/drivers/firmware/qcom_scm.c
index 574c53f379c5..5e9241e10bad 100644
--- a/drivers/firmware/qcom_scm.c
+++ b/drivers/firmware/qcom_scm.c
@@ -535,34 +535,6 @@ long  qcom_scm_is_feature_available(u32 feature_id)
 }
 EXPORT_SYMBOL_GPL(qcom_scm_is_feature_available);
 
-static void qcom_scm_set_cpu_regsave(void)
-{
-	long ret;
-	void *buf;
-
-	ret = qcom_scm_is_feature_available(QCOM_SCM_CDUMP_FEATURE_ID);
-	if (ret >= 0) {
-		dev_info(__scm->dev,
-			"Crash Dump feature ID is %lx\n", ret);
-		return;
-	}
-	dev_info(__scm->dev,
-		"TZ doesn't support the static buffer to save CPU context");
-
-	/* Fallback to old method to save CPU context register */
-	buf = (void *) __get_free_pages(GFP_KERNEL,
-			get_order(QCOM_SCM_CDUMP_PAGE_SIZE));
-	if (!buf) {
-		dev_err(__scm->dev,
-			"Failed to allocate buffer memory\n");
-		return;
-	}
-	ret = qcom_scm_regsave(buf, QCOM_SCM_CDUMP_PAGE_SIZE);
-	if (ret) {
-		dev_err(__scm->dev, "Setting CPU context save buffer failed\n");
-	}
-}
-
 static void qcom_scm_set_abnormal_magic(bool enable)
 {
 	int ret;
@@ -2971,7 +2943,6 @@ static int qcom_scm_probe(struct platform_device *pdev)
 	 */
 	if (download_mode) {
 		qcom_scm_set_download_mode(true);
-		qcom_scm_set_cpu_regsave();
 	}
 	else {
 		qcom_scm_sdi_disable(__scm->dev);
diff --git a/drivers/firmware/qcom_scm.h b/drivers/firmware/qcom_scm.h
index 23a18aad997d..065cb7de1883 100644
--- a/drivers/firmware/qcom_scm.h
+++ b/drivers/firmware/qcom_scm.h
@@ -116,7 +116,6 @@ extern int __qti_scm_tz_hvc_log(struct device *dev, u32 svc_id, u32 cmd_id,
 #define QCOM_SCM_SVC_UTIL		0x03
 #define QCOM_SCM_CMD_SET_REGSAVE	0x02
 #define QCOM_SCM_CDUMP_FEATURE_ID	0x4
-#define QCOM_SCM_CDUMP_PAGE_SIZE	0x80000
 
 #define QCOM_SCM_SVC_IO			0x05
 #define QCOM_SCM_IO_READ		0x01
-- 
2.34.1

