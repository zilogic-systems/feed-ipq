From 10ac4f4c02aca6a578aa21f5b291229533f0c914 Mon Sep 17 00:00:00 2001
From: Hariharan K <quic_harihk@quicinc.com>
Date: Mon, 22 Jan 2024 12:04:59 +0530
Subject: [PATCH] drivers: clk: qcom: Print PLL_MODE and PLL_STATUS on failure

Print the PLL_MODE and PLL_STATUS which helps to check the
random PLL failure.

This is a snapshot of the commit
c6537e3a8a0d4aae26490cc627df977012148db7
from win.linuxopenwrt.2.1 and
oss/kernel/linux-ipq-5.4 project.

Change-Id: Icdb2020a65f57e595a719424937bd66da02e24d9
Signed-off-by: Hariharan K <quic_harihk@quicinc.com>
---
 drivers/clk/qcom/clk-alpha-pll.c | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

diff --git a/drivers/clk/qcom/clk-alpha-pll.c b/drivers/clk/qcom/clk-alpha-pll.c
index 054b11f3d566..30c5a8bf5129 100644
--- a/drivers/clk/qcom/clk-alpha-pll.c
+++ b/drivers/clk/qcom/clk-alpha-pll.c
@@ -302,7 +302,7 @@ EXPORT_SYMBOL_GPL(clk_alpha_pll_regs);
 static int wait_for_pll(struct clk_alpha_pll *pll, u32 mask, bool inverse,
 			const char *action)
 {
-	u32 val;
+	u32 val, status;
 	int count;
 	int ret;
 	const char *name = clk_hw_get_name(&pll->clkr.hw);
@@ -323,7 +323,8 @@ static int wait_for_pll(struct clk_alpha_pll *pll, u32 mask, bool inverse,
 		udelay(1);
 	}
 
-	WARN(1, "%s failed to %s!\n", name, action);
+	regmap_read(pll->clkr.regmap, PLL_STATUS(pll), &status);
+	WARN(1, "%s failed to %s! PLL_MODE 0x%x PLL_STATUS 0x%x\n", name, action, val, status);
 	return -ETIMEDOUT;
 }
 
-- 
2.34.1

