From 234d7d1dd2587bb49b081c6434da972eaa62891e Mon Sep 17 00:00:00 2001
From: Saahil Tomar <quic_saahtoma@quicinc.com>
Date: Thu, 22 Feb 2024 14:49:33 +0530
Subject: [PATCH] treewide: resolve the compiler warnings.

This fixes the following compiler warnings across 5 files
-remove unused variable [-Werror=unused-variable]
-remove excess element '0' from struct initialiser [-Werror]
-resolving the [-Werror=implicit-fallthrough=] issue in statement

Change-Id: I5c6e6bf21c3282d15b8ec0eb72caeb059a6f45da
Signed-off-by: Saahil Tomar <quic_saahtoma@quicinc.com>
---
 crypto/tcrypt.c                   | 1 +
 drivers/bus/mhi/host/boot.c       | 1 -
 drivers/mtd/nand/raw/qcom_nandc.c | 2 +-
 drivers/mtd/ubi/cdev.c            | 2 +-
 drivers/watchdog/qcom-wdt.c       | 3 ++-
 5 files changed, 5 insertions(+), 4 deletions(-)

diff --git a/crypto/tcrypt.c b/crypto/tcrypt.c
index 5c9b091f1801..85bbfe45b762 100644
--- a/crypto/tcrypt.c
+++ b/crypto/tcrypt.c
@@ -1818,6 +1818,7 @@ static int do_test(const char *alg, u32 type, u32 mask, int m, u32 num_mb)
 
 	case 160:
 		ret = min(ret, tcrypt_test("xcbc(sm4)"));
+		break;
 
 	case 180:
 		ret = min(ret, tcrypt_test("authenc(hmac(sha256),cbc(aes))"));
diff --git a/drivers/bus/mhi/host/boot.c b/drivers/bus/mhi/host/boot.c
index bff641f12612..d2da710a751a 100644
--- a/drivers/bus/mhi/host/boot.c
+++ b/drivers/bus/mhi/host/boot.c
@@ -885,7 +885,6 @@ int mhi_download_amss_image(struct mhi_controller *mhi_cntrl)
 	struct image_info *image_info = mhi_cntrl->fbc_image;
 	struct device *dev = &mhi_cntrl->mhi_dev->dev;
 	enum mhi_pm_state new_state;
-	struct pci_dev *pdev = to_pci_dev(mhi_cntrl->cntrl_dev);
 	int ret;
 
 	if (!image_info)
diff --git a/drivers/mtd/nand/raw/qcom_nandc.c b/drivers/mtd/nand/raw/qcom_nandc.c
index 86da3abf39ca..2d474a5a742d 100644
--- a/drivers/mtd/nand/raw/qcom_nandc.c
+++ b/drivers/mtd/nand/raw/qcom_nandc.c
@@ -323,7 +323,7 @@ static const u32 qspi_training_block_64[] = {
 struct nand_flash_dev qspinand_flash_ids_2k[] = {
 	{"MX35UF4GE4AD-Z4I SPI NAND 1G 1.8V",
 			{ .id = {0xc2, 0xb7} },
-		SZ_2K, SZ_256, SZ_128K, 0, 2, 128, NAND_ECC_INFO(8, SZ_512), 0},
+		SZ_2K, SZ_256, SZ_128K, 0, 2, 128, NAND_ECC_INFO(8, SZ_512)},
 	{NULL}
 };
 
diff --git a/drivers/mtd/ubi/cdev.c b/drivers/mtd/ubi/cdev.c
index 7aaa5516e140..630a5c5efbad 100644
--- a/drivers/mtd/ubi/cdev.c
+++ b/drivers/mtd/ubi/cdev.c
@@ -1055,7 +1055,7 @@ static long ctrl_cdev_ioctl(struct file *file, unsigned int cmd,
 	/* Detach an MTD device command */
 	case UBI_IOCFDET:
 		force = 1;
-		/* fallthrough */
+		fallthrough;
 
 	case UBI_IOCDET:
 	{
diff --git a/drivers/watchdog/qcom-wdt.c b/drivers/watchdog/qcom-wdt.c
index f92974c86451..a3708a6a837b 100644
--- a/drivers/watchdog/qcom-wdt.c
+++ b/drivers/watchdog/qcom-wdt.c
@@ -129,10 +129,11 @@ static int qcom_wdt_set_pretimeout(struct watchdog_device *wdd,
 static int qcom_wdt_restart(struct watchdog_device *wdd, unsigned long action,
 			    void *data)
 {
+
+#ifdef CONFIG_QCOM_FORCE_WDOG_BITE_ON_PANIC
 	struct qcom_wdt *wdt = to_qcom_wdt(wdd);
 	u32 timeout;
 
-#ifdef CONFIG_QCOM_FORCE_WDOG_BITE_ON_PANIC
 	if (!wdt->in_panic)
 		return 0;
 
-- 
2.34.1

