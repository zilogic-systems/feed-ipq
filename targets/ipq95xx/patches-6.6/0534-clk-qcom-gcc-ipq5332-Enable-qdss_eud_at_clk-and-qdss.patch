From fa54157f1c99718bb8159e95bcc5648820f6b028 Mon Sep 17 00:00:00 2001
From: Sridharan S N <quic_sridsn@quicinc.com>
Date: Mon, 19 Feb 2024 10:22:49 +0530
Subject: [PATCH] clk: qcom: gcc-ipq5332: Enable qdss_eud_at_clk and qdss_stm
 clks

QDSS drivers are not enabled in linux-6.x for IPQ5332 SoC and latest
TZ is updated to enable the required QDSS clocks. So for the users with
old TZ won't have this configuration. Hence enable those clks by regmap
from kernel.

Enable gcc_qdss_eud_at_clk, gcc_qdss_stm_clk and
gcc_sys_noc_qdss_stm_axi_clk. Configure QDSS_STM_CMD_RCGR
appropriately so that stm_clk and stm_axi_clk are running at 200MHz.

Change-Id: Iea21a9676eea2d20daf103bed014c19bfb6ebad3
Signed-off-by: Sridharan S N <quic_sridsn@quicinc.com>
---
 drivers/clk/qcom/gcc-ipq5332.c | 17 ++++++++++++++++-
 1 file changed, 16 insertions(+), 1 deletion(-)

diff --git a/drivers/clk/qcom/gcc-ipq5332.c b/drivers/clk/qcom/gcc-ipq5332.c
index b6cb480b85aa..ef8915e626ad 100644
--- a/drivers/clk/qcom/gcc-ipq5332.c
+++ b/drivers/clk/qcom/gcc-ipq5332.c
@@ -2972,7 +2972,22 @@ static const struct qcom_cc_desc gcc_ipq5332_desc = {
 
 static int gcc_ipq5332_probe(struct platform_device *pdev)
 {
-	return qcom_cc_probe(pdev, &gcc_ipq5332_desc);
+	struct regmap *regmap;
+
+	regmap = qcom_cc_map(pdev, &gcc_ipq5332_desc);
+
+	if (IS_ERR(regmap))
+		return PTR_ERR(regmap);
+
+	/* Keep the critical clocks always-On */
+	regmap_update_bits(regmap, 0x2d040, BIT(0), BIT(0)); /* qdss_stm_clk */
+	regmap_update_bits(regmap, 0x2e034, BIT(0), BIT(0)); /* sys_noc_qdss_stm_axi_clk */
+	regmap_update_bits(regmap, 0x2d070, BIT(0), BIT(0)); /* qdss_eud_at_clk */
+	/* Configure QDSS_STM_CMD_RCGR to 200MHz */
+	regmap_write(regmap, 0x2d010, 0x107);
+	regmap_update_bits(regmap, 0x2d00c, BIT(0), BIT(0));
+
+	return qcom_cc_really_probe(pdev, &gcc_ipq5332_desc, regmap);
 }
 
 static const struct of_device_id gcc_ipq5332_match_table[] = {
-- 
2.34.1

