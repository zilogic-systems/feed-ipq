From dc9c60327aeff05eaa10eb1b050d98a7e5c0b89a Mon Sep 17 00:00:00 2001
From: Amitesh Anand <quic_amitesh@quicinc.com>
Date: Wed, 13 Mar 2024 16:40:18 +0530
Subject: [PATCH] net: Fix usage of uninitialized object for flushing conntrack

This fixes patch from Openwrt community:

OpenWrt: 600-netfilter_conntrack_flush.patch
netfilter: add support for flushing conntrack via /proc
lede-commit 8193bbe59a74d34d6a26d4a8cb857b1952905314

We must initialize nf_ct_iter_data object before calling
nf_ct_iterate_cleanup_net(); else kernel receives garbage value
for port_id and report.

We observed crash for 32-bit kernel (where randomly portid=0,
report=2). Crash is seen in file_ns_capable() because *file is NULL.

[<401231c0>] (file_ns_capable) from [<40716818>] (__netlink_ns_capable+0x3c/0x48)
[<40716818>] (__netlink_ns_capable) from [<3f7f8cd8>] (nfnetlink_rcv+0x4c/0x184 [nfnetlink])
[<3f7f8cd8>] (nfnetlink_rcv [nfnetlink]) from [<4071a2bc>] (netlink_unicast+0x170/0x260)
[<4071a2bc>] (netlink_unicast) from [<4071a3e8>] (nlmsg_notify+0x3c/0xc8)
[<4071a3e8>] (nlmsg_notify) from [<3fb182d8>] (ctnetlink_conntrack_event+0x318/0x498 [nf_conntrack_netlink])
[<3fb182d8>] (ctnetlink_conntrack_event [nf_conntrack_netlink]) from [<40139cb8>] (notifier_call_chain+0x40/0x64)
[<40139cb8>] (notifier_call_chain) from [<40139e0c>] (atomic_notifier_call_chain+0x30/0x44)
[<40139e0c>] (atomic_notifier_call_chain) from [<3f7b1008>] (nf_ct_delete+0xc0/0x6f0 [nf_conntrack])
[<3f7b1008>] (nf_ct_delete [nf_conntrack]) from [<3f7b3648>] (gc_worker+0x4fc/0x638 [nf_conntrack])
[<3f7b3648>] (gc_worker [nf_conntrack]) from [<3f7b4924>] (ct_file_write+0xa8/0x15c [nf_conntrack])
[<3f7b4924>] (ct_file_write [nf_conntrack]) from [<40300204>] (proc_simple_write+0x68/0x84)
[<40300204>] (proc_simple_write) from [<402fa11c>] (proc_reg_write+0xb8/0xc8)
[<402fa11c>] (proc_reg_write) from [<40295bb0>] (vfs_write+0x108/0x370)
[<40295bb0>] (vfs_write) from [<40295f58>] (ksys_write+0x68/0xd4)
[<40295f58>] (ksys_write) from [<40100060>] (ret_fast_syscall+0x0/0x4c)

For 64-bit kernel, it shows (random values portid=2149781056,
report=4294967232). It doesn't crash, as no socket is found
for incorrect portid.

Change-Id: If49dbbabbe4bbf3a524e700f8377337183798428
Signed-off-by: Amitesh Anand <quic_amitesh@quicinc.com>
---
 net/netfilter/nf_conntrack_standalone.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/net/netfilter/nf_conntrack_standalone.c b/net/netfilter/nf_conntrack_standalone.c
index 6a3fb6749659..1720d6b41abe 100644
--- a/net/netfilter/nf_conntrack_standalone.c
+++ b/net/netfilter/nf_conntrack_standalone.c
@@ -488,7 +488,7 @@ static int kill_matching(struct nf_conn *i, void *data)
 static int ct_file_write(struct file *file, char *buf, size_t count)
 {
 	struct seq_file *seq = file->private_data;
-	struct nf_ct_iter_data iter_data;
+	struct nf_ct_iter_data iter_data = { };
 	struct kill_request kr = { };
 
 	if (count == 0)
-- 
2.34.1

