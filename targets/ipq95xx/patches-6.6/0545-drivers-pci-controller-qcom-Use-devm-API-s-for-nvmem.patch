From af82343efe98c068e4c789413c78e95eae1212b9 Mon Sep 17 00:00:00 2001
From: Hariharan K <quic_harihk@quicinc.com>
Date: Wed, 27 Mar 2024 11:45:03 +0530
Subject: [PATCH] drivers: pci: controller: qcom: Use devm API's for nvmem get

Use devm nvmem API for better error handling compared
to the existing OF related nvmem API.

Change-Id: I5b1af4283403bf75f832450c6c809d18082ef6c5
Signed-off-by: Hariharan K <quic_harihk@quicinc.com>
---
 drivers/pci/controller/dwc/pcie-qcom.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/drivers/pci/controller/dwc/pcie-qcom.c b/drivers/pci/controller/dwc/pcie-qcom.c
index 49a7c52aa3d8..7b6fd71bf611 100644
--- a/drivers/pci/controller/dwc/pcie-qcom.c
+++ b/drivers/pci/controller/dwc/pcie-qcom.c
@@ -1696,13 +1696,13 @@ static int qcom_pcie_probe(struct platform_device *pdev)
 
 	/* If nvmem-cells present on PCIe node in DTSI, then check the QFPROM
 	 * fuses for PCIe is disabled */
-	pcie_nvmem = of_nvmem_cell_get(pdev->dev.of_node, NULL);
+	pcie_nvmem = devm_nvmem_cell_get(dev, NULL);
 	if (IS_ERR(pcie_nvmem)) {
 		if (PTR_ERR(pcie_nvmem) == -EPROBE_DEFER)
 			return -EPROBE_DEFER;
 	} else {
 		disable_status = nvmem_cell_read(pcie_nvmem, &len);
-		nvmem_cell_put(pcie_nvmem);
+		devm_nvmem_cell_put(dev, pcie_nvmem);
 		if ( !IS_ERR(disable_status) && ((unsigned int)(*disable_status) == 1) ) {
 			dev_info(dev,"Disabled in qfprom efuse\n");
 			kfree(disable_status);
-- 
2.34.1

