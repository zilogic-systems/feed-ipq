From 3ff8e2ec95868c2651086cd73457f79e0ce1ae6a Mon Sep 17 00:00:00 2001
From: Manikanta Mylavarapu <quic_mmanikan@quicinc.com>
Date: Tue, 14 May 2024 14:52:24 +0530
Subject: [PATCH] mmc: core: configure emulation specific clock register

In few emulation platforms, emmc write/read is failing
at random addresses because frequency of clock from
sdcc controller not configured properly.

Configure clock rate adjust register to 0x0 (freq is 200K)
till enumeration, after that configure to 0x1 (freq is 6M)
for data transfer.

Change-Id: I928304f1aa97c8575a7cb610737b5b51c53e88f4
Signed-off-by: Manikanta Mylavarapu <quic_mmanikan@quicinc.com>
---
 drivers/mmc/core/core.c | 18 ++++++++++++++++++
 1 file changed, 18 insertions(+)

diff --git a/drivers/mmc/core/core.c b/drivers/mmc/core/core.c
index 3d3e0ca52614..aa7c4f01e726 100644
--- a/drivers/mmc/core/core.c
+++ b/drivers/mmc/core/core.c
@@ -47,6 +47,8 @@
 #include "sd_ops.h"
 #include "sdio_ops.h"
 
+#define EMU_CLK_ADJ_REG 0x194C008
+
 /* The max erase timeout, used when host->max_busy_timeout isn't specified */
 #define MMC_ERASE_TIMEOUT_MS	(60 * 1000) /* 60 s */
 #define SD_DISCARD_TIMEOUT_MS	(250)
@@ -2204,10 +2206,21 @@ void mmc_rescan(struct work_struct *work)
 	struct mmc_host *host =
 		container_of(work, struct mmc_host, detect.work);
 	int i;
+	void __iomem *emu_clk_adj_reg;
 
 	if (host->rescan_disable)
 		return;
 
+	if (of_property_read_bool(host->parent->of_node, "qcom,emulation")) {
+		emu_clk_adj_reg = ioremap(EMU_CLK_ADJ_REG, 4);
+		if (IS_ERR_OR_NULL(emu_clk_adj_reg)) {
+			dev_info(host->parent,
+				 "ioremap failed for emu clk adj register\n");
+			return;
+		}
+		writel(0x0, emu_clk_adj_reg);
+	}
+
 	/* If there is a non-removable card registered, only scan once */
 	if (!mmc_card_is_removable(host) && host->rescan_entered)
 		return;
@@ -2257,6 +2270,11 @@ void mmc_rescan(struct work_struct *work)
 			break;
 	}
 
+	if (of_property_read_bool(host->parent->of_node, "qcom,emulation")) {
+		writel(0x1, emu_clk_adj_reg);
+		iounmap(emu_clk_adj_reg);
+	}
+
 	/* A non-removable card should have been detected by now. */
 	if (!mmc_card_is_removable(host) && !host->bus_ops)
 		pr_info("%s: Failed to initialize a non-removable card",
-- 
2.34.1

