From d4c5718f42ce779c7f4b839d5518b44fb81c6913 Mon Sep 17 00:00:00 2001
From: Manikanta Mylavarapu <quic_mmanikan@quicinc.com>
Date: Thu, 30 May 2024 18:11:20 +0530
Subject: [PATCH] PCI: dwc: devsoc: fix inbound ATU configuration

When PCIe-to-CPU have 1:1 memory mapping, dma-ranges property is not
used and iATU INBOUND congifuration is skipped.
In this case, iATU INBOUD detection is not required as well.
Hence adding a dma-ranges check for the iATU INBOUND detection logic.

Change-Id: I2e2c34c15e399353ccf10c215983d9d7273f7a61
Signed-off-by: Manikanta Mylavarapu <quic_mmanikan@quicinc.com>
---
 drivers/pci/controller/dwc/pcie-designware.c | 14 ++++++++------
 1 file changed, 8 insertions(+), 6 deletions(-)

diff --git a/drivers/pci/controller/dwc/pcie-designware.c b/drivers/pci/controller/dwc/pcie-designware.c
index 9b80a74e6de6..d31aadddefdf 100644
--- a/drivers/pci/controller/dwc/pcie-designware.c
+++ b/drivers/pci/controller/dwc/pcie-designware.c
@@ -798,7 +798,7 @@ static void dw_pcie_link_set_max_link_width(struct dw_pcie *pci, u32 num_lanes)
 
 void dw_pcie_iatu_detect(struct dw_pcie *pci)
 {
-	int max_region, ob, ib;
+	int max_region, ob, ib = 0;
 	u32 val, min, dir;
 	u64 max;
 
@@ -822,11 +822,13 @@ void dw_pcie_iatu_detect(struct dw_pcie *pci)
 			break;
 	}
 
-	for (ib = 0; ib < max_region; ib++) {
-		dw_pcie_writel_atu_ib(pci, ib, PCIE_ATU_LOWER_TARGET, 0x11110000);
-		val = dw_pcie_readl_atu_ib(pci, ib, PCIE_ATU_LOWER_TARGET);
-		if (val != 0x11110000)
-			break;
+	if (!list_empty(&pci->pp.bridge->dma_ranges)) {
+		for (ib = 0; ib < max_region; ib++) {
+			dw_pcie_writel_atu_ib(pci, ib, PCIE_ATU_LOWER_TARGET, 0x11110000);
+			val = dw_pcie_readl_atu_ib(pci, ib, PCIE_ATU_LOWER_TARGET);
+			if (val != 0x11110000)
+				break;
+		}
 	}
 
 	if (ob) {
-- 
2.34.1

