From 9dcf1346a617c7f7d5dd97c4d7d4b946750eb49c Mon Sep 17 00:00:00 2001
From: Md Sadre Alam <quic_mdalam@quicinc.com>
Date: Wed, 27 Apr 2022 10:39:47 +0530
Subject: [PATCH] dmaengine: qcom: bam_dma: Change gfp flag to GFP_ATOMIC
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

While running multiple application, memory allocation pressure
is getting increased in case of low memory case due to this in
bam_prep_slave_sg() api kzalloc() allocation is getting failed
if we use gfp flag GFP_NOWAIT.

| dd: page allocation failure: order:0,
| mode:0x800(GFP_NOWAIT), nodemask=(null),cpuset=/,mems_allowed=0
| CPU: 3 PID: 4703 Comm: dd Tainted: P 5.4.164 #0
| Hardware name: Generic DT based system
| [<4210f364>] (unwind_backtrace) from [<4210b698>]show_stack+0x10/0x14)
| [<4210b698>] (show_stack) from [<4271fc90>](dump_stack+0x88/0xa8)
| [<4271fc90>] (dump_stack) from [<4221d314>](warn_alloc+0xa0/0x15c)
| [<4221d314>] (warn_alloc) from [<4221e0b8>](__alloc_pages_nodemask+
  0xc58/0xd40)
| [<4221e0b8>] (__alloc_pages_nodemask) from [<42223b28>](new_slab+0x500
  /0xb34)
| [<42223b28>] (new_slab) from [<422243c8>](___slab_alloc.constprop.6+0x26c
  /0x608)
| [<422243c8>] (___slab_alloc.constprop.6) from (__slab_alloc.constprop.5+0x1c
  /0x24)
| [<42224780>] (__slab_alloc.constprop.5) from [<422248a4>](__kmalloc+0x11c/0x258)
| [<422248a4>] (__kmalloc) from [<4242fc84>](bam_prep_slave_sg+0xa0/0x214)
| [<4242fc84>] (bam_prep_slave_sg) from [<424c1464>](prepare_bam_async_desc+0x1e4/
  0x2a8)
| [<424c1464>] (prepare_bam_async_desc) from [<424c1910>](write_reg_dma+0xb8/0xfc)
| [<424c1910>] (write_reg_dma) from [<424c33b8>](read_page_ecc+0x108/0x574)
| [<424c33b8>] (read_page_ecc) from [<424b8b3c>](nand_read_oob+0x3cc/0x640)
| [<424b8b3c>] (nand_read_oob) from [<424a3bc4>](part_read_oob+0x34/0x6c)
| [<424a3bc4>] (part_read_oob) from [<424a1624>](mtd_read_oob+0x6c/0xd4)
| [<424a1624>] (mtd_read_oob) from [<424a16e8>](mtd_read+0x5c/0x84)
| [<424a16e8>] (mtd_read) from [<424d3be4>](ubi_io_read+0x17c/0x34c)
| [<424d3be4>] (ubi_io_read) from [<424d1cb4>](ubi_eba_read_leb+0x320/0x458)
| [<424d1cb4>] (ubi_eba_read_leb) from [<424d04dc>](ubi_leb_read+0xb4/0x104)
| [<424d04dc>] (ubi_leb_read) from [<4231bbe8>](ubifs_leb_read+0x28/0x70)
| [<4231bbe8>] (ubifs_leb_read) from [<4231d704>](ubifs_read_node+0x130/0x264)
| [<4231d704>] (ubifs_read_node) from [<42339ab4>](ubifs_load_znode+0x8c/0x428)
| [<42339ab4>] (ubifs_load_znode) from [<42320930>](ubifs_lookup_level0+0x14c/0x33c)
| [<42320930>] (ubifs_lookup_level0) from [<42322b5c>](ubifs_tnc_has_node+0x9c/0x200)
| [<42322b5c>] (ubifs_tnc_has_node) from [<423282a4>](ubifs_garbage_collect_leb+0x40c
  /0x728)
| [<423282a4>] (ubifs_garbage_collect_leb) from[<4232880c>] (ubifs_garbage_collect+0x24c/
  0x5a0)
| [<4232880c>] (ubifs_garbage_collect) from [<4232ae48>](ubifs_budget_space+0x5b8/0x7f0)
| [<4232ae48>] (ubifs_budget_space) from [<4231322c>](ubifs_write_begin+0x3b0/0x5bc)
| [<4231322c>] (ubifs_write_begin) from [<421e1fe8>](generic_perform_write+0xc0/0x1c4)
| [<421e1fe8>] (generic_perform_write) from [<421e2c68>](__generic_file_write_iter+
  0x144/0x19c)
| [<421e2c68>] (__generic_file_write_iter) from [<421e2dc0>] (generic_file_write_iter+0x100
  /0x17c)
| [<421e2dc0>] (generic_file_write_iter)  Md5sum Result
| qcom-nandc 79b0000.nand: failure to read page/oob
| ubi0 warning: ubi_io_read: error -110 while reading 188 bytes from PEB 301:4944,
  read only 0 bytes, retry
| UBIFS error (ubi0:3 pid 15510): ubifs_decompress: cannot decompress 3225 bytes, compressor
  lzo, error -22
| UBIFS error (ubi0:3 pid 15510): do_readpage: bad data node (block 152, inode 773)

This change will change GFP_NOWAIT flag to GFP_ATOMIC, inside bam_prep_slave_sg(),in
kzalloc(). with GFP_ATOMIC allocation will get succeed.A lower watermark is applied to
allow access to “atomic reserves”.

Change-Id: I19c7bbfb278501fb5ad2d6dbdb3e458cf822ef03
Signed-off-by: Manoharan Vijaya Raghavan <quic_mraghava@quicinc.com>
Signed-off-by: Md Sadre Alam <quic_mdalam@quicinc.com>
---
 drivers/dma/qcom/bam_dma.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/drivers/dma/qcom/bam_dma.c b/drivers/dma/qcom/bam_dma.c
index b0d4fc212444..0fb88f50f5c0 100644
--- a/drivers/dma/qcom/bam_dma.c
+++ b/drivers/dma/qcom/bam_dma.c
@@ -674,7 +674,7 @@ static struct dma_async_tx_descriptor *bam_prep_slave_sg(struct dma_chan *chan,
 
 	/* allocate enough room to accomodate the number of entries */
 	async_desc = kzalloc(struct_size(async_desc, desc, num_alloc),
-			     GFP_NOWAIT);
+			     GFP_ATOMIC);
 
 	if (!async_desc)
 		return NULL;
-- 
2.34.1

