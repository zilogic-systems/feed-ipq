From 1969c1a046d0c9be1602ba356dbdc9b3ff430b7b Mon Sep 17 00:00:00 2001
From: Swati Singh <quic_swasing@quicinc.com>
Date: Wed, 12 Jun 2024 12:32:34 +0530
Subject: [PATCH] [skbuff_recycle] Mapping dev_kfree api with skb recycler API.

Currently, the __kfree_skb gets called for freeing the skb memory which
will not put the SKB into recycler list.
Hence based on conditional check whether recycler is enabled, function calls dev_kfree_skb
api to return the skb back to recycler pool.

APIs: dev_consume_skb_any : gets called form wifi driver to deal with
skb memory.

1. dev_kfree_skb_any_reason:
   a. No memory will be consumed for recycler, if either it belongs to
      interrupt context or critical section.
   b. If the CONFIG_SKB_RECYCLER is not set, then free the
      memory using linux APIs.
   c. Else,
      i. __kfree_skb_reason: This API gets called to check the reason for freeing.
      ii. Raises warning if skb is not dropped yet and is attempted to drop.
      iii. If the reason is SKB_CONSUMED, then trace_consume_skb gets
           updated with reason.
      iv. If the reason is not SUCCESS but others, then denotes a packet
          drop and is monitored by trace_kfree_skb.
      v. In either case, memory will be consumed for recycler.

Change-Id: I3d0b2327f88ab27f299b93e251c53caebd0497de
Signed-off-by: Swati Singh <quic_swasing@quicinc.com>
---
 net/core/skbuff.c | 7 ++++++-
 1 file changed, 6 insertions(+), 1 deletion(-)

diff --git a/net/core/skbuff.c b/net/core/skbuff.c
index a925fb480d86..ff0df949eaba 100644
--- a/net/core/skbuff.c
+++ b/net/core/skbuff.c
@@ -1343,8 +1343,13 @@ bool __kfree_skb_reason(struct sk_buff *skb, enum skb_drop_reason reason)
 void __fix_address
 kfree_skb_reason(struct sk_buff *skb, enum skb_drop_reason reason)
 {
-	if (__kfree_skb_reason(skb, reason))
+	if (__kfree_skb_reason(skb, reason)) {
+#if defined(CONFIG_SKB_RECYCLER)
+		dev_kfree_skb(skb);
+#else
 		__kfree_skb(skb);
+#endif
+	}
 }
 EXPORT_SYMBOL(kfree_skb_reason);
 
-- 
2.34.1

