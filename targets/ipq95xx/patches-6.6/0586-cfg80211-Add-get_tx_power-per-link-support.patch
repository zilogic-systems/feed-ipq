From 8b1dba8b0ad077b75a83037acef60f63ce0e4438 Mon Sep 17 00:00:00 2001
From: Shwetha G K <quic_kshwetha@quicinc.com>
Date: Tue, 2 Jul 2024 18:09:34 +0530
Subject: [PATCH] cfg80211: Add get_tx_power per link support

Add changes to get the per link tx power

Change-Id: I78715028a93dabe6a48df40ce77e61fa8e7e5406
Signed-off-by: Shwetha G K <quic_kshwetha@quicinc.com>
---
 include/net/cfg80211.h     |  4 +++-
 net/wireless/nl80211.c     | 45 ++++++++++++++++++++++----------------
 net/wireless/rdev-ops.h    |  7 +++---
 net/wireless/trace.h       |  5 +++--
 net/wireless/wext-compat.c |  2 +-
 5 files changed, 37 insertions(+), 26 deletions(-)

diff --git a/include/net/cfg80211.h b/include/net/cfg80211.h
index d4214ea3d06c..c1e21dc3dcb0 100644
--- a/include/net/cfg80211.h
+++ b/include/net/cfg80211.h
@@ -4017,6 +4017,8 @@ struct mgmt_frame_regs {
 	u32 global_mcast_stypes, interface_mcast_stypes;
 };
 
+#define CFG80211_PER_LINK_TX_POWER 1
+
 /**
  * struct cfg80211_ops - backend description for wireless configuration
  *
@@ -4565,7 +4567,7 @@ struct cfg80211_ops {
 	int	(*set_tx_power)(struct wiphy *wiphy, struct wireless_dev *wdev,
 				enum nl80211_tx_power_setting type, int mbm);
 	int	(*get_tx_power)(struct wiphy *wiphy, struct wireless_dev *wdev,
-				int *dbm);
+				unsigned int link_id, int *dbm);
 
 	void	(*rfkill_poll)(struct wiphy *wiphy);
 
diff --git a/net/wireless/nl80211.c b/net/wireless/nl80211.c
index 8ecd617cc75c..922b6adcedd1 100644
--- a/net/wireless/nl80211.c
+++ b/net/wireless/nl80211.c
@@ -3852,25 +3852,6 @@ static int nl80211_send_iface(struct sk_buff *msg, u32 portid, u32 seq, int flag
 	    nla_put_u8(msg, NL80211_ATTR_4ADDR, wdev->use_4addr))
 		goto nla_put_failure;
 
-	if (rdev->ops->get_channel && !wdev->valid_links) {
-		struct cfg80211_chan_def chandef = {};
-		int ret;
-
-		ret = rdev_get_channel(rdev, wdev, 0, &chandef);
-		if (ret == 0 && nl80211_send_chandef(msg, &chandef))
-			goto nla_put_failure;
-	}
-
-	if (rdev->ops->get_tx_power) {
-		int dbm, ret;
-
-		ret = rdev_get_tx_power(rdev, wdev, &dbm);
-		if (ret == 0 &&
-		    nla_put_u32(msg, NL80211_ATTR_WIPHY_TX_POWER_LEVEL,
-				DBM_TO_MBM(dbm)))
-			goto nla_put_failure;
-	}
-
 	wdev_lock(wdev);
 	switch (wdev->iftype) {
 	case NL80211_IFTYPE_AP:
@@ -3935,10 +3916,36 @@ static int nl80211_send_iface(struct sk_buff *msg, u32 portid, u32 seq, int flag
 			if (ret == 0 && nl80211_send_chandef(msg, &chandef))
 				goto nla_put_failure;
 
+			if (rdev->ops->get_tx_power) {
+				int dbm, ret;
+				ret = rdev_get_tx_power(rdev, wdev, link_id, &dbm);
+				if (ret == 0 &&
+				    nla_put_u32(msg, NL80211_ATTR_WIPHY_TX_POWER_LEVEL,
+				    DBM_TO_MBM(dbm)))
+					goto nla_put_failure;
+			}
 			nla_nest_end(msg, link);
 		}
 
 		nla_nest_end(msg, links);
+	} else {
+		if (rdev->ops->get_channel) {
+			struct cfg80211_chan_def chandef = {};
+			int ret;
+
+			ret = rdev_get_channel(rdev, wdev, 0, &chandef);
+			if (ret == 0 && nl80211_send_chandef(msg, &chandef))
+				goto nla_put_failure;
+		}
+
+		if (rdev->ops->get_tx_power) {
+			int dbm, ret;
+			ret = rdev_get_tx_power(rdev, wdev, 0, &dbm);
+			if (ret == 0 &&
+			    nla_put_u32(msg, NL80211_ATTR_WIPHY_TX_POWER_LEVEL,
+			    DBM_TO_MBM(dbm)))
+				goto nla_put_failure;
+		}
 	}
 
 	genlmsg_end(msg, hdr);
diff --git a/net/wireless/rdev-ops.h b/net/wireless/rdev-ops.h
index 90bb7ac4b930..e6c4128c89fd 100644
--- a/net/wireless/rdev-ops.h
+++ b/net/wireless/rdev-ops.h
@@ -597,11 +597,12 @@ static inline int rdev_set_tx_power(struct cfg80211_registered_device *rdev,
 }
 
 static inline int rdev_get_tx_power(struct cfg80211_registered_device *rdev,
-				    struct wireless_dev *wdev, int *dbm)
+				    struct wireless_dev *wdev,
+				    unsigned int link_id, int *dbm)
 {
 	int ret;
-	trace_rdev_get_tx_power(&rdev->wiphy, wdev);
-	ret = rdev->ops->get_tx_power(&rdev->wiphy, wdev, dbm);
+	trace_rdev_get_tx_power(&rdev->wiphy, wdev, link_id);
+	ret = rdev->ops->get_tx_power(&rdev->wiphy, wdev, link_id, dbm);
 	trace_rdev_return_int_int(&rdev->wiphy, ret, *dbm);
 	return ret;
 }
diff --git a/net/wireless/trace.h b/net/wireless/trace.h
index 617c0d0dfa96..118feed517c4 100644
--- a/net/wireless/trace.h
+++ b/net/wireless/trace.h
@@ -1591,8 +1591,9 @@ TRACE_EVENT(rdev_set_wiphy_params,
 );
 
 DEFINE_EVENT(wiphy_wdev_evt, rdev_get_tx_power,
-	TP_PROTO(struct wiphy *wiphy, struct wireless_dev *wdev),
-	TP_ARGS(wiphy, wdev)
+	TP_PROTO(struct wiphy *wiphy, struct wireless_dev *wdev,
+		 unsigned int link_id),
+	TP_ARGS(wiphy, wdev, link_id)
 );
 
 TRACE_EVENT(rdev_set_tx_power,
diff --git a/net/wireless/wext-compat.c b/net/wireless/wext-compat.c
index e3acfac7430a..6fa5fa1924f2 100644
--- a/net/wireless/wext-compat.c
+++ b/net/wireless/wext-compat.c
@@ -996,7 +996,7 @@ static int cfg80211_wext_giwtxpower(struct net_device *dev,
 		return -EOPNOTSUPP;
 
 	wiphy_lock(&rdev->wiphy);
-	err = rdev_get_tx_power(rdev, wdev, &val);
+	err = rdev_get_tx_power(rdev, wdev, 0, &val);
 	wiphy_unlock(&rdev->wiphy);
 	if (err)
 		return err;
-- 
2.34.1

