From 36236b9f073f5f1344db75bd6579f6e5a610a0d4 Mon Sep 17 00:00:00 2001
From: Amit Gupta <quic_amitgupt@quicinc.com>
Date: Thu, 7 Mar 2024 19:22:53 +0530
Subject: [PATCH] [net] [bridge] OMCI support in Linux bridge with dst check

- Enable support for bridge inside bridge, which
allow flooding only with in sub-bridges.
- Introduce a notion of upstream port. For upstream
port, the sub-bridge restriction does not apply.

Change-Id: Idf0f9d7c4409db5c0f8eeb6b07f55a1c5a541c39
Signed-off-by: Amit Gupta <quic_amitgupt@quicinc.com>
---
 include/linux/if_bridge.h |  1 +
 net/bridge/br_forward.c   |  8 ++++++++
 net/bridge/br_if.c        | 11 +++++++++++
 net/bridge/br_input.c     |  8 ++++++++
 net/bridge/br_private.h   |  2 ++
 net/bridge/br_sysfs_if.c  | 11 +++++++++++
 6 files changed, 41 insertions(+)

diff --git a/include/linux/if_bridge.h b/include/linux/if_bridge.h
index 29b503bbb889..4798e10f0d5c 100644
--- a/include/linux/if_bridge.h
+++ b/include/linux/if_bridge.h
@@ -62,6 +62,7 @@ struct br_ip_list {
 #define BR_PORT_MAB		BIT(22)
 #define BR_NEIGH_VLAN_SUPPRESS	BIT(23)
 #define BR_BPDU_FILTER		BIT(24)
+#define BR_UPSTREAM_PORT	BIT(25)
 
 #define BR_DEFAULT_AGEING_TIME	(300 * HZ)
 
diff --git a/net/bridge/br_forward.c b/net/bridge/br_forward.c
index 6fd7652aad87..5cf26e9f69cc 100644
--- a/net/bridge/br_forward.c
+++ b/net/bridge/br_forward.c
@@ -203,6 +203,7 @@ void br_flood(struct net_bridge *br, struct sk_buff *skb,
 	      u16 vid)
 {
 	const unsigned char *dest = eth_hdr(skb)->h_dest;
+	struct net_bridge_port *srcp = br_port_get_rcu(skb->dev);
 	struct net_bridge_port *prev = NULL;
 	struct net_bridge_port *p;
 
@@ -239,6 +240,13 @@ void br_flood(struct net_bridge *br, struct sk_buff *skb,
 		     br_is_neigh_suppress_enabled(p, vid)))
 			continue;
 
+		/* Do not flood to non-upstream port and to ports in different sub bridge */
+		if (srcp &&
+			!((p->flags & BR_UPSTREAM_PORT) || (srcp->flags & BR_UPSTREAM_PORT))
+			&& (p->sub_br_id != srcp->sub_br_id))
+			continue;
+
+
 		prev = maybe_deliver(prev, p, skb, local_orig);
 		if (IS_ERR(prev))
 			goto out;
diff --git a/net/bridge/br_if.c b/net/bridge/br_if.c
index 207e58a15037..96a51ab857ad 100644
--- a/net/bridge/br_if.c
+++ b/net/bridge/br_if.c
@@ -884,3 +884,14 @@ bool br_is_hairpin_enabled(struct net_device *dev)
 	return false;
 }
 EXPORT_SYMBOL_GPL(br_is_hairpin_enabled);
+
+/*
+ * Set sub bridge ID on a bridge port
+ */
+int br_port_set_sub_br_id(struct net_bridge_port *p, unsigned long new_sub_br_id)
+{
+	pr_info("Set sub br id old: %d, new: %d\n", p->sub_br_id, new_sub_br_id);
+
+	p->sub_br_id = new_sub_br_id;
+	return 0;
+}
diff --git a/net/bridge/br_input.c b/net/bridge/br_input.c
index 93c2ed33a1c9..5f2a9f0fe8a5 100644
--- a/net/bridge/br_input.c
+++ b/net/bridge/br_input.c
@@ -210,8 +210,16 @@ int br_handle_frame_finish(struct net *net, struct sock *sk, struct sk_buff *skb
 		if (pdst) {
 			if (!skb)
 				goto out;
+			/* TODO: Check if sub bridge concept apply to hyfi */
 		} else {
 			dst = br_fdb_find_rcu(br, eth_hdr(skb)->h_dest, vid);
+
+			/* Restrict forwarding to/from upstream port & within same sub bridge */
+			if (dst && dst->dst &&
+				!((p->flags & BR_UPSTREAM_PORT) || (dst->dst->flags & BR_UPSTREAM_PORT))
+				&& (p->sub_br_id != dst->dst->sub_br_id))
+				dst = NULL;
+
 		}
 		break;
 	default:
diff --git a/net/bridge/br_private.h b/net/bridge/br_private.h
index 946affdea00e..6132dfaf0a27 100644
--- a/net/bridge/br_private.h
+++ b/net/bridge/br_private.h
@@ -392,6 +392,7 @@ struct net_bridge_port {
 	u32				backup_nhid;
 
 	/* STP */
+	u8				sub_br_id;
 	u8				priority;
 	u8				state;
 	u16				port_no;
@@ -906,6 +907,7 @@ netdev_features_t br_features_recompute(struct net_bridge *br,
 void br_port_flags_change(struct net_bridge_port *port, unsigned long mask);
 void br_manage_promisc(struct net_bridge *br);
 int nbp_backup_change(struct net_bridge_port *p, struct net_device *backup_dev);
+int br_port_set_sub_br_id(struct net_bridge_port *p, unsigned long new_sub_br_id);
 
 /* br_input.c */
 int br_pass_frame_up(struct sk_buff *skb);
diff --git a/net/bridge/br_sysfs_if.c b/net/bridge/br_sysfs_if.c
index aee7c5902206..22e7d5fd20f4 100644
--- a/net/bridge/br_sysfs_if.c
+++ b/net/bridge/br_sysfs_if.c
@@ -229,6 +229,15 @@ static int store_backup_port(struct net_bridge_port *p, char *buf)
 }
 static BRPORT_ATTR_RAW(backup_port, 0644, show_backup_port, store_backup_port);
 
+static ssize_t show_sub_br_id(struct net_bridge_port *p, char *buf)
+{
+	return snprintf(buf, sizeof(u16), "%d\n", p->sub_br_id);
+}
+
+static BRPORT_ATTR(sub_br_id, 0644,
+		show_sub_br_id, br_port_set_sub_br_id);
+
+BRPORT_ATTR_FLAG(upstream_port, BR_UPSTREAM_PORT);
 BRPORT_ATTR_FLAG(hairpin_mode, BR_HAIRPIN_MODE);
 BRPORT_ATTR_FLAG(bpdu_guard, BR_BPDU_GUARD);
 BRPORT_ATTR_FLAG(root_block, BR_ROOT_BLOCK);
@@ -295,6 +304,8 @@ static const struct brport_attribute *brport_attrs[] = {
 	&brport_attr_isolated,
 	&brport_attr_bpdu_filter,
 	&brport_attr_backup_port,
+	&brport_attr_sub_br_id,
+	&brport_attr_upstream_port,
 	NULL
 };
 
-- 
2.34.1

