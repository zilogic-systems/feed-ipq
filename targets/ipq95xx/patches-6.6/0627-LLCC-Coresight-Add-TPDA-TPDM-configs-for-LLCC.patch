From 9aed3a0457eab3d445d91eee34b176654a00bbc5 Mon Sep 17 00:00:00 2001
From: Adarsh Anand <quic_adaana@quicinc.com>
Date: Tue, 11 Jun 2024 11:43:58 +0530
Subject: [PATCH] LLCC: Coresight: Add TPDA & TPDM configs for LLCC.

LLCC perfmon ATB is sent over TPDM which is connected to
port 11 of TPDA, which further connects to funnels.
Enable TPDA & TPDM for LLCC perfmon QDSS streaming.

Change-Id: I08110033d9b1de7c9822599cff9d2fdfd97da311
Signed-off-by: Adarsh Anand <quic_adaana@quicinc.com>
Signed-off-by: Manoharan Vijaya Raghavan <quic_mraghava@quicinc.com>
---
 drivers/hwtracing/coresight/coresight-tpda.c | 20 +++++++++++---
 drivers/hwtracing/coresight/coresight-tpda.h |  3 +++
 drivers/hwtracing/coresight/coresight-tpdm.c | 28 ++++++++++++++++----
 drivers/hwtracing/coresight/coresight-tpdm.h |  6 +++++
 4 files changed, 49 insertions(+), 8 deletions(-)

diff --git a/drivers/hwtracing/coresight/coresight-tpda.c b/drivers/hwtracing/coresight/coresight-tpda.c
index 8d2b9d29237d..a54c7c6b1537 100644
--- a/drivers/hwtracing/coresight/coresight-tpda.c
+++ b/drivers/hwtracing/coresight/coresight-tpda.c
@@ -27,8 +27,10 @@ static void tpda_enable_pre_port(struct tpda_drvdata *drvdata)
 	u32 val;
 
 	val = readl_relaxed(drvdata->base + TPDA_CR);
-	val &= ~TPDA_CR_ATID;
+	val &= ~(TPDA_CR_ATID | TPDA_CR_MID);
 	val |= FIELD_PREP(TPDA_CR_ATID, drvdata->atid);
+	val |= FIELD_PREP(TPDA_CR_MID, 4);
+	val |= BIT(1) | BIT(2); //FREQREQ, FREQTS
 	writel_relaxed(val, drvdata->base + TPDA_CR);
 }
 
@@ -36,9 +38,19 @@ static void tpda_enable_port(struct tpda_drvdata *drvdata, int port)
 {
 	u32 val;
 
+	val = readl_relaxed(drvdata->base + TPDA_FPID_CR);
+	val = 0x0;
+	writel_relaxed(val, drvdata->base + TPDA_FPID_CR);
+
+	val = readl_relaxed(drvdata->base + TPDA_SYNCR);
+	val = 0xFFF;
+	writel_relaxed(val, drvdata->base + TPDA_SYNCR);
+
 	val = readl_relaxed(drvdata->base + TPDA_Pn_CR(port));
 	/* Enable the port */
 	val |= TPDA_Pn_CR_ENA;
+	val |= (1 << 6); //CMBESIZE
+	val |= (2 << 9); //IMPLDEFSIZE
 	writel_relaxed(val, drvdata->base + TPDA_Pn_CR(port));
 }
 
@@ -46,11 +58,11 @@ static void __tpda_enable(struct tpda_drvdata *drvdata, int port)
 {
 	CS_UNLOCK(drvdata->base);
 
+	tpda_enable_port(drvdata, port);
+
 	if (!drvdata->csdev->enable)
 		tpda_enable_pre_port(drvdata);
 
-	tpda_enable_port(drvdata, port);
-
 	CS_LOCK(drvdata->base);
 }
 
@@ -123,11 +135,13 @@ static int tpda_init_default_data(struct tpda_drvdata *drvdata)
 		return atid;
 
 	drvdata->atid = atid;
+	drvdata->atid = 32;
 	return 0;
 }
 
 static int tpda_probe(struct amba_device *adev, const struct amba_id *id)
 {
+	
 	int ret;
 	struct device *dev = &adev->dev;
 	struct coresight_platform_data *pdata;
diff --git a/drivers/hwtracing/coresight/coresight-tpda.h b/drivers/hwtracing/coresight/coresight-tpda.h
index 0399678df312..0399e1140d4b 100644
--- a/drivers/hwtracing/coresight/coresight-tpda.h
+++ b/drivers/hwtracing/coresight/coresight-tpda.h
@@ -15,7 +15,10 @@
 
 /* Bits 6 ~ 12 is for atid value */
 #define TPDA_CR_ATID		GENMASK(12, 6)
+#define TPDA_CR_MID		GENMASK(19, 13)
 
+#define TPDA_SYNCR		(0x08C)
+#define TPDA_FPID_CR		(0x08C)
 /**
  * struct tpda_drvdata - specifics associated to an TPDA component
  * @base:       memory mapped base address for this component.
diff --git a/drivers/hwtracing/coresight/coresight-tpdm.c b/drivers/hwtracing/coresight/coresight-tpdm.c
index f4854af0431e..07ddef973334 100644
--- a/drivers/hwtracing/coresight/coresight-tpdm.c
+++ b/drivers/hwtracing/coresight/coresight-tpdm.c
@@ -30,6 +30,17 @@ static void tpdm_enable_dsb(struct tpdm_drvdata *drvdata)
 	writel_relaxed(val, drvdata->base + TPDM_DSB_CR);
 }
 
+static void tpdm_enable_cmb(struct tpdm_drvdata *drvdata)
+{
+	u32 val;
+
+	/* Set the enable bit of DSB control register to 1 */
+	val = readl_relaxed(drvdata->base + TPDM_CMB_CR);
+	val |= TPDM_CMB_CR_ENA | TPDM_CMB_FC_ENA;
+	writel_relaxed(val, drvdata->base + TPDM_CMB_CR);
+}
+
+
 /* TPDM enable operations */
 static void __tpdm_enable(struct tpdm_drvdata *drvdata)
 {
@@ -39,6 +50,9 @@ static void __tpdm_enable(struct tpdm_drvdata *drvdata)
 	if (drvdata->datasets & TPDM_PIDR0_DS_DSB)
 		tpdm_enable_dsb(drvdata);
 
+	/* Check if CMB datasets is present for TPDM. */
+	if (drvdata->datasets & TPDM_PIDR0_DS_CMB)
+		tpdm_enable_cmb(drvdata);
 	CS_LOCK(drvdata->base);
 }
 
@@ -219,7 +233,6 @@ static int tpdm_probe(struct amba_device *adev, const struct amba_id *id)
 	tpdm_init_default_data(drvdata);
 	/* Decrease pm refcount when probe is done.*/
 	pm_runtime_put(&adev->dev);
-
 	return 0;
 }
 
@@ -235,10 +248,15 @@ static void tpdm_remove(struct amba_device *adev)
  * The difference is 0-7 bits' value. So ignore 0-7 bits.
  */
 static struct amba_id tpdm_ids[] = {
-	{
-		.id = 0x000f0e00,
-		.mask = 0x000fff00,
-	},
+        {
+              .id = 0x000f0e00,
+              .mask = 0x000fff00,
+        },	
+        {
+               .id=0x1f0e04,
+               .mask=0x000fffff,
+        },
+
 	{ 0, 0},
 };
 
diff --git a/drivers/hwtracing/coresight/coresight-tpdm.h b/drivers/hwtracing/coresight/coresight-tpdm.h
index 543854043a2d..10a464196c6d 100644
--- a/drivers/hwtracing/coresight/coresight-tpdm.h
+++ b/drivers/hwtracing/coresight/coresight-tpdm.h
@@ -9,10 +9,15 @@
 /* The max number of the datasets that TPDM supports */
 #define TPDM_DATASETS       7
 
+#define TPDM_CMB_CR		(0xA00)
 /* DSB Subunit Registers */
 #define TPDM_DSB_CR		(0x780)
 /* Enable bit for DSB subunit */
 #define TPDM_DSB_CR_ENA		BIT(0)
+/* Enable bit for CMB subunit */
+#define TPDM_CMB_CR_ENA		BIT(0)
+/* Enable bit for CMB flowcontrol */
+#define TPDM_CMB_FC_ENA		BIT(2)
 
 /* TPDM integration test registers */
 #define TPDM_ITATBCNTRL		(0xEF0)
@@ -39,6 +44,7 @@
 
 #define TPDM_PIDR0_DS_IMPDEF	BIT(0)
 #define TPDM_PIDR0_DS_DSB	BIT(1)
+#define TPDM_PIDR0_DS_CMB	BIT(2)
 
 /**
  * struct tpdm_drvdata - specifics associated to an TPDM component
-- 
2.34.1

