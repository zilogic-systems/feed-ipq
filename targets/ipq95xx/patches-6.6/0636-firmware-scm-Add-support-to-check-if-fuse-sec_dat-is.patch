From 2dfc543c2c609ab03be080d834c6e95fbdc417df Mon Sep 17 00:00:00 2001
From: Poovendhan Selvaraj <quic_poovendh@quicinc.com>
Date: Tue, 27 Aug 2024 20:11:25 +0530
Subject: [PATCH] firmware: scm: Add support to check if fuse sec_dat is
 enabled

Add an interface to check if fuse sec_dat is enabled.
if its enabled fallback to old method by passing sec.dat file to TZ else
pass sec.elf file to TZ using sec auth scm call.

Change-Id: Ifc29c056cd4392dd61cfc95a7b6f6940a39920cd
Signed-off-by: Poovendhan Selvaraj <quic_poovendh@quicinc.com>
---
 drivers/firmware/qcom_scm.c            | 13 +++++++++++++
 include/linux/firmware/qcom/qcom_scm.h |  3 ++-
 2 files changed, 15 insertions(+), 1 deletion(-)

diff --git a/drivers/firmware/qcom_scm.c b/drivers/firmware/qcom_scm.c
index 2ae036c9c041..3e9209fb1964 100644
--- a/drivers/firmware/qcom_scm.c
+++ b/drivers/firmware/qcom_scm.c
@@ -1452,6 +1452,19 @@ bool qcom_qfprom_show_auth_available(void)
 }
 EXPORT_SYMBOL_GPL(qcom_qfprom_show_auth_available);
 
+/**
+ * qcom_sec_dat_fuse_available() - Check if the SCM call to verify
+ *				   fuse sec_dat support is available
+ *
+ * Return: true if the SCM call is supported
+ */
+bool qcom_sec_dat_fuse_available(void)
+{
+	return __qcom_scm_is_call_available(__scm->dev, QCOM_SCM_SVC_FUSE,
+					    TZ_BLOW_FUSE_SECDAT);
+}
+EXPORT_SYMBOL_GPL(qcom_sec_dat_fuse_available);
+
 /**
  * qcom_scm_ice_invalidate_key() - Invalidate an inline encryption key
  * @index: the keyslot to invalidate
diff --git a/include/linux/firmware/qcom/qcom_scm.h b/include/linux/firmware/qcom/qcom_scm.h
index 03dca08142a5..c727e0bd572d 100644
--- a/include/linux/firmware/qcom/qcom_scm.h
+++ b/include/linux/firmware/qcom/qcom_scm.h
@@ -161,7 +161,7 @@ struct qcom_scm_vmperm {
 struct fuse_blow {
 	dma_addr_t address;
 	size_t size;
-	unsigned long *status;
+	u64 *status;
 };
 
 enum qcom_scm_ocmem_client {
@@ -293,6 +293,7 @@ extern int qcom_scm_ocmem_unlock(enum qcom_scm_ocmem_client id, u32 offset,
 extern bool qcom_scm_ice_available(void);
 extern bool qcom_scm_ice_hwkey_available(void);
 extern bool qcom_qfprom_show_auth_available(void);
+extern bool qcom_sec_dat_fuse_available(void);
 extern int qcom_scm_ice_invalidate_key(u32 index);
 extern int qcom_config_sec_ice(void *buf, int size);
 extern int qcom_scm_ice_set_key(u32 index, const u8 *key, u32 key_size,
-- 
2.34.1

