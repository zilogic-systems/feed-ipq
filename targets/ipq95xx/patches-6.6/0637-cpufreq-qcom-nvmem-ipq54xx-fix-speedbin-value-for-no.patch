From e18cd8cbe1d259aba1bd62d0c039faaf01d2fe7d Mon Sep 17 00:00:00 2001
From: Manikanta Mylavarapu <quic_mmanikan@quicinc.com>
Date: Mon, 2 Sep 2024 16:10:02 +0530
Subject: [PATCH] cpufreq: qcom-nvmem: ipq54xx: fix speedbin value for
 non-fused parts

Instead of hardcoding max supported frequency, traverse DTS opp table
and get the max supported frequency. Hardcoding a value is not scalable
for n no of frequencies, hence change the logic to get max frequency
dynamically.

Change-Id: I5759d9e32597a063586faeb79ba628c1b7d17234
Signed-off-by: Manikanta Mylavarapu <quic_mmanikan@quicinc.com>
---
 drivers/cpufreq/qcom-cpufreq-nvmem.c | 34 +++++++++++++++++++++++-----
 1 file changed, 28 insertions(+), 6 deletions(-)

diff --git a/drivers/cpufreq/qcom-cpufreq-nvmem.c b/drivers/cpufreq/qcom-cpufreq-nvmem.c
index a8a6ce33f2d1..f39062b69ff6 100644
--- a/drivers/cpufreq/qcom-cpufreq-nvmem.c
+++ b/drivers/cpufreq/qcom-cpufreq-nvmem.c
@@ -30,9 +30,6 @@
 
 #include <dt-bindings/arm/qcom,ids.h>
 
-#define IPQ5424_BLNK_PART	0xFF
-#define IPQ5424_TURBO_FREQ_LVAL	0x4B
-
 struct qcom_cpufreq_drv;
 
 struct qcom_cpufreq_match_data {
@@ -129,6 +126,28 @@ static void get_krait_bin_format_b(struct device *cpu_dev,
 	dev_dbg(cpu_dev, "PVS version: %d\n", *pvs_ver);
 }
 
+static int get_max_opp_supported_hw_val(struct device *cpu_dev, u32 *value)
+{
+	struct device_node *opp_tbl_np, *np;
+	u32 temp, hw_val = 0;
+	int ret;
+
+	opp_tbl_np = dev_pm_opp_of_get_opp_desc_node(cpu_dev);
+	if (!opp_tbl_np)
+		return -ENOENT;
+
+	for_each_available_child_of_node(opp_tbl_np, np) {
+		ret = of_property_read_u32_index(np, "opp-supported-hw", 0, &temp);
+		if (ret) {
+			pr_err("Failed to read opp-supported-hw value ret:%d\n", ret);
+			return ret;
+		}
+		hw_val = max(hw_val, temp);
+	}
+	*value = hw_val;
+	return 0;
+}
+
 static int qcom_cpufreq_kryo_name_version(struct device *cpu_dev,
 					  struct nvmem_cell *speedbin_nvmem,
 					  char **pvs_name,
@@ -167,9 +186,12 @@ static int qcom_cpufreq_kryo_name_version(struct device *cpu_dev,
 	case QCOM_ID_IPQ5424:
 	case QCOM_ID_IPQ5404:
 		drv->versions = (unsigned int)(*speedbin);
-		/* Configure blank parts with turbo frequency */
-		if (drv->versions == IPQ5424_BLNK_PART)
-			drv->versions = IPQ5424_TURBO_FREQ_LVAL;
+		/* Configure non-fused parts with maximum supported frequency */
+		if (drv->versions == 0xFF) {
+			ret = get_max_opp_supported_hw_val(cpu_dev, &drv->versions);
+			if (ret)
+				return ret;
+		}
 		break;
 	case QCOM_ID_MSM8996SG:
 	case QCOM_ID_APQ8096SG:
-- 
2.34.1

