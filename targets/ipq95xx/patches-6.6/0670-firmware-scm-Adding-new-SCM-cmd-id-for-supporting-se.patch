From 087393368944454ec6960f89ce517de2147138e5 Mon Sep 17 00:00:00 2001
From: Hariharan K <quic_harihk@quicinc.com>
Date: Wed, 25 Sep 2024 14:39:09 +0530
Subject: [PATCH] firmware: scm: Adding new SCM cmd id for supporting sec.dat
 ELF

Added a new SCM cmd id QCOM_AUTH_FUSE_UIE_KEY_CMD to support
ELF format of sec.dat for blowing fuses in IPQ95xx/IPQ53xx
targets.

Also added a new scm is_call_available() support to check if
sec.dat ELF authentication is supported by TZ for IPQ54xx target.

Change-Id: I75bbdc8977f5e8d05092e8bcff37b6782606dee6
Signed-off-by: Hariharan K <quic_harihk@quicinc.com>
---
 drivers/firmware/qcom_scm.c            | 11 +++++++++--
 include/linux/firmware/qcom/qcom_scm.h |  4 +++-
 2 files changed, 12 insertions(+), 3 deletions(-)

diff --git a/drivers/firmware/qcom_scm.c b/drivers/firmware/qcom_scm.c
index bebe332b50e5..8515654b67d0 100644
--- a/drivers/firmware/qcom_scm.c
+++ b/drivers/firmware/qcom_scm.c
@@ -1458,13 +1458,20 @@ EXPORT_SYMBOL_GPL(qcom_qfprom_show_auth_available);
  *
  * Return: true if the SCM call is supported
  */
-bool qcom_sec_dat_fuse_available(void)
+bool qcom_sec_dat_fuse_available(u32 cmd_id)
 {
 	return __qcom_scm_is_call_available(__scm->dev, QCOM_SCM_SVC_FUSE,
-					    TZ_BLOW_FUSE_SECDAT);
+					    cmd_id);
 }
 EXPORT_SYMBOL_GPL(qcom_sec_dat_fuse_available);
 
+bool qcom_sec_upgrade_auth_ld_segments_available(u32 cmd_id)
+{
+	return __qcom_scm_is_call_available(__scm->dev, QCOM_SCM_SVC_BOOT,
+					    cmd_id);
+}
+EXPORT_SYMBOL_GPL(qcom_sec_upgrade_auth_ld_segments_available);
+
 /**
  * qcom_qfrom_fuse_row_write_available() - is the fuse row write interface
  *                                         available ?
diff --git a/include/linux/firmware/qcom/qcom_scm.h b/include/linux/firmware/qcom/qcom_scm.h
index 6e422f331386..676df7da1d6f 100644
--- a/include/linux/firmware/qcom/qcom_scm.h
+++ b/include/linux/firmware/qcom/qcom_scm.h
@@ -206,6 +206,7 @@ enum qcom_scm_ice_cipher {
 #define FUSEPROV_SECDAT_LOCK_BLOWN 0xB
 #define QCOM_KERNEL_AUTH_CMD       0x15
 #define TZ_BLOW_FUSE_SECDAT        0x20
+#define QCOM_AUTH_FUSE_UIE_KEY_CMD 0x23
 #define QCOM_KERNEL_META_AUTH_CMD  0x23
 
 #define QTI_OWNER_QSEE_OS		50
@@ -293,7 +294,8 @@ extern int qcom_scm_ocmem_unlock(enum qcom_scm_ocmem_client id, u32 offset,
 extern bool qcom_scm_ice_available(void);
 extern bool qcom_scm_ice_hwkey_available(void);
 extern bool qcom_qfprom_show_auth_available(void);
-extern bool qcom_sec_dat_fuse_available(void);
+extern bool qcom_sec_dat_fuse_available(u32 cmd_id);
+extern bool qcom_sec_upgrade_auth_ld_segments_available(u32 cmd_id);
 extern bool qcom_qfrom_fuse_row_write_available(void);
 extern bool qcom_qfrom_fuse_row_read_available(void);
 extern int qcom_scm_ice_invalidate_key(u32 index);
-- 
2.34.1

