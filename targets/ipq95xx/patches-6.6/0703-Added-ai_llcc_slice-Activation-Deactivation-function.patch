From bfaa04cda387c8353e94532db97879fe4dda3523 Mon Sep 17 00:00:00 2001
From: Adarsh Anand <quic_adaana@quicinc.com>
Date: Tue, 29 Oct 2024 10:26:09 +0530
Subject: [PATCH] Added ai_llcc_slice Activation/Deactivation functionalities

Change-Id: Id9ce5af0d106e9f5de3464bfe09bb01b83a1e021
Signed-off-by: Adarsh Anand <quic_adaana@quicinc.com>
---
 drivers/soc/qcom/llcc-qcom.c       | 53 +++++++++++++++++++++++++++++-
 include/linux/soc/qcom/llcc-qcom.h |  1 +
 2 files changed, 53 insertions(+), 1 deletion(-)

diff --git a/drivers/soc/qcom/llcc-qcom.c b/drivers/soc/qcom/llcc-qcom.c
index d71624459604..61e3fa3c6991 100644
--- a/drivers/soc/qcom/llcc-qcom.c
+++ b/drivers/soc/qcom/llcc-qcom.c
@@ -362,6 +362,8 @@ static const struct llcc_slice_config ipq5424_data[] =  {
 	{LLCC_RXDESC,     1,   128, 3, 0,  0x0FFF, 0x0,  0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, },
 	/* SCID 2 - SKB, SKB data (APSS Core 0,1,2) */
 	{LLCC_APSS,       2,   768, 1, 1,  0x0FFF, 0x0,  0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, },
+	/* SCID 3 - LLC_AI */
+	{LLCC_AI,         3,   128, 3, 1,  0x0FFF, 0x0,  0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, },
 	/* SCID 5 - RXFILL, TXDESC descriptors (PPE) */
 	{LLCC_RXFILL,     5,   128, 3, 0,  0x0FFF, 0x0,  0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, },
 	{LLCC_PCIE5G,     6,   128, 3, 0,  0xC000, 0x0,  0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, },
@@ -540,7 +542,8 @@ static const struct qcom_llcc_config ipq5424_cfg = {
 };
 
 static struct llcc_drv_data *drv_data = (void *) -EPROBE_DEFER;
-
+/* AI_LLC_SLICE */
+static struct llcc_slice_desc *ai_llc_slice_desc;
 /**
  * llcc_slice_getd - get llcc slice descriptor
  * @uid: usecase_id for the client
@@ -926,6 +929,24 @@ static int qcom_llcc_cfg_program(struct platform_device *pdev,
 	return ret;
 }
 
+/*  Activate, Deactivate, Destroy Function for LLCC_AI */
+static int activate_function(void)
+{
+	int ret;
+
+	if (IS_ERR_OR_NULL(ai_llc_slice_desc)) {
+		pr_info("ai_llc_slice didn't get initialized");
+		return -1;
+	}
+
+	return llcc_slice_activate(ai_llc_slice_desc);
+}
+
+static int deactivate_function(void)
+{
+	return llcc_slice_deactivate(ai_llc_slice_desc);
+}
+
 static int qcom_llcc_remove(struct platform_device *pdev)
 {
 	/* Set the global pointer to a error code to avoid referencing it */
@@ -959,6 +980,23 @@ static struct regmap *qcom_llcc_init_mmio(struct platform_device *pdev, u8 index
 	return devm_regmap_init_mmio(&pdev->dev, base, &llcc_regmap_config);
 }
 
+static ssize_t ai_llcc_slice_store(struct device *dev, struct device_attribute *attr, const char *buf, size_t count)
+{
+	unsigned long val;
+
+	if (kstrtoul(buf, 10, &val))
+		return -EINVAL;
+
+	if ((val == 1) && activate_function())
+		return -EIO;
+	else if ((val == 0) && deactivate_function())
+		return -EIO;
+
+	return count;
+}
+
+static DEVICE_ATTR_WO(ai_llcc_slice);
+
 static int qcom_llcc_probe(struct platform_device *pdev)
 {
 	u32 num_banks;
@@ -1076,6 +1114,19 @@ static int qcom_llcc_probe(struct platform_device *pdev)
 	if (of_platform_populate(dev->of_node, NULL, NULL, dev))
 		dev_err(dev, "llcc perfmon populate failed!!\n");
 
+	/* Sysfs creation */
+	ai_llc_slice_desc = llcc_slice_getd(LLCC_AI);
+	if (IS_ERR_OR_NULL(ai_llc_slice_desc)) {
+		pr_info("ai_llc_slice didn't get initialized");
+		return -EINVAL;
+	}
+	pr_info("ai_llc_slice_desc initialized");
+	ret = device_create_file(&pdev->dev, &dev_attr_ai_llcc_slice);
+	if (ret) {
+		dev_err(&pdev->dev, "Couldn't create sysfs for %s\n", pdev->name);
+		return -EIO;
+	}
+
 	return 0;
 err:
 	drv_data = ERR_PTR(-ENODEV);
diff --git a/include/linux/soc/qcom/llcc-qcom.h b/include/linux/soc/qcom/llcc-qcom.h
index 315d5b2b6e27..e32ac19c85c4 100644
--- a/include/linux/soc/qcom/llcc-qcom.h
+++ b/include/linux/soc/qcom/llcc-qcom.h
@@ -57,6 +57,7 @@
 #define LLCC_VIDVSP	 64
 #define LLCC_RXDESC 1
 #define LLCC_APSS   2
+#define LLCC_AI     3
 #define LLCC_RXFILL 5
 #define LLCC_PCIE5G 6
 #define LLCC_PCIE6G 7
-- 
2.34.1

