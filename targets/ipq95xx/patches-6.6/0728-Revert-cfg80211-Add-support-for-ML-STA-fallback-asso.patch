From 5d1c10192811f8c5a0ed90fd867da9ec31fb2ac7 Mon Sep 17 00:00:00 2001
From: Vaishnavi Chekuru <quic_vchekuru@quicinc.com>
Date: Wed, 13 Nov 2024 06:16:45 -0800
Subject: [PATCH] Revert "cfg80211: Add support for ML STA fallback
 association"

This reverts commit f8f9d9b2f3a6c6a40c82faa2ca082da1d6cb03c0.

Reason for revert: <causing regression>

Change-Id: I428130fb34aa697b044450b5343720e05dff3787
---
 include/net/cfg80211.h | 10 -------
 net/mac80211/cfg.c     |  1 -
 net/wireless/nl80211.c | 60 ++++++------------------------------------
 net/wireless/sme.c     | 21 ---------------
 net/wireless/util.c    |  4 ---
 5 files changed, 8 insertions(+), 88 deletions(-)

diff --git a/include/net/cfg80211.h b/include/net/cfg80211.h
index e2df81568df3..a638003e6ec3 100644
--- a/include/net/cfg80211.h
+++ b/include/net/cfg80211.h
@@ -6143,7 +6143,6 @@ struct wireless_dev {
 		};
 	} links[IEEE80211_MLD_MAX_NUM_LINKS];
 	u16 valid_links;
-	u16 fallback_valid_links;
 };
 
 static inline const u8 *wdev_address(struct wireless_dev *wdev)
@@ -6190,14 +6189,6 @@ static inline void WARN_INVALID_LINK_ID(struct wireless_dev *wdev,
 		!(wdev->valid_links & BIT(link_id)));
 }
 
-#define for_each_fallback_valid_link(link_info, link_id)		\
-	for ((link_id) = 0;						\
-	     (link_id) < ((link_info)->fallback_valid_links ?		\
-			ARRAY_SIZE((link_info)->links) : 1);		\
-	     (link_id)++)							\
-		if (!(link_info)->fallback_valid_links ||		\
-		    ((link_info)->fallback_valid_links & BIT(link_id)))
-
 #define for_each_valid_link(link_info, link_id)			\
 	for (link_id = 0;					\
 	     link_id < ((link_info)->valid_links ?		\
@@ -7847,7 +7838,6 @@ struct cfg80211_connect_resp_params {
 
 	const u8 *ap_mld_addr;
 	u16 valid_links;
-	u16 fallback_valid_links;
 	struct {
 		const u8 *addr;
 		const u8 *bssid;
diff --git a/net/mac80211/cfg.c b/net/mac80211/cfg.c
index aaf4ea05e57a..6830208876c7 100644
--- a/net/mac80211/cfg.c
+++ b/net/mac80211/cfg.c
@@ -4936,7 +4936,6 @@ static void ieee80211_del_intf_link(struct wiphy *wiphy,
 
 	mutex_lock(&sdata->local->mtx);
 	ieee80211_vif_set_links(sdata, wdev->valid_links, 0);
-	ieee80211_vif_set_links(sdata, wdev->fallback_valid_links, 0);
 	mutex_unlock(&sdata->local->mtx);
 }
 
diff --git a/net/wireless/nl80211.c b/net/wireless/nl80211.c
index 49fb78b286aa..2d4ec3d87d01 100644
--- a/net/wireless/nl80211.c
+++ b/net/wireless/nl80211.c
@@ -3931,41 +3931,6 @@ static int nl80211_send_iface(struct sk_buff *msg, u32 portid, u32 seq, int flag
 			nla_nest_end(msg, link);
 		}
 
-		nla_nest_end(msg, links);
-	} else if (wdev->fallback_valid_links) {
-		unsigned int link_id;
-		struct nlattr *links = nla_nest_start(msg,
-						      NL80211_ATTR_MLO_LINKS);
-
-		if (!links)
-			goto nla_put_failure;
-
-		for_each_fallback_valid_link(wdev, link_id) {
-			struct nlattr *link = nla_nest_start(msg, link_id + 1);
-			struct cfg80211_chan_def chandef = {};
-			int ret;
-
-			if (!link)
-				goto nla_put_failure;
-
-			if (nla_put_u8(msg, NL80211_ATTR_MLO_LINK_ID, link_id))
-				goto nla_put_failure;
-			ret = rdev_get_channel(rdev, wdev, link_id, &chandef);
-			if (ret == 0 && nl80211_send_chandef(msg, &chandef))
-				goto nla_put_failure;
-
-			if (rdev->ops->get_tx_power) {
-				int dbm, ret;
-
-				ret = rdev_get_tx_power(rdev, wdev, link_id, &dbm);
-				if (ret == 0 &&
-				    nla_put_u32(msg, NL80211_ATTR_WIPHY_TX_POWER_LEVEL,
-						DBM_TO_MBM(dbm)))
-					goto nla_put_failure;
-			}
-			nla_nest_end(msg, link);
-		}
-
 		nla_nest_end(msg, links);
 	} else {
 		if (rdev->ops->get_channel) {
@@ -16715,27 +16680,18 @@ static int nl80211_pre_doit(const struct genl_split_ops *ops,
 			goto out_unlock;
 		}
 
-		/* MLO fallback to DBDC association */
-		if (wdev->fallback_valid_links &&
+		/* MLO -> require valid link ID */
+		if (wdev->valid_links &&
 		    (!link_id ||
-		     !(wdev->fallback_valid_links & BIT(nla_get_u8(link_id))))) {
+		     !(wdev->valid_links & BIT(nla_get_u8(link_id))))) {
 			err = -EINVAL;
 			goto out_unlock;
-		} else {
-			/* MLO -> require valid link ID */
-			if (wdev->valid_links &&
-			    (!link_id ||
-			     !(wdev->valid_links & BIT(nla_get_u8(link_id))))) {
-				err = -EINVAL;
-				goto out_unlock;
-			}
+		}
 
-			/* non-MLO -> no link ID attribute accepted */
-			if (!wdev->fallback_valid_links &&
-			    !wdev->valid_links && link_id) {
-				err = -EINVAL;
-				goto out_unlock;
-			}
+		/* non-MLO -> no link ID attribute accepted */
+		if (!wdev->valid_links && link_id) {
+			err = -EINVAL;
+			goto out_unlock;
 		}
 	}
 
diff --git a/net/wireless/sme.c b/net/wireless/sme.c
index ce25c779ef96..879a7d768516 100644
--- a/net/wireless/sme.c
+++ b/net/wireless/sme.c
@@ -872,7 +872,6 @@ void __cfg80211_connect_result(struct net_device *dev,
 		cfg80211_put_bss(wdev->wiphy, cr->links[link].bss);
 	}
 	wdev->valid_links = cr->valid_links;
-	wdev->fallback_valid_links = cr->fallback_valid_links;
 	for_each_valid_link(cr, link)
 		wdev->links[link].client.current_bss =
 			bss_from_pub(cr->links[link].bss);
@@ -994,11 +993,6 @@ void cfg80211_connect_done(struct net_device *dev,
 		link_info_size += params->links[link].addr ? ETH_ALEN : 0;
 	}
 
-	for_each_fallback_valid_link(params, link) {
-		cfg80211_update_link_bss(wdev, &params->links[0].bss);
-		link_info_size += params->links[0].bssid ? ETH_ALEN : 0;
-	}
-
 	ev = kzalloc(sizeof(*ev) + (params->ap_mld_addr ? ETH_ALEN : 0) +
 		     params->req_ie_len + params->resp_ie_len +
 		     params->fils.kek_len + params->fils.pmk_len +
@@ -1058,8 +1052,6 @@ void cfg80211_connect_done(struct net_device *dev,
 	if (params->fils.update_erp_next_seq_num)
 		ev->cr.fils.erp_next_seq_num = params->fils.erp_next_seq_num;
 	ev->cr.valid_links = params->valid_links;
-	ev->cr.fallback_valid_links = params->fallback_valid_links;
-
 	for_each_valid_link(params, link) {
 		if (params->links[link].bss)
 			cfg80211_hold_bss(
@@ -1081,19 +1073,6 @@ void cfg80211_connect_done(struct net_device *dev,
 			next += ETH_ALEN;
 		}
 	}
-
-	for_each_fallback_valid_link(params, link) {
-		if (params->links[0].bss)
-			cfg80211_hold_bss(bss_from_pub(params->links[0].bss));
-		ev->cr.links[link].bss = params->links[0].bss;
-		if (params->links[0].bssid) {
-			ev->cr.links[link].bssid = next;
-			memcpy((void *)ev->cr.links[link].bssid,
-			       params->links[0].bssid,
-			       ETH_ALEN);
-			next += ETH_ALEN;
-		}
-	}
 	ev->cr.status = params->status;
 	ev->cr.timeout_reason = params->timeout_reason;
 
diff --git a/net/wireless/util.c b/net/wireless/util.c
index 6c5dcfada7d7..11c2e5e0a622 100644
--- a/net/wireless/util.c
+++ b/net/wireless/util.c
@@ -2680,7 +2680,6 @@ void cfg80211_remove_link(struct wireless_dev *wdev, unsigned int link_id)
 	rdev_del_intf_link(rdev, wdev, link_id);
 
 	wdev->valid_links &= ~BIT(link_id);
-	wdev->fallback_valid_links &= ~BIT(link_id);
 
 	eth_zero_addr(wdev->links[link_id].addr);
 }
@@ -2700,9 +2699,6 @@ void cfg80211_remove_links(struct wireless_dev *wdev)
 	if (wdev->valid_links) {
 		for_each_valid_link(wdev, link_id)
 			cfg80211_remove_link(wdev, link_id);
-	} else if (wdev->fallback_valid_links) {
-		for_each_fallback_valid_link(wdev, link_id)
-			cfg80211_remove_link(wdev, link_id);
 	}
 	wdev_unlock(wdev);
 }
-- 
2.34.1

