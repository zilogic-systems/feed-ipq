From 3a9b77cf6ba44b7f166989e4b4642c40745d47e1 Mon Sep 17 00:00:00 2001
From: Mohan Prabu <quic_mprabub@quicinc.com>
Date: Mon, 25 Nov 2024 21:41:45 +0530
Subject: [PATCH] cfg80211: Don't reset ssid len and nlportid after a link
 removal.

During a link removal from a MLD, stop ap is called
where nlportid is getting reset to 0. Which is wrong
as still the partner links and MLD will be up and running.
It causes the next consequent association to fail by rejecting M2
packet. This change fixes by resetting the nlportid only during
the last link removal/if all links are already
removed.

Same operation for ssid len as well.

Change-Id: I395a657076e548b3bbcd6d845e36f57731e9d251
Signed-off-by: Mohan Prabu <quic_mprabub@quicinc.com>
---
 net/wireless/ap.c | 11 +++++++++--
 1 file changed, 9 insertions(+), 2 deletions(-)

diff --git a/net/wireless/ap.c b/net/wireless/ap.c
index 3bb56c9106c9..5acbb4e04cee 100644
--- a/net/wireless/ap.c
+++ b/net/wireless/ap.c
@@ -37,11 +37,18 @@ static int ___cfg80211_stop_ap(struct cfg80211_registered_device *rdev,
 
 	err = rdev_stop_ap(rdev, dev, link_id, &params);
 	if (!err) {
-		wdev->conn_owner_nlportid = 0;
 		wdev->links[link_id].ap.beacon_interval = 0;
 		memset(&wdev->links[link_id].ap.chandef, 0,
 		       sizeof(wdev->links[link_id].ap.chandef));
-		wdev->u.ap.ssid_len = 0;
+
+		if (hweight16(wdev->valid_links) <= 1) {
+			/* Clear this only when there is one or lesser valid
+			 * link, otherwise consider that some link is present
+			 */
+			wdev->conn_owner_nlportid = 0;
+			wdev->u.ap.ssid_len = 0;
+		}
+
 		rdev_set_qos_map(rdev, dev, NULL);
 		if (notify)
 			nl80211_send_ap_stopped(wdev, link_id);
-- 
2.34.1

