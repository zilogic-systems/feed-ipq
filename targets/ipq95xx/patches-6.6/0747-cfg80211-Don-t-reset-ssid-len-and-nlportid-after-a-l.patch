From df3215e8c1a03a4207377d3e1e938f92f6fcd8a8 Mon Sep 17 00:00:00 2001
From: Pooventhiran G <quic_pooventh@quicinc.com>
Date: Mon, 9 Dec 2024 13:12:02 +0530
Subject: [PATCH] cfg80211: Don't reset ssid len and nlportid after a link
 removal

During a link removal from a MLD, stop ap is called
where nlportid is getting reset to 0. Which is wrong
as still the partner links and MLD will be up and running.
It causes the next consequent association to fail by rejecting M2
packet. This change fixes by resetting the nlportid only during
the last link removal/if all links are already
removed.

Same operation for ssid len as well.

Reason for revert: Issue fixed in 3a9b77cf6ba4

Change-Id: I3215edcdbb5c85f4c49c83ef6b0d24eb574bb07c
---
 net/wireless/ap.c | 11 +++++++++--
 1 file changed, 9 insertions(+), 2 deletions(-)

diff --git a/net/wireless/ap.c b/net/wireless/ap.c
index 3bb56c9106c9..5acbb4e04cee 100644
--- a/net/wireless/ap.c
+++ b/net/wireless/ap.c
@@ -37,11 +37,18 @@ static int ___cfg80211_stop_ap(struct cfg80211_registered_device *rdev,
 
 	err = rdev_stop_ap(rdev, dev, link_id, &params);
 	if (!err) {
-		wdev->conn_owner_nlportid = 0;
 		wdev->links[link_id].ap.beacon_interval = 0;
 		memset(&wdev->links[link_id].ap.chandef, 0,
 		       sizeof(wdev->links[link_id].ap.chandef));
-		wdev->u.ap.ssid_len = 0;
+
+		if (hweight16(wdev->valid_links) <= 1) {
+			/* Clear this only when there is one or lesser valid
+			 * link, otherwise consider that some link is present
+			 */
+			wdev->conn_owner_nlportid = 0;
+			wdev->u.ap.ssid_len = 0;
+		}
+
 		rdev_set_qos_map(rdev, dev, NULL);
 		if (notify)
 			nl80211_send_ap_stopped(wdev, link_id);
-- 
2.34.1

